{"version":3,"sources":["webpack:///src/app/pages/libro-mayor/libro-mayor-routing.module.ts","webpack:///src/app/pages/libro-mayor/listado/libro-mayor.component.ts","webpack:///src/app/pages/libro-mayor/listado/libro-mayor.component.html","webpack:///src/app/pages/libro-mayor/libro-mayor.module.ts"],"names":["routes","path","component","pathMatch","data","title","LibroMayorRoutingModule","forChild","imports","exports","LibroMayorComponent","dataService","appConfig","cd","router","route","authUserService","serializer","functionService","userService","calendar","titleBarService","loaded","isCollapsed","registros","posAsiento","fechaInicio","fechaFin","cuentaListado","paginateData","page","cuentaSelected","cuentasCount","size","subTitle","getToday","id","cuenta","row","name","nombre","fecha","getDateFromString","asiento","undefined","formatDate","getValueFromObject","ex","paginateListModel","addParameter","getIdEmpresaSelected","toString","year","month","day","httpFunction","ASIENTO_CUENTA_RESUMEN","JSON","parse","stringify","reg","debito","paginateList","refresh","httpOperation","http","ws","enumUrl","asientoRegistroDTOPage","content","markForCheck","urlResource","selectCuenta","selector","templateUrl","styleUrls","LibroMayorModule","declarations","providers"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,SADR;AAEEC,iBAAS,EAAE,kFAFb;AAGEC,iBAAS,EAAE,MAHb;AAIEC,YAAI,EAAE;AACJC,eAAK,EAAE;AADH;AAJR,OADqB,CAAvB;;UAeaC,uB;;;;;cAAAA;;;;2BAAAA,uB;AAAuB,S;AAAA,kBAHzB,CAAC,6DAAaC,QAAb,CAAsBP,MAAtB,CAAD,CAGyB,EAFxB,4DAEwB;;;;4HAAvBM,uB,EAAuB;AAAA;AAAA,oBAFxB,4DAEwB;AAAA,S;AAFZ,O;;;;;wEAEXA,uB,EAAuB;gBAJnC,sDAImC;iBAJ1B;AACRE,mBAAO,EAAE,CAAC,6DAAaD,QAAb,CAAsBP,MAAtB,CAAD,CADD;AAERS,mBAAO,EAAE,CAAC,4DAAD;AAFD,W;AAI0B,U;;;;;;;;;;;;;;;;;;ACrBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACiBoB;;AACA;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA,mBAAwB,WAAxB;AAAiC,WAAjC;;AAAmC;;AAAK;;AAC/F;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAkB,WAAlB;;AAAoB;;AAAK;;;;;;;;AAYhF;;AACA;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA;AAAA,mBAAwB,WAAxB;AAAkC,WAAlC;;AAAoC;;AAAK;;AAChG;;AAAuD;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,WAAT;AAAmB,WAAnB;;AAAqB;;AAAK;;;;;;AAqDrE;;AAA0B;;AAA6C;;;;;;;;AAA7C;;AAAA;;;;;;AAG1B;;AAA2B;;AAA8C;;;;;;;;AAA9C;;AAAA;;;;;;AAG3B;;AAAiD;;AAA4D;;;;;;;;AAA5D;;AAAA;;;;;;AAGjD;;AAAmD;;AAA6D;;;;;;;;AAA7D;;AAAA;;;;;;AA/B3D;;AACA;;AAEI;;AACI;;AACJ;;AAEA;;AACI;;AACJ;;AAEA;;AACI;;AACJ;;AAEA;;AACI;;AACJ;;AAIA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AA0BA;;;;;;;;AAvDQ;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAMG;;AAAA;;AAGA;;AAAA;;AAGuB;;AAAA;;AAGC;;AAAA;;;;;;;;AA9CnD;;AACI;;AACI;;AACI;;AAAe;;AAAC;;AAChB;;AAAe;;AAAK;;AACpB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAO;;AACvB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAO;;AAEvB;;AAAgB;;AAAY;;AAC5B;;AAAgB;;AAAa;;AACjC;;AACA;;AACI;;AA8DJ;;AACJ;;AACJ;;AACA;;AAAkC;AAAA;;AAAA;;AAAA;AAAA;;AAAiC;;;;;;AAjE5B;;AAAA;;AAiE/B;;AAAA;;QDzGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UAEaC,mB;AAuBT;;;;AAID,qCAAmBC,WAAnB,EACmBC,SADnB,EACiDC,EADjD,EAEmBC,MAFnB,EAE0CC,KAF1C,EAGmBC,eAHnB,EAImBC,UAJnB,EAIqDC,eAJrD,EAI8FC,WAJ9F,EAKmBC,QALnB,EAKiDC,eALjD,EAKiF;AAAA;;AAL9D,eAAAV,WAAA,GAAAA,WAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AAA8B,eAAAC,EAAA,GAAAA,EAAA;AAC9B,eAAAC,MAAA,GAAAA,MAAA;AAAuB,eAAAC,KAAA,GAAAA,KAAA;AACvB,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AAAkC,eAAAC,eAAA,GAAAA,eAAA;AAAyC,eAAAC,WAAA,GAAAA,WAAA;AAC3E,eAAAC,QAAA,GAAAA,QAAA;AAA8B,eAAAC,eAAA,GAAAA,eAAA;AA/BlD;;;;;AAKA;;;;;AAIS,eAAAC,MAAA,GAAkB,KAAlB;AACA,eAAAC,WAAA,GAAsB,KAAtB;AACA,eAAAC,SAAA,GAAmC,EAAnC;AACA,eAAAC,UAAA,GAAqB,CAArB;AACA,eAAAC,WAAA,GAAuB,IAAI,kEAAJ,CAAY,IAAZ,EAAiB,CAAjB,EAAmB,EAAnB,CAAvB;AACA,eAAAC,QAAA,GAAoB,IAAI,kEAAJ,CAAY,IAAZ,EAAiB,CAAjB,EAAmB,CAAnB,CAApB;AACA,eAAAC,aAAA,GAAqC,IAAI,gFAAJ,CAAwB,EAAxB,CAArC,CAgByE,CAhBP;;AAClE,eAAAC,YAAA,GAAkC,IAAI,4FAAJ,EAAlC;AACA,eAAAC,IAAA,GAAe,CAAf;AACA,eAAAC,cAAA,GAAsC,IAAI,gFAAJ,CAAwB,EAAxB,CAAtC;AACA,eAAAC,YAAA,GAAuB,CAAvB;AACA,eAAAC,IAAA,GAAe,EAAf;AAaL,eAAKZ,eAAL,CAAqBhB,KAArB,GAA6B,aAA7B;AACA,eAAKgB,eAAL,CAAqBa,QAArB,GAAgC,0DAAhC;AACD;AAEF;;;;;;;;;qCAKY;AACT,iBAAKR,WAAL,GAAkB,IAAI,kEAAJ,CAAY,IAAZ,EAAiB,CAAjB,EAAmB,CAAnB,CAAlB;AACA,iBAAKC,QAAL,GAAgB,KAAKP,QAAL,CAAce,QAAd,EAAhB;AACA,iBAAKJ,cAAL,CAAoBK,EAApB,GAAyB,EAAzB,CAHS,CAGoB;AAE9B;AAGF;;;;;;;uCAMoBC,M,EAA6B;AAC9C,iBAAKN,cAAL,GAAsBM,MAAtB;AACD;;;mCAEQC,G,EAAKC,I,EAAY;AACxB,gBAAI;AACF,sBAAOA,IAAP;AACE,qBAAK,eAAL;AACE,yBAAO,KAAKX,aAAL,CAAmBY,MAA1B;AACA;;AACF,qBAAK,OAAL;AACE,sBAAIC,KAAK,GAAQ,KAAKvB,eAAL,CAAqBwB,iBAArB,CAAuCJ,GAAG,CAACK,OAAJ,CAAYF,KAAnD,EAAyD,GAAzD,EAA6D,CAA7D,EAA+D,IAA/D,CAAjB;;AACA,sBAAGA,KAAK,IAAEG,SAAV,EAAoB;AAClB,2BAAO,EAAP;AACD;;AACD,yBAAO,KAAK1B,eAAL,CAAqB2B,UAArB,CAAgCJ,KAAhC,CAAP;;AACF;AACE,yBAAO,KAAKvB,eAAL,CAAqB4B,kBAArB,CAAwCR,GAAxC,EAA4CC,IAA5C,CAAP;AAXJ;AAaD,aAdD,CAcC,OAAMQ,EAAN,EAAS;AACR,qBAAO,EAAP;AACD;AACF;;;oCAEM;AACL,gBAAMC,iBAAiB,GAAmB,IAAI,4FAAJ,CAAsB,KAAKlB,IAA3B,EAAgC,KAAKG,IAArC,CAA1C;AACAe,6BAAiB,CAACC,YAAlB,CAA+B,SAA/B,EAA0C,KAAK9B,WAAL,CAAiB+B,oBAAjB,GAAwCC,QAAxC,EAA1C;AACAH,6BAAiB,CAACC,YAAlB,CAA+B,aAA/B,EAA6C,KAAKvB,WAAL,CAAiB0B,IAAjB,GAAwB,GAAxB,GAA8B,KAAK1B,WAAL,CAAiB2B,KAA/C,GAAuD,GAAvD,GAA6D,KAAK3B,WAAL,CAAiB4B,GAA9E,GAAoF,WAAjI;AACAN,6BAAiB,CAACC,YAAlB,CAA+B,UAA/B,EAA0C,KAAKtB,QAAL,CAAcyB,IAAd,GAAqB,GAArB,GAA2B,KAAKzB,QAAL,CAAc0B,KAAzC,GAAiD,GAAjD,GAAuD,KAAK1B,QAAL,CAAc2B,GAArE,GAA2E,WAArH;AACAN,6BAAiB,CAACC,YAAlB,CAA+B,QAA/B,EAAwC,KAAKlB,cAAL,CAAoBK,EAApB,CAAuBe,QAAvB,EAAxC;AACA,iBAAKxC,WAAL,CAAiB4C,YAAjB,CAA8B,wEAAOC,sBAArC,EAA4D,IAA5D,EAAiER,iBAAjE,EAAmF,EAAnF;AACA,iBAAKpB,aAAL,GAAqB6B,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK5B,cAApB,CAAX,CAArB;AACF;;;mCAKQ6B,G,EAAG;AACT,gBAAG;AACD,kBAAGA,GAAG,CAACC,MAAJ,GAAa,CAAhB,EAAkB;AAChB,uBAAO,UAAP;AACD,eAFD,MAEK;AACH,uBAAO,WAAP;AACD;AACF,aAND,CAMC,OAAMd,EAAN,EAAS;AACR,qBAAO,EAAP;AACD;AAEF;;;kCAGOe,Y,EAA+B;AACrC,iBAAKhC,IAAL,GAAYgC,YAAY,CAAChC,IAAzB;AACA,iBAAKG,IAAL,GAAY6B,YAAY,CAAC7B,IAAzB;AACA,iBAAK8B,OAAL;AACD;AAEH;;;;;;;;qCAOYC,a,EAAmBC,I,EAAc7D,I,EAAU8D,E,EAAM;AAC3D,oBAAOA,EAAE,CAACC,OAAV;AACE,mBAAK,wEAAOX,sBAAZ;AACE,qBAAKhC,SAAL,GAAiBpB,IAAI,CAACgE,sBAAL,CAA4BC,OAA7C;AACA,qBAAKxC,YAAL,GAAoBzB,IAAI,CAACgE,sBAAzB;AACA,qBAAK9C,MAAL,GAAc,IAAd;AACA,qBAAKT,EAAL,CAAQyD,YAAR;AACF;AANF;AAQA;;;wCAEaC,W,EAAoBP,a,EAAuB5D,I,EAAW8D,E,EAAQ,CAC3E;;;;;;;yBArISxD,mB,EAAmB,oJ,EAAA,sI,EAAA,gI,EAAA,uH,EAAA,+H,EAAA,+J,EAAA,8H,EAAA,4J,EAAA,oI,EAAA,uI,EAAA,4I;AAAA,O;;;cAAnBA,mB;AAAmB,oC;AAAA,iB;AAAA,e;AAAA,gzC;AAAA;AAAA;;;ACjChC;;AAQI;;AACI;;AACI;;AACI;;AAA0B;;AAAO;;AACjC;;AACI;;AAA+D;AAAA;AAAA;;AAA/D;;AACA;;AAA8D;AAAA;;AAAA;;AAAA,qBAAS,YAAT;AAAmB,aAAnB;;AAAmC;;AACrG;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AACA;;AACI;;AAA+D;AAAA;AAAA;;AAA/D;;AACA;;AAA8D;AAAA;;AAAA;;AAAA,qBAAS,YAAT;AAAoB,aAApB;;AAAoC;;AACtG;;AACA;;AAKJ;;AACJ;;AACA;;AACI;;AACI;;AAA0B;;AAAM;;AAChC;;AAAe;AAAA,qBAAe,IAAA8D,YAAA,QAAf;AAAmC,aAAnC;;AAAqC;;AACxD;;AACJ;;AACA;;AACI;;AAA6C;AAAA,qBAAS,IAAAT,OAAA,EAAT;AAAkB,aAAlB;;AAAoB;;AAAM;;AAC3E;;AACJ;;AAEA;;AAkFJ;;;;;;AArHmF;;AAAA,iGAAyB,gBAAzB,EAAyB,GAAzB;;AAcA;;AAAA,8FAAsB,gBAAtB,EAAsB,GAAtB;;AAqBlE;;AAAA;;;;;;;;;wEDfJrD,mB,EAAmB;gBAhB/B,uDAgB+B;iBAhBrB;AACT+D,oBAAQ,EAAE,aADD;AAETC,uBAAW,EAAE,8BAFJ;AAGTC,qBAAS,EAAE,CAAC,8BAAD;AAHF,W;AAgBqB,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjChC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAmDaC,gB;;;;;cAAAA;;;;2BAAAA,gB;AAAgB,S;AAAA,mBAJhB,CACT,mEADS,C;AAEV,kBA1BQ,CACP,4DADO,EAEP,8FAFO,EAGP,2FAHO,EAIP;AACA,4FALO,EAMP,kEANO,EAOP,0DAPO,EAQP,wDARO,EASP,0DATO,EAUP,oEAVO,EAWP,gEAXO,EAYP,qEAZO,EAaP,oEAbO,EAcP,mEAdO,EAeP,0EAfO,EAgBP,qFAhBO,EAiBP,2EAjBO,EAkBP,kEAlBO,CA0BR;;;;4HAEUA,gB,EAAgB;AAAA,yBANzB,mFAMyB;AANN,oBArBnB,4DAqBmB,EApBnB,8FAoBmB,EAnBnB,2FAmBmB,EAlBnB;AACA,8FAiBmB,EAhBnB,kEAgBmB,EAfnB,0DAemB,EAdnB,wDAcmB,EAbnB,0DAamB,EAZnB,oEAYmB,EAXnB,gEAWmB,EAVnB,qEAUmB,EATnB,oEASmB,EARnB,mEAQmB,EAPnB,0EAOmB,EANnB,qFAMmB,EALnB,2EAKmB,EAJnB,kEAImB;AAMM,S;AAVV,O;;;;;wEAUNA,gB,EAAgB;gBA7B5B,sDA6B4B;iBA7BnB;AACRpE,mBAAO,EAAE,CACP,4DADO,EAEP,8FAFO,EAGP,2FAHO,EAIP;AACA,gGALO,EAMP,kEANO,EAOP,0DAPO,EAQP,wDARO,EASP,0DATO,EAUP,oEAVO,EAWP,gEAXO,EAYP,qEAZO,EAaP,oEAbO,EAcP,mEAdO,EAeP,0EAfO,EAgBP,qFAhBO,EAiBP,2EAjBO,EAkBP,kEAlBO,CADD;AAqBRC,mBAAO,EAAE,EArBD;AAsBRoE,wBAAY,EAAE,CACZ,mFADY,CAtBN;AAyBRC,qBAAS,EAAE,CACT,mEADS;AAzBH,W;AA6BmB,U","file":"pages-libro-mayor-libro-mayor-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LibroMayorComponent } from './listado/libro-mayor.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: 'listado',\n    component: LibroMayorComponent,\n    pathMatch: 'full',\n    data: {\n      title: 'Listado'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LibroMayorRoutingModule { }\n","import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\nimport { AsientoModel } from '../../../models/Asiento.model';\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\nimport { TitleBarService } from '../../../services/TitleBar.service';\nimport { UserService } from '../../../services/User.service';\n\n@Component({\n  selector: 'libro-mayor',\n  templateUrl: './libro-mayor.component.html',\n  styleUrls: ['./libro-mayor.component.scss']\n})\n\n// export class vista{\n//   public fecha: string = \"\";\n//   public referencia: string = \"\";\n//   public tercero: string = \"\";\n//   public cuentaContable: string = \"\";\n//   public debito: string = \"\";\n//   public credito: string = \"\";\n//   public debito\n// }\n\nexport class LibroMayorComponent {\n  /************************************************************************************************************************\n   * Inputs && Outputs && Properties\n   *\n   ************************************************************************************************************************/\n\n  /************************************************************************************************************************\n   * Variables\n   *\n   ************************************************************************************************************************/\n    public loaded: boolean = false;\n    public isCollapsed:boolean = false;\n    public registros:AsientoRegistroModel[] = [];\n    public posAsiento: number = 0;\n    public fechaInicio: NgbDate = new NgbDate(2022,9,26);\n    public fechaFin: NgbDate = new NgbDate(2022,1,1);\n    public cuentaListado: CuentaContableModel = new CuentaContableModel(\"\"); //Es la cuenta con la que se genero el listado\n    public paginateData: PaginateDataModel = new PaginateDataModel();\n    public page: number = 0;\n    public cuentaSelected: CuentaContableModel = new CuentaContableModel(\"\");\n    public cuentasCount: number = 0;\n    public size: number = 10; \n\n    /************************************************************************************************************************\n    * Constructor && Implements\n    *\n    ************************************************************************************************************************/\n   constructor(public dataService: DataService,\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\n               public router: Router, public route: ActivatedRoute,\n               public authUserService: AuthUserService, \n               public serializer: UrlSerializer, public functionService: FunctionService, public userService: UserService,\n               public calendar: NgbCalendar, public titleBarService: TitleBarService){\n      \n      this.titleBarService.title = \"Libro Mayor\";\n      this.titleBarService.subTitle = \"Desde esta pantalla se podrán mostrar los libros mayores\";\n    }\n  \n   /************************************************************************************************************************\n    *\n    * Eventos\n    *\n    ************************************************************************************************************************/\n    ngOnInit() {\n      this.fechaInicio= new NgbDate(2000,1,1);\n      this.fechaFin = this.calendar.getToday();\n      this.cuentaSelected.id = 71; //HARDCODE\n      \n    }\n\n\n   /************************************************************************************************************************\n    * FUNCTIONS\n    *\n    ************************************************************************************************************************/\n    \n   \n   public selectCuenta(cuenta: CuentaContableModel) {\n      this.cuentaSelected = cuenta; \n    }\n\n    getField(row, name: string){\n      try {\n        switch(name){\n          case \"cuenta-nombre\":\n            return this.cuentaListado.nombre;\n            break;\n          case \"fecha\":\n            let fecha:Date = this.functionService.getDateFromString(row.asiento.fecha,\"-\",0,true);\n            if(fecha==undefined){\n              return \"\";\n            }\n            return this.functionService.formatDate(fecha);\n          default:\n            return this.functionService.getValueFromObject(row,name);\n        }\n      }catch(ex){\n        return \"\";\n      }\n    }\n\n    refresh(){\n      const paginateListModel:PaginateListModel=new PaginateListModel(this.page,this.size);\n      paginateListModel.addParameter(\"empresa\", this.userService.getIdEmpresaSelected().toString());\n      paginateListModel.addParameter(\"fechaInicio\",this.fechaInicio.year + \"-\" + this.fechaInicio.month + \"-\" + this.fechaInicio.day + \" 00:00:01\")\n      paginateListModel.addParameter(\"fechaFin\",this.fechaFin.year + \"-\" + this.fechaFin.month + \"-\" + this.fechaFin.day + \" 23:59:59\")\n      paginateListModel.addParameter(\"cuenta\",this.cuentaSelected.id.toString());\n      this.dataService.httpFunction(enumWS.ASIENTO_CUENTA_RESUMEN,this,paginateListModel,{})\n      this.cuentaListado = JSON.parse(JSON.stringify(this.cuentaSelected));\n   } \n\n  \n\n   \n   getClass(reg):string{\n      try{\n        if(reg.debito > 0){\n          return \"reg-debe\";\n        }else{\n          return \"reg-haber\";\n        }\n      }catch(ex){\n        return \"\";\n      }\n\n    }\n\n\n    SetPage(paginateList: PaginateListModel){\n      this.page = paginateList.page;\n      this.size = paginateList.size; \n      this.refresh();\n    }\n\n  /************************************************************************************************************************\n   *\n   * RESPONSE OK/ERROR\n   *\n   ************************************************************************************************************************/\n\n\n   responseOk(httpOperation:any, http: string, data:any, ws:any ){\n    switch(ws.enumUrl) {\n      case enumWS.ASIENTO_CUENTA_RESUMEN:\n        this.registros = data.asientoRegistroDTOPage.content;\n        this.paginateData = data.asientoRegistroDTOPage;\n        this.loaded = true;\n        this.cd.markForCheck();\n      break;\n  }\n   }\n\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\n   }\n}\n","<section id=\"collapse\">\n    <!-- <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n            <div class=\"content-header\">Libro Mayor</div>\n            <p class=\"content-sub-header mb-1\">Desde esta pantalla se podrán mostrar los libros mayores</p>\n        </div>\n    </div> -->\n\n    <div class=\"row mt-2\">\n        <div class=\"col-4 col-md-4 col-xl-2\">\n            <fieldset class=\"form-group\">\n                <label for=\"input-nombre\">Periodo</label>\n                <div class=\"input-group\">\n                    <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"fechaInicio\" ngbDatepicker [footerTemplate]=\"footerTemplate\" #d=\"ngbDatepicker\" />\n                    <button class=\"btn btn-outline-info far fa-calendar-alt ml-1\" (click)=\"d.toggle()\" type=\"button\"></button>\n                </div>\n                <ng-template #footerTemplate>\n                    <hr class=\"my-0\" />\n                    <button class=\"btn btn-primary btn-sm m-2 float-start\" (click)=\"model = today; d.close()\">Today</button>\n                    <button class=\"btn btn-secondary btn-sm m-2 float-end\" (click)=\"d.close()\">Close</button>\n                </ng-template>\n            </fieldset>\n        </div>\n        <div class=\"col-4 col-md-4 col-xl-2\">\n            <fieldset class=\"form-group\">\n                <label for=\"input-nombre\"></label>\n                <div class=\"input-group\">\n                    <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"fechaFin\" ngbDatepicker [footerTemplate]=\"footerTemplate\" #df=\"ngbDatepicker\" />\n                    <button class=\"btn btn-outline-info far fa-calendar-alt ml-1\" (click)=\"df.toggle()\" type=\"button\"></button>\n                </div>\n                <ng-template #footerTemplate>\n                    <hr class=\"my-0\" />\n                    <button class=\"btn btn-primary btn-sm m-2 float-start\" (click)=\"model = today; df.close()\">Today</button>\n                    <button class=\"btn btn-secondary btn-sm m-2 float-end\" (click)=\"df.close()\">Close</button>\n                </ng-template>\n            </fieldset>\n        </div>\n        <div class=\"col-4 col-md-6 col-xl-4\">\n            <fieldset class=\"form-group\">\n                <label for=\"input-nombre\">Cuenta</label>\n                <cuenta-select (changeEvent)=\"selectCuenta($event)\"></cuenta-select>\n            </fieldset>\n        </div>\n        <div class=\"col-4\">\n            <button class=\"btn btnl-lg btn-primary mt-3\" (click)=\"refresh()\">CARGAR</button>\n        </div>\n    </div>\n\n    <ng-template [ngIf]=\"loaded\">\n        <div class=\"container-table\">\n            <table width=\"100%\" class=\"table table-transparent table-striped table-dark\">\n                <thead class=\"thead-dark\">\n                    <th width=\"5%\">#</th>\n                    <th width=\"8%\">Fecha</th>\n                    <th width=\"18%\">Referencia</th>\n                    <th width=\"23%\">Tercero</th>\n                    <th width=\"10%\">Debito</th>\n                    <th width=\"10%\">Credito</th>\n\n                    <th width=\"13%\">Saldo Debito</th>\n                    <th width=\"13%\">Saldo Credito</th>\n                </thead>\n                <tbody>\n                    <ng-template ngFor let-reg [ngForOf]=\"registros\">\n                        <tr class=\"row-space\"></tr>\n                        <tr>\n                            <!-- número # -->\n                            <td>\n                                {{ getField(reg, \"asiento.id\") }}\n                            </td>\n                            <!-- FECHA -->\n                            <td>\n                                {{ getField(reg, \"fecha\") }}\n                            </td>\n                            <!-- referencia -->\n                            <td>\n                                {{ getField(reg, \"asiento.referencia\") }}\n                            </td>\n                            <!-- Tercero -->\n                            <td>\n                                {{ getField(reg, \"entidad.nombre\") }}\n                            </td>\n                            <!-- <td class=\"td-cuenta\">\n                        <p class=\"{{getClass(reg)}}\">{{ getField(reg,\"cuenta-nombre\") }}</p>\n                    </td> -->\n                            <td class=\"td-debito monto\">\n                                <p *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.debito) }}</p>\n                            </td>\n                            <td class=\"td-credito monto\">\n                                <p *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.credito) }}</p>\n                            </td>\n                            <td class=\"saldo-debito monto\">\n                                <p class=\"p-saldo-debito\" *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.saldoAntDebitoEmpresa) }}</p>\n                            </td>\n                            <td class=\"saldo-credito monto\">\n                                <p class=\"p-saldo-credito\" *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.saldoAntCreditoEmpresa) }}</p>\n                            </td>\n                        </tr>\n                        <!-- <tr >\n                    <td>\n                        {{ getFieldReg('entidad',reg) }}\n                    </td>\n                    <td class=\"td-cuenta\">\n                        <p class=\"{{getClass(reg)}}\">{{ reg.cuenta.nombre }}</p>\n                    </td>\n                    <td class=\"td-debito\">\n                        <p *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.debito) }}</p>\n                    </td>\n                    <td class=\"td-credito\">\n                        <p *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.credito) }}</p>\n                    </td>\n                </tr> -->\n                        <!-- <tr class=\"row-footer\">\n                    <td colspan=\"5\">\n                        \n                    </td>\n                    <td class=\"td-debito td-total\"> \n                        <p>{{ functionService.formatMoney(asiento.debito) }}</p>\n                    </td>\n                    <td class=\"td-credito td-total\"> \n                        <p>{{ functionService.formatMoney(asiento.debito) }}</p>\n                     </td>\n                </tr> -->\n                        <tr class=\"row-space\"></tr>\n                    </ng-template>\n                </tbody>\n            </table>\n        </div>\n        <footer [paginate]=\"paginateData\" (setPageEvent)=\"SetPage($event)\"></footer>\n    </ng-template>\n</section>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from '@angular/core';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { ChartistModule } from 'ng-chartist';\nimport { ChartsModule } from 'ng2-charts';\nimport { ComponentsModule } from '../../../../../coreApp/src/app/shared/components.module';\nimport { PipeModule } from '../../../../../coreApp/src/app/shared/pipes/pipe.module';\nimport { ComponentsProyectModule } from '../../components/components-proyect.module';\nimport { UserService } from \"../../services/User.service\";\nimport { SharedAppModule } from \"../../SharedApp.module\";\nimport { LibroMayorRoutingModule } from \"./libro-mayor-routing.module\";\nimport { LibroMayorComponent } from \"./listado/libro-mayor.component\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsProyectModule,\n    ComponentsModule,\n    // CoreModule,\n    LibroMayorRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ChartsModule,\n    ChartistModule,\n    NgxChartsModule,\n    NgApexchartsModule,\n    HttpClientModule,\n    NgbModule,\n    NgSelectModule,\n    NgxDatatableModule,\n    PipeModule,\n    NgbTooltipModule,\n    SharedAppModule\n  ],\n  exports: [],\n  declarations: [\n    LibroMayorComponent,\n  ],\n  providers: [\n    UserService\n  ],\n})\nexport class LibroMayorModule { }\n"]}