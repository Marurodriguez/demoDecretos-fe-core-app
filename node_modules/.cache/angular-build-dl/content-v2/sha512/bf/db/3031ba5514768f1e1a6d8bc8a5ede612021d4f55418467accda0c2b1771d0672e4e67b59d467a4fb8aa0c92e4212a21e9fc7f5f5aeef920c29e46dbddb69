{"version":3,"sources":["./src/app/pages/libro-mayor/libro-mayor-routing.module.ts","./src/app/pages/libro-mayor/listado/libro-mayor.component.ts","./src/app/pages/libro-mayor/listado/libro-mayor.component.html","./src/app/pages/libro-mayor/libro-mayor.module.ts"],"names":[],"mappings":"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","file":"pages-libro-mayor-libro-mayor-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LibroMayorComponent } from './listado/libro-mayor.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'listado',\r\n    component: LibroMayorComponent,\r\n    pathMatch: 'full',\r\n    data: {\r\n      title: 'Listado'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LibroMayorRoutingModule { }\r\n","import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\r\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\r\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\r\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\r\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\r\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\r\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\r\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\r\nimport { AsientoModel } from '../../../models/Asiento.model';\r\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\r\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\r\nimport { EmpresaModel } from '../../../models/Empresa.model';\r\nimport { MonedaModel } from '../../../models/Moneda.model';\r\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\r\nimport { TitleBarService } from '../../../services/TitleBar.service';\r\nimport { UserService } from '../../../services/User.service';\r\n\r\n@Component({\r\n  selector: 'libro-mayor',\r\n  templateUrl: './libro-mayor.component.html',\r\n  styleUrls: ['./libro-mayor.component.scss']\r\n})\r\n\r\n// export class vista{\r\n//   public fecha: string = \"\";\r\n//   public referencia: string = \"\";\r\n//   public tercero: string = \"\";\r\n//   public cuentaContable: string = \"\";\r\n//   public debito: string = \"\";\r\n//   public credito: string = \"\";\r\n//   public debito\r\n// }\r\n\r\nexport class LibroMayorComponent {\r\n  /************************************************************************************************************************\r\n   * Inputs && Outputs && Properties\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n  /************************************************************************************************************************\r\n   * Variables\r\n   *\r\n   ************************************************************************************************************************/\r\n    public loaded: boolean = false;\r\n    public isCollapsed:boolean = false;\r\n    public registros:AsientoRegistroModel[] = [];\r\n    public posAsiento: number = 0;\r\n    public fechaInicio: NgbDate = new NgbDate(2022,9,26);\r\n    public fechaFin: NgbDate = new NgbDate(2022,1,1);\r\n    public cuentaListado: CuentaContableModel = new CuentaContableModel(\"\"); //Es la cuenta con la que se genero el listado\r\n    public paginateData: PaginateDataModel = new PaginateDataModel();\r\n    public page: number = 0;\r\n    public cuentaSelected: CuentaContableModel = new CuentaContableModel(\"\");\r\n    public cuentasCount: number = 0;\r\n    public size: number = 10; \r\n    public tipoVista: number = 0; //0-Colones | 1-Dolares\r\n    public monedaVista: MonedaModel = new MonedaModel();\r\n    public empresa: EmpresaModel; \r\n    public formatMoney: boolean = true;\r\n    public cantDecimales: number = 2;\r\n    public moneySimple: boolean = false;\r\n    /************************************************************************************************************************\r\n    * Constructor && Implements\r\n    *\r\n    ************************************************************************************************************************/\r\n   constructor(public dataService: DataService,\r\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\r\n               public router: Router, public route: ActivatedRoute,\r\n               public authUserService: AuthUserService, \r\n               public serializer: UrlSerializer, public functionService: FunctionService, public userService: UserService,\r\n               public calendar: NgbCalendar, public titleBarService: TitleBarService){\r\n      \r\n      this.titleBarService.title = \"Libro Mayor\";\r\n      this.titleBarService.subTitle = \"Desde esta pantalla se podrán mostrar los libros mayores\";\r\n      this.empresa = this.userService.getEmpresaSelected();\r\n      this.monedaVista = this.empresa.monedaPrimaria; //HARDCODE\r\n      \r\n    }\r\n  \r\n   /************************************************************************************************************************\r\n    *\r\n    * Eventos\r\n    *\r\n    ************************************************************************************************************************/\r\n    ngOnInit() {\r\n      this.fechaInicio= new NgbDate(2000,1,1);\r\n      this.fechaFin = this.calendar.getToday();\r\n      this.cuentaSelected.id = 959; //HARDCODE\r\n      // this.refresh();\r\n    }\r\n\r\n\r\n   /************************************************************************************************************************\r\n    * FUNCTIONS\r\n    *\r\n    ************************************************************************************************************************/\r\n    \r\n   \r\n   public selectCuenta(cuenta: CuentaContableModel) {\r\n      this.cuentaSelected = cuenta; \r\n    }\r\n\r\n    getMonto(row: AsientoRegistroModel, tipo: string){\r\n      if(tipo == 'debito'){\r\n        if(this.tipoVista == 0){\r\n          return row.debitoMonedaPrimaria;\r\n        }else{\r\n          return row.debitoMonedaSecundaria;\r\n        }\r\n      }else{\r\n        if(this.tipoVista == 0){\r\n          return row.creditoMonedaPrimaria;\r\n        }else{\r\n          return row.creditoMonedaSecundaria;\r\n        }\r\n      }\r\n    }\r\n    getMontoStr(row: AsientoRegistroModel, tipo: string){\r\n      const monto: number = this.getMonto(row,tipo);\r\n      return this.functionService.formatMoney(monto,this.monedaVista.codigo);\r\n    }\r\n\r\n    getField(row: AsientoRegistroModel, name: string){\r\n      \r\n      try {\r\n        switch(name){\r\n          case \"cuenta-nombre\":\r\n            return this.cuentaListado.nombre;\r\n            break;\r\n          case \"fecha\":\r\n            let fecha:Date = this.functionService.getDateFromString(row.asiento.fecha,\"-\",0,true);\r\n            if(fecha==undefined){\r\n              return \"\";\r\n            }\r\n            return this.functionService.formatDate(fecha);\r\n          case \"debito\":\r\n            // return this.functionService.formatMoney()\r\n          case \"negocio\":\r\n            if(row.negocio){\r\n              return row.negocio.nombre;\r\n            }else{\r\n              return \"\";\r\n            }\r\n            break;\r\n          break;\r\n            default:\r\n            return this.functionService.getValueFromObject(row,name);\r\n        }\r\n      }catch(ex){\r\n        return \"\";\r\n      }\r\n    }\r\n\r\n    refresh(){\r\n      const paginateListModel:PaginateListModel=new PaginateListModel(this.page,this.size);\r\n      paginateListModel.addParameter(\"empresa\", this.userService.getIdEmpresaSelected().toString());\r\n      paginateListModel.addParameter(\"fechaInicio\",this.fechaInicio.year + \"-\" + this.fechaInicio.month + \"-\" + this.fechaInicio.day + \" 00:00:01\")\r\n      paginateListModel.addParameter(\"fechaFin\",this.fechaFin.year + \"-\" + this.fechaFin.month + \"-\" + this.fechaFin.day + \" 23:59:59\")\r\n      paginateListModel.addParameter(\"cuenta\",this.cuentaSelected.id.toString());\r\n      this.dataService.httpFunction(enumWS.ASIENTO_CUENTA_RESUMEN,this,paginateListModel,{})\r\n      this.cuentaListado = JSON.parse(JSON.stringify(this.cuentaSelected));\r\n   } \r\n\r\n  \r\n\r\n   \r\n   getClass(reg):string{\r\n      try{\r\n        if(reg.debito > 0){\r\n          return \"reg-debe\";\r\n        }else{\r\n          return \"reg-haber\";\r\n        }\r\n      }catch(ex){\r\n        return \"\";\r\n      }\r\n\r\n    }\r\n\r\n\r\n    SetPage(paginateList: PaginateListModel){\r\n      this.page = paginateList.page;\r\n      this.size = paginateList.size; \r\n      this.refresh();\r\n    }\r\n\r\n  /************************************************************************************************************************\r\n   *\r\n   * RESPONSE OK/ERROR\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n\r\n   responseOk(httpOperation:any, http: string, data:any, ws:any ){\r\n    switch(ws.enumUrl) {\r\n      case enumWS.ASIENTO_CUENTA_RESUMEN:\r\n        this.registros = data.asientoRegistroDTOPage.content;\r\n        this.paginateData = data.asientoRegistroDTOPage;\r\n        this.loaded = true;\r\n        this.cuentaListado = this.cuentaSelected;\r\n        this.cd.markForCheck();\r\n\r\n        //HARCODE:\r\n        let saldoDebito: number = 0;\r\n        let saldoCredito: number = 0;\r\n\r\n        for(let reg of this.registros){\r\n          saldoDebito = saldoDebito + reg.debitoMonedaPrimaria;\r\n          saldoCredito = saldoCredito + reg.creditoMonedaPrimaria;\r\n          \r\n          reg.saldoDebito = saldoDebito;\r\n          reg.saldoCredito = saldoCredito;\r\n        }\r\n\r\n      break;\r\n  }\r\n   }\r\n\r\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\r\n   }\r\n}\r\n","<section id=\"collapse\">\r\n    <!-- <div class=\"row\">\r\n        <div class=\"col-12 col-md-6\">\r\n            <div class=\"content-header\">Libro Mayor</div>\r\n            <p class=\"content-sub-header mb-1\">Desde esta pantalla se podrán mostrar los libros mayores</p>\r\n        </div>\r\n    </div> -->\r\n\r\n    <div class=\"row row-grid mt-2\">\r\n        <div class=\"col-12 col-md-6 col-lg-6 col-xl-6 mt-1\">\r\n            <periodo-select [(fInicio)]=\"fechaInicio\" [(fFin)]=\"fechaFin\"></periodo-select>\r\n        </div>\r\n        <div class=\"col-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <fieldset class=\"form-group div-cuenta\">\r\n                <label for=\"input-nombre\">Cuenta</label>\r\n                <cuenta-select (changeEvent)=\"selectCuenta($event)\"></cuenta-select>\r\n            </fieldset>\r\n        </div>\r\n        <div class=\"col-12 text-center\">\r\n            <button class=\"btn btnl-lg btn-primary mt-3\" (click)=\"refresh()\">CARGAR</button>\r\n        </div>\r\n    </div>\r\n    \r\n    <ng-template [ngIf]=\"loaded\">\r\n        <exportar-data></exportar-data>\r\n    </ng-template>\r\n    <ng-template [ngIf]=\"loaded\">\r\n        <h2>{{cuentaListado.nombre}}</h2>\r\n        <div class=\"container-table\">\r\n            <table width=\"100%\" class=\"table table-transparent table-striped table-dark\">\r\n                <thead class=\"thead-dark\">\r\n                    <!-- <th width=\"7%\">#</th> -->\r\n                    <th width=\"10%\">Fecha</th>\r\n                    <th width=\"20%\">Referencia</th>\r\n                    <th width=\"15%\">Negocio</th>\r\n                    <th width=\"23%\">Tercero</th>\r\n                    <th width=\"15%\" class=\"th-monto\">Debito</th>\r\n                    <th width=\"15%\" class=\"th-monto\">Credito</th>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-template ngFor let-reg [ngForOf]=\"registros\">\r\n                        <tr class=\"row-space\"></tr>\r\n                        <tr>\r\n                            <!-- número # -->\r\n                            <!-- <td>\r\n                                {{ getField(reg, \"asiento.id\") }}\r\n                            </td> -->\r\n                            <!-- FECHA -->\r\n                            <td>\r\n                                {{ getField(reg, \"fecha\") }}\r\n                            </td>\r\n                            <!-- referencia -->\r\n                            <td>\r\n                                {{ getField(reg, \"referencia\") }}\r\n                            </td>\r\n                            <!-- Negocio -->\r\n                            <td>\r\n                                {{ getField(reg, \"negocio\") }}\r\n                            </td>\r\n                            <!-- Tercero -->\r\n                            <td>\r\n                                {{ getField(reg, \"entidad.nombre\") }}\r\n                            </td>\r\n                            <!-- <td class=\"td-cuenta\">\r\n                        <p class=\"{{getClass(reg)}}\">{{ getField(reg,\"cuenta-nombre\") }}</p>\r\n                    </td> -->\r\n                            <td class=\"td-debito monto\">\r\n                                <!-- <p *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.debito) }}</p> -->\r\n                                <money-input *ngIf=\"getMonto(reg,'debito') > 0\" [formatMoney]=\"formatMoney\" \r\n                                    [cantDecimales]=\"cantDecimales\" [simple]=\"moneySimple\" \r\n                                    [monedaPrimary]=\"monedaVista\" [initValue]=\"getMonto(reg,'debito')\">\r\n                                </money-input>\r\n                            </td>\r\n                            <td class=\"td-credito monto\">\r\n                                <!-- <p *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.credito) }}</p> -->\r\n                                <money-input *ngIf=\"getMonto(reg,'credito') > 0\" [formatMoney]=\"formatMoney\" \r\n                                    [cantDecimales]=\"cantDecimales\" [simple]=\"moneySimple\" \r\n                                    [monedaPrimary]=\"monedaVista\" [initValue]=\"getMonto(reg,'credito')\">\r\n                                </money-input>                                \r\n                            </td>\r\n\r\n                            <!-- <td class=\"saldo-debito monto\">\r\n                                <p class=\"p-saldo-debito\" *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.saldoDebito) }}</p>\r\n                            </td>\r\n                            <td class=\"saldo-credito monto\">\r\n                                <p class=\"p-saldo-credito\" *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.saldoCredito) }}</p>\r\n                            </td> -->\r\n                        </tr>\r\n                        <!-- <tr >\r\n                    <td>\r\n                        {{ getFieldReg('entidad',reg) }}\r\n                    </td>\r\n                    <td class=\"td-cuenta\">\r\n                        <p class=\"{{getClass(reg)}}\">{{ reg.cuenta.nombre }}</p>\r\n                    </td>\r\n                    <td class=\"td-debito\">\r\n                        <p *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.debito) }}</p>\r\n                    </td>\r\n                    <td class=\"td-credito\">\r\n                        <p *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.credito) }}</p>\r\n                    </td>\r\n                </tr> -->\r\n                        <!-- <tr class=\"row-footer\">\r\n                    <td colspan=\"5\">\r\n                        \r\n                    </td>\r\n                    <td class=\"td-debito td-total\"> \r\n                        <p>{{ functionService.formatMoney(asiento.debito) }}</p>\r\n                    </td>\r\n                    <td class=\"td-credito td-total\"> \r\n                        <p>{{ functionService.formatMoney(asiento.debito) }}</p>\r\n                     </td>\r\n                </tr> -->\r\n                        <tr class=\"row-space\"></tr>\r\n                    </ng-template>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <footer [paginate]=\"paginateData\" (setPageEvent)=\"SetPage($event)\"></footer>\r\n    </ng-template>\r\n</section>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ChartistModule } from 'ng-chartist';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { ComponentsModule } from '../../../../../coreApp/src/app/shared/components.module';\r\nimport { PipeModule } from '../../../../../coreApp/src/app/shared/pipes/pipe.module';\r\nimport { ComponentsProyectModule } from '../../components/components-proyect.module';\r\nimport { UserService } from \"../../services/User.service\";\r\nimport { SharedAppModule } from \"../../SharedApp.module\";\r\nimport { LibroMayorRoutingModule } from \"./libro-mayor-routing.module\";\r\nimport { LibroMayorComponent } from \"./listado/libro-mayor.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsProyectModule,\r\n    ComponentsModule,\r\n    // CoreModule,\r\n    LibroMayorRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ChartsModule,\r\n    ChartistModule,\r\n    NgxChartsModule,\r\n    NgApexchartsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    NgxDatatableModule,\r\n    PipeModule,\r\n    NgbTooltipModule,\r\n    SharedAppModule\r\n  ],\r\n  exports: [],\r\n  declarations: [\r\n    LibroMayorComponent,\r\n  ],\r\n  providers: [\r\n    UserService\r\n  ],\r\n})\r\nexport class LibroMayorModule { }\r\n"],"sourceRoot":"webpack:///"}