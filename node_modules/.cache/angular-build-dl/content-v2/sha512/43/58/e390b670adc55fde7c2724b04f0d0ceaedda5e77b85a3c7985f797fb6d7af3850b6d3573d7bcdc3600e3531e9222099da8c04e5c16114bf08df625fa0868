{"version":3,"sources":["webpack:///src/app/pages/libro-mayor/libro-mayor-routing.module.ts","webpack:///src/app/pages/libro-mayor/listado/libro-mayor.component.ts","webpack:///src/app/pages/libro-mayor/listado/libro-mayor.component.html","webpack:///src/app/pages/libro-mayor/libro-mayor.module.ts"],"names":["routes","path","component","pathMatch","data","title","LibroMayorRoutingModule","forChild","imports","exports","LibroMayorComponent","dataService","appConfig","cd","router","route","authUserService","serializer","functionService","userService","calendar","titleBarService","loaded","isCollapsed","registros","posAsiento","fechaInicio","fechaFin","cuentaListado","paginateData","page","cuentaSelected","cuentasCount","size","tipoVista","monedaVista","formatMoney","cantDecimales","moneySimple","subTitle","empresa","getEmpresaSelected","monedaPrimaria","getToday","id","cuenta","row","tipo","debitoMonedaPrimaria","debitoMonedaSecundaria","creditoMonedaPrimaria","creditoMonedaSecundaria","monto","getMonto","codigo","name","nombre","fecha","getDateFromString","asiento","undefined","formatDate","negocio","getValueFromObject","ex","paginateListModel","addParameter","getIdEmpresaSelected","toString","year","month","day","httpFunction","ASIENTO_CUENTA_RESUMEN","JSON","parse","stringify","reg","debito","paginateList","refresh","httpOperation","http","ws","enumUrl","asientoRegistroDTOPage","content","markForCheck","saldoDebito","saldoCredito","urlResource","selectCuenta","selector","templateUrl","styleUrls","LibroMayorModule","declarations","providers"],"mappings":"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","file":"pages-libro-mayor-libro-mayor-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LibroMayorComponent } from './listado/libro-mayor.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'listado',\r\n    component: LibroMayorComponent,\r\n    pathMatch: 'full',\r\n    data: {\r\n      title: 'Listado'\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class LibroMayorRoutingModule { }\r\n","import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\r\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\r\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\r\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\r\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\r\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\r\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\r\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\r\nimport { AsientoModel } from '../../../models/Asiento.model';\r\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\r\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\r\nimport { EmpresaModel } from '../../../models/Empresa.model';\r\nimport { MonedaModel } from '../../../models/Moneda.model';\r\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\r\nimport { TitleBarService } from '../../../services/TitleBar.service';\r\nimport { UserService } from '../../../services/User.service';\r\n\r\n@Component({\r\n  selector: 'libro-mayor',\r\n  templateUrl: './libro-mayor.component.html',\r\n  styleUrls: ['./libro-mayor.component.scss']\r\n})\r\n\r\n// export class vista{\r\n//   public fecha: string = \"\";\r\n//   public referencia: string = \"\";\r\n//   public tercero: string = \"\";\r\n//   public cuentaContable: string = \"\";\r\n//   public debito: string = \"\";\r\n//   public credito: string = \"\";\r\n//   public debito\r\n// }\r\n\r\nexport class LibroMayorComponent {\r\n  /************************************************************************************************************************\r\n   * Inputs && Outputs && Properties\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n  /************************************************************************************************************************\r\n   * Variables\r\n   *\r\n   ************************************************************************************************************************/\r\n    public loaded: boolean = false;\r\n    public isCollapsed:boolean = false;\r\n    public registros:AsientoRegistroModel[] = [];\r\n    public posAsiento: number = 0;\r\n    public fechaInicio: NgbDate = new NgbDate(2022,9,26);\r\n    public fechaFin: NgbDate = new NgbDate(2022,1,1);\r\n    public cuentaListado: CuentaContableModel = new CuentaContableModel(\"\"); //Es la cuenta con la que se genero el listado\r\n    public paginateData: PaginateDataModel = new PaginateDataModel();\r\n    public page: number = 0;\r\n    public cuentaSelected: CuentaContableModel = new CuentaContableModel(\"\");\r\n    public cuentasCount: number = 0;\r\n    public size: number = 10; \r\n    public tipoVista: number = 0; //0-Colones | 1-Dolares\r\n    public monedaVista: MonedaModel = new MonedaModel();\r\n    public empresa: EmpresaModel; \r\n    public formatMoney: boolean = true;\r\n    public cantDecimales: number = 2;\r\n    public moneySimple: boolean = false;\r\n    /************************************************************************************************************************\r\n    * Constructor && Implements\r\n    *\r\n    ************************************************************************************************************************/\r\n   constructor(public dataService: DataService,\r\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\r\n               public router: Router, public route: ActivatedRoute,\r\n               public authUserService: AuthUserService, \r\n               public serializer: UrlSerializer, public functionService: FunctionService, public userService: UserService,\r\n               public calendar: NgbCalendar, public titleBarService: TitleBarService){\r\n      \r\n      this.titleBarService.title = \"Libro Mayor\";\r\n      this.titleBarService.subTitle = \"Desde esta pantalla se podrán mostrar los libros mayores\";\r\n      this.empresa = this.userService.getEmpresaSelected();\r\n      this.monedaVista = this.empresa.monedaPrimaria; //HARDCODE\r\n      \r\n    }\r\n  \r\n   /************************************************************************************************************************\r\n    *\r\n    * Eventos\r\n    *\r\n    ************************************************************************************************************************/\r\n    ngOnInit() {\r\n      this.fechaInicio= new NgbDate(2000,1,1);\r\n      this.fechaFin = this.calendar.getToday();\r\n      this.cuentaSelected.id = 959; //HARDCODE\r\n      // this.refresh();\r\n    }\r\n\r\n\r\n   /************************************************************************************************************************\r\n    * FUNCTIONS\r\n    *\r\n    ************************************************************************************************************************/\r\n    \r\n   \r\n   public selectCuenta(cuenta: CuentaContableModel) {\r\n      this.cuentaSelected = cuenta; \r\n    }\r\n\r\n    getMonto(row: AsientoRegistroModel, tipo: string){\r\n      if(tipo == 'debito'){\r\n        if(this.tipoVista == 0){\r\n          return row.debitoMonedaPrimaria;\r\n        }else{\r\n          return row.debitoMonedaSecundaria;\r\n        }\r\n      }else{\r\n        if(this.tipoVista == 0){\r\n          return row.creditoMonedaPrimaria;\r\n        }else{\r\n          return row.creditoMonedaSecundaria;\r\n        }\r\n      }\r\n    }\r\n    getMontoStr(row: AsientoRegistroModel, tipo: string){\r\n      const monto: number = this.getMonto(row,tipo);\r\n      return this.functionService.formatMoney(monto,this.monedaVista.codigo);\r\n    }\r\n\r\n    getField(row: AsientoRegistroModel, name: string){\r\n      \r\n      try {\r\n        switch(name){\r\n          case \"cuenta-nombre\":\r\n            return this.cuentaListado.nombre;\r\n            break;\r\n          case \"fecha\":\r\n            let fecha:Date = this.functionService.getDateFromString(row.asiento.fecha,\"-\",0,true);\r\n            if(fecha==undefined){\r\n              return \"\";\r\n            }\r\n            return this.functionService.formatDate(fecha);\r\n          case \"debito\":\r\n            // return this.functionService.formatMoney()\r\n          case \"negocio\":\r\n            if(row.negocio){\r\n              return row.negocio.nombre;\r\n            }else{\r\n              return \"\";\r\n            }\r\n            break;\r\n          break;\r\n            default:\r\n            return this.functionService.getValueFromObject(row,name);\r\n        }\r\n      }catch(ex){\r\n        return \"\";\r\n      }\r\n    }\r\n\r\n    refresh(){\r\n      const paginateListModel:PaginateListModel=new PaginateListModel(this.page,this.size);\r\n      paginateListModel.addParameter(\"empresa\", this.userService.getIdEmpresaSelected().toString());\r\n      paginateListModel.addParameter(\"fechaInicio\",this.fechaInicio.year + \"-\" + this.fechaInicio.month + \"-\" + this.fechaInicio.day + \" 00:00:01\")\r\n      paginateListModel.addParameter(\"fechaFin\",this.fechaFin.year + \"-\" + this.fechaFin.month + \"-\" + this.fechaFin.day + \" 23:59:59\")\r\n      paginateListModel.addParameter(\"cuenta\",this.cuentaSelected.id.toString());\r\n      this.dataService.httpFunction(enumWS.ASIENTO_CUENTA_RESUMEN,this,paginateListModel,{})\r\n      this.cuentaListado = JSON.parse(JSON.stringify(this.cuentaSelected));\r\n   } \r\n\r\n  \r\n\r\n   \r\n   getClass(reg):string{\r\n      try{\r\n        if(reg.debito > 0){\r\n          return \"reg-debe\";\r\n        }else{\r\n          return \"reg-haber\";\r\n        }\r\n      }catch(ex){\r\n        return \"\";\r\n      }\r\n\r\n    }\r\n\r\n\r\n    SetPage(paginateList: PaginateListModel){\r\n      this.page = paginateList.page;\r\n      this.size = paginateList.size; \r\n      this.refresh();\r\n    }\r\n\r\n  /************************************************************************************************************************\r\n   *\r\n   * RESPONSE OK/ERROR\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n\r\n   responseOk(httpOperation:any, http: string, data:any, ws:any ){\r\n    switch(ws.enumUrl) {\r\n      case enumWS.ASIENTO_CUENTA_RESUMEN:\r\n        this.registros = data.asientoRegistroDTOPage.content;\r\n        this.paginateData = data.asientoRegistroDTOPage;\r\n        this.loaded = true;\r\n        this.cuentaListado = this.cuentaSelected;\r\n        this.cd.markForCheck();\r\n\r\n        //HARCODE:\r\n        let saldoDebito: number = 0;\r\n        let saldoCredito: number = 0;\r\n\r\n        for(let reg of this.registros){\r\n          saldoDebito = saldoDebito + reg.debitoMonedaPrimaria;\r\n          saldoCredito = saldoCredito + reg.creditoMonedaPrimaria;\r\n          \r\n          reg.saldoDebito = saldoDebito;\r\n          reg.saldoCredito = saldoCredito;\r\n        }\r\n\r\n      break;\r\n  }\r\n   }\r\n\r\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\r\n   }\r\n}\r\n","<section id=\"collapse\">\r\n    <!-- <div class=\"row\">\r\n        <div class=\"col-12 col-md-6\">\r\n            <div class=\"content-header\">Libro Mayor</div>\r\n            <p class=\"content-sub-header mb-1\">Desde esta pantalla se podrán mostrar los libros mayores</p>\r\n        </div>\r\n    </div> -->\r\n\r\n    <div class=\"row row-grid mt-2\">\r\n        <div class=\"col-12 col-md-6 col-lg-6 col-xl-6 mt-1\">\r\n            <periodo-select [(fInicio)]=\"fechaInicio\" [(fFin)]=\"fechaFin\"></periodo-select>\r\n        </div>\r\n        <div class=\"col-12 col-md-6 col-lg-6 col-xl-6\">\r\n            <fieldset class=\"form-group div-cuenta\">\r\n                <label for=\"input-nombre\">Cuenta</label>\r\n                <cuenta-select (changeEvent)=\"selectCuenta($event)\"></cuenta-select>\r\n            </fieldset>\r\n        </div>\r\n        <div class=\"col-12 text-center\">\r\n            <button class=\"btn btnl-lg btn-primary mt-3\" (click)=\"refresh()\">CARGAR</button>\r\n        </div>\r\n    </div>\r\n    \r\n    <ng-template [ngIf]=\"loaded\">\r\n        <exportar-data></exportar-data>\r\n    </ng-template>\r\n    <ng-template [ngIf]=\"loaded\">\r\n        <h2>{{cuentaListado.nombre}}</h2>\r\n        <div class=\"container-table\">\r\n            <table width=\"100%\" class=\"table table-transparent table-striped table-dark\">\r\n                <thead class=\"thead-dark\">\r\n                    <!-- <th width=\"7%\">#</th> -->\r\n                    <th width=\"10%\">Fecha</th>\r\n                    <th width=\"20%\">Referencia</th>\r\n                    <th width=\"15%\">Negocio</th>\r\n                    <th width=\"23%\">Tercero</th>\r\n                    <th width=\"15%\" class=\"th-monto\">Debito</th>\r\n                    <th width=\"15%\" class=\"th-monto\">Credito</th>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-template ngFor let-reg [ngForOf]=\"registros\">\r\n                        <tr class=\"row-space\"></tr>\r\n                        <tr>\r\n                            <!-- número # -->\r\n                            <!-- <td>\r\n                                {{ getField(reg, \"asiento.id\") }}\r\n                            </td> -->\r\n                            <!-- FECHA -->\r\n                            <td>\r\n                                {{ getField(reg, \"fecha\") }}\r\n                            </td>\r\n                            <!-- referencia -->\r\n                            <td>\r\n                                {{ getField(reg, \"referencia\") }}\r\n                            </td>\r\n                            <!-- Negocio -->\r\n                            <td>\r\n                                {{ getField(reg, \"negocio\") }}\r\n                            </td>\r\n                            <!-- Tercero -->\r\n                            <td>\r\n                                {{ getField(reg, \"entidad.nombre\") }}\r\n                            </td>\r\n                            <!-- <td class=\"td-cuenta\">\r\n                        <p class=\"{{getClass(reg)}}\">{{ getField(reg,\"cuenta-nombre\") }}</p>\r\n                    </td> -->\r\n                            <td class=\"td-debito monto\">\r\n                                <!-- <p *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.debito) }}</p> -->\r\n                                <money-input *ngIf=\"getMonto(reg,'debito') > 0\" [formatMoney]=\"formatMoney\" \r\n                                    [cantDecimales]=\"cantDecimales\" [simple]=\"moneySimple\" \r\n                                    [monedaPrimary]=\"monedaVista\" [initValue]=\"getMonto(reg,'debito')\">\r\n                                </money-input>\r\n                            </td>\r\n                            <td class=\"td-credito monto\">\r\n                                <!-- <p *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.credito) }}</p> -->\r\n                                <money-input *ngIf=\"getMonto(reg,'credito') > 0\" [formatMoney]=\"formatMoney\" \r\n                                    [cantDecimales]=\"cantDecimales\" [simple]=\"moneySimple\" \r\n                                    [monedaPrimary]=\"monedaVista\" [initValue]=\"getMonto(reg,'credito')\">\r\n                                </money-input>                                \r\n                            </td>\r\n\r\n                            <!-- <td class=\"saldo-debito monto\">\r\n                                <p class=\"p-saldo-debito\" *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.saldoDebito) }}</p>\r\n                            </td>\r\n                            <td class=\"saldo-credito monto\">\r\n                                <p class=\"p-saldo-credito\" *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.saldoCredito) }}</p>\r\n                            </td> -->\r\n                        </tr>\r\n                        <!-- <tr >\r\n                    <td>\r\n                        {{ getFieldReg('entidad',reg) }}\r\n                    </td>\r\n                    <td class=\"td-cuenta\">\r\n                        <p class=\"{{getClass(reg)}}\">{{ reg.cuenta.nombre }}</p>\r\n                    </td>\r\n                    <td class=\"td-debito\">\r\n                        <p *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.debito) }}</p>\r\n                    </td>\r\n                    <td class=\"td-credito\">\r\n                        <p *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.credito) }}</p>\r\n                    </td>\r\n                </tr> -->\r\n                        <!-- <tr class=\"row-footer\">\r\n                    <td colspan=\"5\">\r\n                        \r\n                    </td>\r\n                    <td class=\"td-debito td-total\"> \r\n                        <p>{{ functionService.formatMoney(asiento.debito) }}</p>\r\n                    </td>\r\n                    <td class=\"td-credito td-total\"> \r\n                        <p>{{ functionService.formatMoney(asiento.debito) }}</p>\r\n                     </td>\r\n                </tr> -->\r\n                        <tr class=\"row-space\"></tr>\r\n                    </ng-template>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <footer [paginate]=\"paginateData\" (setPageEvent)=\"SetPage($event)\"></footer>\r\n    </ng-template>\r\n</section>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ChartistModule } from 'ng-chartist';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { ComponentsModule } from '../../../../../coreApp/src/app/shared/components.module';\r\nimport { PipeModule } from '../../../../../coreApp/src/app/shared/pipes/pipe.module';\r\nimport { ComponentsProyectModule } from '../../components/components-proyect.module';\r\nimport { UserService } from \"../../services/User.service\";\r\nimport { SharedAppModule } from \"../../SharedApp.module\";\r\nimport { LibroMayorRoutingModule } from \"./libro-mayor-routing.module\";\r\nimport { LibroMayorComponent } from \"./listado/libro-mayor.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsProyectModule,\r\n    ComponentsModule,\r\n    // CoreModule,\r\n    LibroMayorRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ChartsModule,\r\n    ChartistModule,\r\n    NgxChartsModule,\r\n    NgApexchartsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    NgxDatatableModule,\r\n    PipeModule,\r\n    NgbTooltipModule,\r\n    SharedAppModule\r\n  ],\r\n  exports: [],\r\n  declarations: [\r\n    LibroMayorComponent,\r\n  ],\r\n  providers: [\r\n    UserService\r\n  ],\r\n})\r\nexport class LibroMayorModule { }\r\n"]}