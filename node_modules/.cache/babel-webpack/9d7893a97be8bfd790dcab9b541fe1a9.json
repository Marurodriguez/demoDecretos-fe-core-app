{"ast":null,"code":"(function () {\n  if (typeof self === 'undefined' || !self.Prism || !self.document) {\n    return;\n  }\n\n  if (!Prism.plugins.toolbar) {\n    console.warn('Copy to Clipboard plugin loaded before Toolbar plugin.');\n    return;\n  }\n\n  var ClipboardJS = window.ClipboardJS || undefined;\n\n  if (!ClipboardJS && typeof require === 'function') {\n    ClipboardJS = require('clipboard');\n  }\n\n  var callbacks = [];\n\n  if (!ClipboardJS) {\n    var script = document.createElement('script');\n    var head = document.querySelector('head');\n\n    script.onload = function () {\n      ClipboardJS = window.ClipboardJS;\n\n      if (ClipboardJS) {\n        while (callbacks.length) {\n          callbacks.pop()();\n        }\n      }\n    };\n\n    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js';\n    head.appendChild(script);\n  }\n\n  Prism.plugins.toolbar.registerButton('copy-to-clipboard', function (env) {\n    var linkCopy = document.createElement('button');\n    linkCopy.textContent = 'Copy';\n\n    if (!ClipboardJS) {\n      callbacks.push(registerClipboard);\n    } else {\n      registerClipboard();\n    }\n\n    return linkCopy;\n\n    function registerClipboard() {\n      var clip = new ClipboardJS(linkCopy, {\n        'text': function text() {\n          return env.code;\n        }\n      });\n      clip.on('success', function () {\n        linkCopy.textContent = 'Copied!';\n        resetText();\n      });\n      clip.on('error', function () {\n        linkCopy.textContent = 'Press Ctrl+C to copy';\n        resetText();\n      });\n    }\n\n    function resetText() {\n      setTimeout(function () {\n        linkCopy.textContent = 'Copy';\n      }, 5000);\n    }\n  });\n})();","map":{"version":3,"sources":["C:/Proyectos/simac/node_modules/prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.js"],"names":["self","Prism","document","plugins","toolbar","console","warn","ClipboardJS","window","undefined","require","callbacks","script","createElement","head","querySelector","onload","length","pop","src","appendChild","registerButton","env","linkCopy","textContent","push","registerClipboard","clip","code","on","resetText","setTimeout"],"mappings":"AAAA,CAAC,YAAU;AACV,MAAI,OAAOA,IAAP,KAAgB,WAAhB,IAA+B,CAACA,IAAI,CAACC,KAArC,IAA8C,CAACD,IAAI,CAACE,QAAxD,EAAkE;AACjE;AACA;;AAED,MAAI,CAACD,KAAK,CAACE,OAAN,CAAcC,OAAnB,EAA4B;AAC3BC,IAAAA,OAAO,CAACC,IAAR,CAAa,wDAAb;AAEA;AACA;;AAED,MAAIC,WAAW,GAAGC,MAAM,CAACD,WAAP,IAAsBE,SAAxC;;AAEA,MAAI,CAACF,WAAD,IAAgB,OAAOG,OAAP,KAAmB,UAAvC,EAAmD;AAClDH,IAAAA,WAAW,GAAGG,OAAO,CAAC,WAAD,CAArB;AACA;;AAED,MAAIC,SAAS,GAAG,EAAhB;;AAEA,MAAI,CAACJ,WAAL,EAAkB;AACjB,QAAIK,MAAM,GAAGV,QAAQ,CAACW,aAAT,CAAuB,QAAvB,CAAb;AACA,QAAIC,IAAI,GAAGZ,QAAQ,CAACa,aAAT,CAAuB,MAAvB,CAAX;;AAEAH,IAAAA,MAAM,CAACI,MAAP,GAAgB,YAAW;AAC1BT,MAAAA,WAAW,GAAGC,MAAM,CAACD,WAArB;;AAEA,UAAIA,WAAJ,EAAiB;AAChB,eAAOI,SAAS,CAACM,MAAjB,EAAyB;AACxBN,UAAAA,SAAS,CAACO,GAAV;AACA;AACD;AACD,KARD;;AAUAN,IAAAA,MAAM,CAACO,GAAP,GAAa,4EAAb;AACAL,IAAAA,IAAI,CAACM,WAAL,CAAiBR,MAAjB;AACA;;AAEDX,EAAAA,KAAK,CAACE,OAAN,CAAcC,OAAd,CAAsBiB,cAAtB,CAAqC,mBAArC,EAA0D,UAAUC,GAAV,EAAe;AACxE,QAAIC,QAAQ,GAAGrB,QAAQ,CAACW,aAAT,CAAuB,QAAvB,CAAf;AACAU,IAAAA,QAAQ,CAACC,WAAT,GAAuB,MAAvB;;AAEA,QAAI,CAACjB,WAAL,EAAkB;AACjBI,MAAAA,SAAS,CAACc,IAAV,CAAeC,iBAAf;AACA,KAFD,MAEO;AACNA,MAAAA,iBAAiB;AACjB;;AAED,WAAOH,QAAP;;AAEA,aAASG,iBAAT,GAA6B;AAC5B,UAAIC,IAAI,GAAG,IAAIpB,WAAJ,CAAgBgB,QAAhB,EAA0B;AACpC,gBAAQ,gBAAY;AACnB,iBAAOD,GAAG,CAACM,IAAX;AACA;AAHmC,OAA1B,CAAX;AAMAD,MAAAA,IAAI,CAACE,EAAL,CAAQ,SAAR,EAAmB,YAAW;AAC7BN,QAAAA,QAAQ,CAACC,WAAT,GAAuB,SAAvB;AAEAM,QAAAA,SAAS;AACT,OAJD;AAKAH,MAAAA,IAAI,CAACE,EAAL,CAAQ,OAAR,EAAiB,YAAY;AAC5BN,QAAAA,QAAQ,CAACC,WAAT,GAAuB,sBAAvB;AAEAM,QAAAA,SAAS;AACT,OAJD;AAKA;;AAED,aAASA,SAAT,GAAqB;AACpBC,MAAAA,UAAU,CAAC,YAAY;AACtBR,QAAAA,QAAQ,CAACC,WAAT,GAAuB,MAAvB;AACA,OAFS,EAEP,IAFO,CAAV;AAGA;AACD,GApCD;AAqCA,CA1ED","sourcesContent":["(function(){\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\tif (!Prism.plugins.toolbar) {\n\t\tconsole.warn('Copy to Clipboard plugin loaded before Toolbar plugin.');\n\n\t\treturn;\n\t}\n\n\tvar ClipboardJS = window.ClipboardJS || undefined;\n\n\tif (!ClipboardJS && typeof require === 'function') {\n\t\tClipboardJS = require('clipboard');\n\t}\n\n\tvar callbacks = [];\n\n\tif (!ClipboardJS) {\n\t\tvar script = document.createElement('script');\n\t\tvar head = document.querySelector('head');\n\n\t\tscript.onload = function() {\n\t\t\tClipboardJS = window.ClipboardJS;\n\n\t\t\tif (ClipboardJS) {\n\t\t\t\twhile (callbacks.length) {\n\t\t\t\t\tcallbacks.pop()();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.0/clipboard.min.js';\n\t\thead.appendChild(script);\n\t}\n\n\tPrism.plugins.toolbar.registerButton('copy-to-clipboard', function (env) {\n\t\tvar linkCopy = document.createElement('button');\n\t\tlinkCopy.textContent = 'Copy';\n\n\t\tif (!ClipboardJS) {\n\t\t\tcallbacks.push(registerClipboard);\n\t\t} else {\n\t\t\tregisterClipboard();\n\t\t}\n\n\t\treturn linkCopy;\n\n\t\tfunction registerClipboard() {\n\t\t\tvar clip = new ClipboardJS(linkCopy, {\n\t\t\t\t'text': function () {\n\t\t\t\t\treturn env.code;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tclip.on('success', function() {\n\t\t\t\tlinkCopy.textContent = 'Copied!';\n\n\t\t\t\tresetText();\n\t\t\t});\n\t\t\tclip.on('error', function () {\n\t\t\t\tlinkCopy.textContent = 'Press Ctrl+C to copy';\n\n\t\t\t\tresetText();\n\t\t\t});\n\t\t}\n\n\t\tfunction resetText() {\n\t\t\tsetTimeout(function () {\n\t\t\t\tlinkCopy.textContent = 'Copy';\n\t\t\t}, 5000);\n\t\t}\n\t});\n})();\n"]},"metadata":{},"sourceType":"script"}