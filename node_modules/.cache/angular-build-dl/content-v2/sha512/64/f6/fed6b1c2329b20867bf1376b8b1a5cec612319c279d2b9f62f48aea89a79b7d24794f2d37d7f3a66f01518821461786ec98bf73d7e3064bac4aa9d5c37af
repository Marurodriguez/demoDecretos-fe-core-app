{"version":3,"sources":["webpack:///src/app/pages/cotizacion/cotizacion.module.ts","webpack:///src/app/pages/cotizacion/abm/cotizacion-abm.component.ts","webpack:///src/app/pages/cotizacion/abm/cotizacion-abm.component.html","webpack:///src/app/models/Cotizacion.model.ts","webpack:///src/app/pages/cotizacion/cotizacion-routing.module.ts","webpack:///src/app/pages/cotizacion/listado/cotizacion-listado.component.ts","webpack:///src/app/pages/cotizacion/listado/cotizacion-listado.component.html"],"names":["CotizacionModule","imports","exports","declarations","providers","CotizacionAbmComponent","dataService","appConfig","cd","router","route","authUserService","serializer","calendar","functionService","userService","today","getToday","asiento","referencia","loaded","isCollapsed","rows","negocioOptions","empresas","negocios","getEmpresaSelected","negocioList","fechaObj","initValue","bindLabel","items","setPageComponentActive","console","log","getPageComponentActive","empresaActual","empresaAnterior","tipo","row","validar","httpOperation","http","data","ws","urlResource","selector","templateUrl","styleUrls","CotizacionModel","monedaOrigen","monedaDestino","fecha","cotizacion","editMode","cotOriginal","monedaOrigenId","monedaDestinoId","empresaId","routes","path","component","pathMatch","title","operation","CotizacionRoutingModule","forChild","CotizacionListadoComponent","titleBarService","datePipe","cotizaciones","posAsiento","fechaInicio","fechaFin","page","size","loading","paginateData","sizeAnt","pageAnt","fechaAnt","canEdit","fieldName","date","getDateFromString","formatDate","ex","cot","Date","transform","firstElement","ngbDate","getNgbDateFromString","id","unshift","markForCheck","fire","undefined","year","getStringFromNgbDate","validate","getIdEmpresaSelected","httpFunction","COTIZACION_SAVE","subTitle","moneda","force","day","month","paginateListModel","addParameter","toString","fechaInit","addOrderField","COTIZACION_PAGINATE","reg","paginate","refresh","enumUrl","content","error","developerMessage"],"mappings":"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","file":"pages-cotizacion-cotizacion-module-es5.js","sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ChartistModule } from 'ng-chartist';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { ComponentsModule } from '../../../../../coreApp/src/app/shared/components.module';\r\nimport { PipeModule } from '../../../../../coreApp/src/app/shared/pipes/pipe.module';\r\nimport { ComponentsProyectModule } from '../../components/components-proyect.module';\r\nimport { SharedAppModule } from \"../../SharedApp.module\";\r\nimport { UsuarioModel } from \"../../models/Usuario.model\";\r\nimport { UserService } from \"../../services/User.service\";\r\nimport { CotizacionRoutingModule } from \"./cotizacion-routing.module\";\r\nimport { CotizacionListadoComponent } from \"./listado/cotizacion-listado.component\";\r\nimport { CotizacionAbmComponent } from \"./abm/cotizacion-abm.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsProyectModule,\r\n    ComponentsModule,\r\n    // CoreModule,\r\n    CotizacionRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ChartsModule,\r\n    ChartistModule,\r\n    NgxChartsModule,\r\n    NgApexchartsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    NgxDatatableModule,\r\n    PipeModule,\r\n    NgbTooltipModule,\r\n    SharedAppModule\r\n  ],\r\n  exports: [],\r\n  declarations: [\r\n    CotizacionListadoComponent,\r\n    CotizacionAbmComponent\r\n  ],\r\n  providers: [\r\n\r\n  ],\r\n})\r\nexport class CotizacionModule { }\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\r\nimport { NgbCalendar, NgbDate, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\r\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\r\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\r\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\r\nimport { UserModel } from '../../../../../../coreApp/src/app/models/user.model';\r\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\r\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\r\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\r\nimport { SmSelectOptions } from '../../../../../../coreApp/src/app/shared/components/sm-select/sm-select.component';\r\nimport { AsientoModel } from '../../../models/Asiento.model';\r\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\r\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\r\nimport { EmpresaModel } from '../../../models/Empresa.model';\r\nimport { NegocioModel } from '../../../models/Negocio.model';\r\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\r\nimport { UserService } from '../../../services/User.service';\r\nimport { PageComponentInterface } from '../../_PageInterface/PageComponentInterface';\r\nimport swal from 'sweetalert2';\r\nimport { regExpEscape } from '@ng-bootstrap/ng-bootstrap/util/util';\r\n\r\n@Component({\r\n  selector: 'cotizacion-abm',\r\n  templateUrl: './cotizacion-abm.component.html',\r\n  styleUrls: ['./cotizacion-abm.component.scss']\r\n})\r\n\r\nexport class CotizacionAbmComponent implements PageComponentInterface{\r\n  /************************************************************************************************************************\r\n   * Inputs && Outputs && Properties\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n  /************************************************************************************************************************\r\n   * Variables\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n    model: NgbDateStruct;\r\n    today = this.calendar.getToday();\r\n\r\n    public asiento: AsientoModel = new AsientoModel();\r\n    public referencia: string = \"\";\r\n    public loaded: boolean = false;\r\n    public isCollapsed:boolean = false;\r\n    public rows:CuentaContableModel[] = [];\r\n    public negocioOptions: SmSelectOptions = new SmSelectOptions();\r\n    public empresas: EmpresaModel[]=[];\r\n    public initValue: NegocioModel;\r\n   /************************************************************************************************************************\r\n    * Constructor && Implements\r\n    *\r\n    ************************************************************************************************************************/\r\n   constructor(public dataService: DataService,\r\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\r\n               public router: Router, public route: ActivatedRoute,\r\n               public authUserService: AuthUserService, public serializer: UrlSerializer,\r\n               private calendar: NgbCalendar, private functionService: FunctionService,\r\n               public userService: UserService){\r\n\r\n    // let user: UserModel;\r\n    // user = this.authUserService.getUser();\r\n    // let empresas: EmpresaModel[] = user.getData(\"empresaList\",[]);\r\n    let negocios = this.userService.getEmpresaSelected().negocioList;\r\n    this.asiento.fechaObj = this.today;\r\n    this.initValue = negocios[0];\r\n    this.negocioOptions.bindLabel = \"nombre\";\r\n    this.negocioOptions.items = negocios;\r\n    \r\n    this.userService.setPageComponentActive(this);\r\n\r\n    console.log(this.userService.getPageComponentActive());\r\n   }\r\n\r\n\r\n\r\n   /************************************************************************************************************************\r\n    *\r\n    * Eventos\r\n    *\r\n    ************************************************************************************************************************/\r\n    ngOnInit() {\r\n    \r\n    }\r\n    changeEmpresa(empresaActual: EmpresaModel, empresaAnterior: EmpresaModel): void {\r\n        //alert(\"Cambio la empresa: \" + empresaActual.nombre);\r\n    }\r\n\r\n\r\n   /************************************************************************************************************************\r\n    * FUNCTIONS\r\n    *\r\n    ************************************************************************************************************************/\r\n\r\n    crearRegistro() {\r\n      \r\n    }\r\n\r\n    getTotalString(tipo:string): string{\r\n      return \"\";\r\n    }\r\n\r\n    getTotal(tipo:string){\r\n    \r\n    }\r\n    deleteRow(row: AsientoRegistroModel) {\r\n    \r\n    }\r\n\r\n    public validar(): boolean {\r\n      return true;\r\n    }\r\n\r\n\r\n    guardar(): boolean {\r\n      if(this.validar() == false){\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    cancelar() {\r\n\r\n    }\r\n\r\n  /************************************************************************************************************************\r\n   *\r\n   * RESPONSE OK/ERROR\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n\r\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\r\n    //this.refreshComponent();\r\n    // switch(ws.enumUrl) {\r\n    //   case enumWS.CUENTA_CONTABLE_PAGINATE:\r\n    //     this.rows = data.content;\r\n    //     this.loaded = true;\r\n    //     this.cd.markForCheck();\r\n    //   break;\r\n    //   case enumWS.ASIENTO_SAVE:\r\n    //     swal.fire(\"!Guardado exitoso!\", \"Se ha guardado el registro correctamente\",\"success\");\r\n    //     this.asiento.registros = [];\r\n    //     this.asiento.descripcion = \"\";\r\n    //     this.asiento.referencia = \"\";\r\n    //     this.cd.markForCheck();\r\n\r\n    //   break;\r\n    // }\r\n   }\r\n\r\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\r\n    // this.loaded = true;\r\n    // this.rows = [];\r\n    // this.cd.markForCheck();\r\n   }\r\n}\r\n","<section id=\"collapse\">\r\n   <h1>Cotización ABM</h1>\r\n</section>\r\n","import { NgbDate } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AbstractModel } from \"./Abstract.model\";\r\nimport { MonedaModel } from \"./Moneda.model\";\r\n\r\n\r\nexport class CotizacionModel extends AbstractModel {\r\n  public monedaOrigen: MonedaModel = new MonedaModel();\r\n  public monedaDestino: MonedaModel = new MonedaModel();\r\n  public fecha: string =  '';\r\n  public cotizacion: number = 0;\r\n\r\n  public editMode: boolean = false;\r\n  public cotOriginal: number = 0;\r\n  public ngbDate: NgbDate;\r\n  \r\n\r\n\r\n  //DTO:\r\n  public monedaOrigenId: number = 0;\r\n  public monedaDestinoId: number = 0;\r\n  public empresaId: number = 0;\r\n\r\n  constructor(){\r\n    super();\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { CotizacionListadoComponent } from './listado/cotizacion-listado.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CotizacionAbmComponent } from './abm/cotizacion-abm.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  // { path: '',\r\n  //   redirectTo: '/listado',\r\n  //   pathMatch: 'full'\r\n  // },\r\n  {\r\n    path: 'listado',\r\n    component: CotizacionListadoComponent,\r\n    pathMatch: 'full',\r\n    data: {\r\n      title: 'Listado'\r\n    }\r\n  },\r\n  {\r\n    path: 'abm/:operation',\r\n    component: CotizacionAbmComponent,\r\n    data: {\r\n      title: 'Nueva Cotizacion',\r\n      operation: 'new'\r\n    }\r\n  }\r\n  // {\r\n  //   path: 'abm/:operation/:seccion/:uuid',\r\n  //   component: ClientesAbmComponent,\r\n  //   // pathMatch: 'full',\r\n  //   data: {\r\n  //     title: 'Cliente ABM',\r\n  //     operation: 'view'\r\n  //   }\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CotizacionRoutingModule { }\r\n","import { DatePipe } from '@angular/common';\r\nimport { ChangeDetectorRef, Component } from '@angular/core';\r\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\r\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\r\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\r\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\r\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\r\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\r\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\r\nimport { AsientoModel } from '../../../models/Asiento.model';\r\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\r\nimport { CotizacionModel } from '../../../models/Cotizacion.model';\r\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\r\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\r\nimport { TitleBarService } from '../../../services/TitleBar.service';\r\nimport { UserService } from '../../../services/User.service';\r\nimport swal from 'sweetalert2';\r\nimport { MonedaModel } from '../../../models/Moneda.model';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cotizacion-listado',\r\n  templateUrl: './cotizacion-listado.component.html',\r\n  styleUrls: ['./cotizacion-listado.component.scss']\r\n})\r\n\r\nexport class CotizacionListadoComponent {\r\n  /************************************************************************************************************************\r\n   * Inputs && Outputs && Properties\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n  /************************************************************************************************************************\r\n   * Variables\r\n   *\r\n   ************************************************************************************************************************/\r\n    public loaded: boolean = false;\r\n    public isCollapsed:boolean = false;\r\n    public cotizaciones:CotizacionModel[] = [];\r\n    public posAsiento: number = 0;\r\n    public fechaInicio: NgbDate = new NgbDate(2020,9,26);\r\n    public fechaFin: NgbDate = new NgbDate(2022,1,1);\r\n    public page: number = 0;\r\n    public size: number = 10;\r\n\r\n    \r\n    public loading: boolean = false; \r\n    public paginateData: PaginateDataModel = new PaginateDataModel();\r\n\r\n    public sizeAnt: number = this.size;\r\n    public pageAnt: number = this.page;\r\n    public fechaAnt:NgbDate = new NgbDate(2022,9,26);\r\n\r\n    public canEdit: boolean = true; // FLAG QUE SE ACTIVA PARA QUE SOLO SE PUEDA EDITAR O CREAR UNO A LA VEZ\r\n    /************************************************************************************************************************\r\n    * Constructor && Implements\r\n    *\r\n    ************************************************************************************************************************/\r\n   constructor(public dataService: DataService,\r\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\r\n               public router: Router, public route: ActivatedRoute,\r\n               public authUserService: AuthUserService, \r\n               public serializer: UrlSerializer, public functionService: FunctionService, public userService: UserService,\r\n               public calendar: NgbCalendar, public titleBarService: TitleBarService, public datePipe: DatePipe){\r\n    \r\n                 \r\n   }\r\n\r\n   getField(fieldName: string, row: CotizacionModel){\r\n    try {\r\n      switch(fieldName){\r\n        case \"fecha\":\r\n          const date: Date = this.functionService.getDateFromString(row.fecha, \"-\",1);\r\n          return this.functionService.formatDate(date);\r\n        break;\r\n        case \"cotizacion\":\r\n          return row.cotizacion;\r\n        break;\r\n      }\r\n      return \"\";\r\n    }  catch(ex){\r\n      return \"\";\r\n    }\r\n    \r\n   }\r\n\r\n\r\n   getMonedaTipo(cot: CotizacionModel) {\r\n    if(cot.editMode == true ) {\r\n      return 'select-large';\r\n    }else{\r\n      return 'label-large';\r\n    }\r\n   }\r\n   /**\r\n    * Crea una nueva fila\r\n    */\r\n   new(): boolean {\r\n    this.canEdit = false;\r\n    let cot = new CotizacionModel();\r\n    let today = new Date();\r\n    \r\n    let fecha = this.datePipe.transform(today,\"dd-MM-yyyy\");\r\n    if(fecha!=null){\r\n      cot.fecha = fecha;\r\n    }else{\r\n      cot.fecha = \"1-1-2000\";\r\n    }\r\n\r\n    // SUPER HARDCODE: TODO: ARREGLAR ESTO Y PERMITIR ELEGIR VARIAS MONEDAS\r\n    let firstElement\r\n\r\n    cot.ngbDate = this.functionService.getNgbDateFromString(cot.fecha,\"-\",1);\r\n    cot.editMode = true;\r\n  \r\n    cot.id = -1;\r\n    this.cotizaciones.unshift(cot);\r\n    return true;\r\n   }\r\n\r\n\r\n   clickEditButton(cot:CotizacionModel){\r\n    cot.editMode = true;\r\n    cot.cotOriginal = cot.cotizacion;\r\n    this.canEdit = false;\r\n    this.cd.markForCheck();\r\n    return true;\r\n   }\r\n\r\n   validate(cot: CotizacionModel): boolean{\r\n    if(cot.cotizacion <= 0){\r\n      swal.fire(\"Guardar\", \"La cotización es invalida.\",\"warning\");\r\n      return false;\r\n    }\r\n    if(cot.monedaOrigen == undefined || cot.monedaOrigen == null || cot.monedaOrigen?.id <= 0){\r\n      swal.fire(\"Guardar\", \"Seleccione una moneda de origen correcta\",\"warning\");\r\n      return false;\r\n    }\r\n    if(cot.monedaDestino== undefined || cot.monedaDestino == null || cot.monedaDestino?.id <= 0){\r\n      swal.fire(\"Guardar\", \"Seleccione una moneda de destino correcta\",\"warning\");\r\n      return false;\r\n    }\r\n    if(cot.monedaOrigen.id == cot.monedaDestino.id){\r\n      swal.fire(\"Guardar\", \"La moneda de origen y destino no pueden ser iguales.\",\"warning\");\r\n      return false;\r\n    }\r\n    if(cot.ngbDate.year>=2100 || cot.ngbDate.year<=1950){\r\n      swal.fire(\"Guardar\", \"El año es incorrecto.\",\"warning\");\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      cot.fecha = this.functionService.getStringFromNgbDate(cot.ngbDate,1);\r\n      if(cot.fecha == undefined){\r\n        swal.fire(\"Guardar\", \"La fecha es incorrecta.\",\"warning\");\r\n        return false;\r\n      }\r\n    }catch(ex){\r\n      swal.fire(\"Guardar\", \"La fecha es incorrecta.\",\"warning\");\r\n      return false;\r\n    }\r\n    return true;\r\n   }\r\n\r\n   clickSaveButton(cot:CotizacionModel){\r\n    if(this.validate(cot)==false){\r\n      return false;\r\n    }\r\n    \r\n    cot.editMode = false;\r\n    cot.monedaDestinoId = cot.monedaDestino.id;\r\n    cot.monedaOrigenId = cot.monedaOrigen.id;\r\n    cot.empresaId = this.userService.getIdEmpresaSelected();\r\n   \r\n\r\n\r\n    this.dataService.httpFunction(enumWS.COTIZACION_SAVE,this,cot);\r\n    this.cd.markForCheck();\r\n    \r\n    return true;\r\n   }\r\n   clickCancelButton(cot:CotizacionModel){\r\n    this.canEdit = true; \r\n    cot.editMode = false;\r\n\r\n    cot.cotizacion = cot.cotOriginal;\r\n    this.cd.markForCheck();\r\n    return true;\r\n   }\r\n   /************************************************************************************************************************\r\n    *\r\n    * Eventos\r\n    *\r\n    ************************************************************************************************************************/\r\n    ngOnInit() {\r\n      this.titleBarService.title = \"Administración de Cotizaciones\";\r\n      this.titleBarService.subTitle = \"Desde esta pantalla se ven los registros de las cotizaciones de las diferentes monedas\";\r\n      \r\n    }\r\n\r\n\r\n   /************************************************************************************************************************\r\n    * FUNCTIONS\r\n    *\r\n    ************************************************************************************************************************/\r\n    changeMonedaOrigenEvent(cot: CotizacionModel, moneda:MonedaModel){\r\n      cot.monedaOrigen = moneda;\r\n    }\r\n   \r\n    changeMonedaDestinoEvent(cot: CotizacionModel,moneda: MonedaModel){\r\n      cot.monedaDestino = moneda;\r\n    }\r\n\r\n    refresh(force: boolean){\r\n      this.canEdit = true;\r\n      this.pageAnt = this.page;\r\n      this.fechaAnt.day = this.fechaInicio.day;\r\n      this.fechaAnt.month = this.fechaInicio.month;\r\n      this.fechaAnt.year = this.fechaInicio.year;\r\n\r\n      let paginateListModel: PaginateListModel = new PaginateListModel(this.page,this.size);\r\n      paginateListModel.addParameter(\"empresa\",this.userService.getIdEmpresaSelected().toString());\r\n\r\n      //FechaInit! --> La fecha seleccionada\r\n      let fechaInit: string = this.fechaInicio.year + '-' + this.fechaInicio.month + '-' + this.fechaInicio.day + ' 00:00:01';\r\n      let fechaFin: string = this.fechaFin.year + '-' + this.fechaFin.month + '-' + this.fechaFin.day + ' 23:59:59';\r\n\r\n      paginateListModel.addParameter(\"fechaInicio\",fechaInit);\r\n      paginateListModel.addParameter(\"fechaFin\",fechaFin);\r\n      paginateListModel.addOrderField(\"fecha\",\"\");\r\n\r\n      this.dataService.httpFunction(enumWS.COTIZACION_PAGINATE,this,paginateListModel);\r\n\r\n\r\n      this.loading = true;\r\n    } \r\n   \r\n   \r\n   getClass(reg):string{\r\n      // try{\r\n      //   if(reg.debito > 0){\r\n      //     return \"reg-debe\";\r\n      //   }else{\r\n      //     return \"reg-haber\";\r\n      //   }\r\n      // }catch(ex){\r\n      //   return \"\";\r\n      // }\r\n      return \"\";\r\n\r\n    }\r\n\r\n    SetPage(paginate: PaginateListModel){\r\n      this.page = paginate.page;\r\n      this.size = paginate.size; \r\n      this.refresh(false);\r\n    }\r\n\r\n\r\n  /************************************************************************************************************************\r\n   *\r\n   * RESPONSE OK/ERROR\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n\r\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\r\n      switch(ws.enumUrl) {\r\n        case enumWS.COTIZACION_PAGINATE:\r\n          this.paginateData = data;\r\n          this.cotizaciones = data.content;\r\n          for(let cot of this.cotizaciones){\r\n            cot.editMode = false; \r\n//            let date2:Date = this.functionService.getDateFromString(cot.fecha, \"-\",0);\r\n            let ngbDate = this.functionService.getNgbDateFromString(cot.fecha,\"-\",1);\r\n            if(ngbDate){\r\n              cot.ngbDate = ngbDate;\r\n            }\r\n          }\r\n          this.loaded = true;\r\n          this.cd.markForCheck();\r\n        break;\r\n        case enumWS.COTIZACION_SAVE:\r\n          this.refresh(true);\r\n          this.canEdit = true;\r\n        break;\r\n    }\r\n   }\r\n\r\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\r\n    // switch(ws.enumUrl) {\r\n    //   case enumWS.ASIENTO_PAGINATE_DTO:\r\n    //     alert(\"error en el paginado\");\r\n    //   break;\r\n    //  }\r\n    //swal.fire(\"Error\",data?.error?.developerMessage,);\r\n    swal.fire(\"Error\", data?.error?.developerMessage,'warning');\r\n    this.refresh(true);\r\n    this.canEdit = true;\r\n   }\r\n}\r\n","<section id=\"collapse\">\r\n    <div class=\"row mt-2 mb-2\">\r\n        <div class=\"col-8 col-md-6\">\r\n            <periodo-select [(fInicio)]=\"fechaInicio\" [(fFin)]=\"fechaFin\"></periodo-select>\r\n        </div>\r\n        <div class=\"col-4 col-md-3\">\r\n            <button class=\"btn btnl-lg btn-info mt-1\" (click)=\"refresh(true)\">CARGAR</button>\r\n        </div>\r\n        <div class=\"col-6 col-md-3\" *ngIf=\"canEdit==true\">\r\n            <button class=\"btn btnl-lg btn-primary mt-1\" (click)=\"new()\">Nuevo</button>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<ng-template [ngIf]=\"loaded\">\r\n    <div class=\"container-table\">\r\n        <table width=\"100%\" class=\"table table-transparent table-striped table-dark\">\r\n            <thead class=\"thead-dark\">\r\n                <th width=\"20%\">Fecha</th>\r\n                <th width=\"20%\">Moneda</th>\r\n                <th width=\"20%\">Moneda</th>\r\n                <th width=\"10%\">Cotización</th>\r\n                <th width=\"10%\"></th>\r\n            </thead>\r\n            <tbody>\r\n                <ng-template ngFor let-cotizacion [ngForOf]=\"cotizaciones\">\r\n                    <!-- <tr class=\"row-space\">\r\n                        <td colspan=\"100\" class=\"row-space\">\r\n                            <i class=\"far fa-book-open text-primary\" style=\"text-align: middle; font-size:1.5rem;\"></i>\r\n                        </td>\r\n                    </tr> -->\r\n                    <tr>\r\n                        <!-- fecha -->\r\n                        <td>\r\n                            <ng-template [ngIf]=\"cotizacion.editMode == false\">\r\n                                {{ getField(\"fecha\",cotizacion) }}\r\n                            </ng-template>\r\n                            <ng-template [ngIf]=\"cotizacion.editMode == true\">\r\n                                <periodo-select [tipo]=\"'fecha'\" [(fInicio)]=\"cotizacion.ngbDate\"></periodo-select>\r\n                            </ng-template>\r\n                        </td>\r\n                        <!-- Moneda Origen -->\r\n                        <td>\r\n                            <moneda-select [moneda]=\"cotizacion.monedaOrigen\" (changeEvent)=\"changeMonedaOrigenEvent(cotizacion,$event)\" [tipo]=\"getMonedaTipo(cotizacion)\"></moneda-select>\r\n                        </td>\r\n                        <!-- Moneda Destino -->\r\n                        <td>\r\n                            <moneda-select [moneda]=\"cotizacion.monedaDestino\" (changeEvent)=\"changeMonedaDestinoEvent(cotizacion,$event)\" [tipo]=\"getMonedaTipo(cotizacion)\"></moneda-select>\r\n                        </td>\r\n                        <!-- Cotizacion -->\r\n                        <td class=\"total d-flex d-inline-block\">\r\n                            <input class=\"form-control\"  [(ngModel)]=\"cotizacion.cotizacion\" [disabled]=\"cotizacion.editMode != true\" />\r\n                        </td>\r\n\r\n                        <td>\r\n                            <!-- cotizacion.editMode:{{cotizacion.editMode}}\r\n                            canEdit:{{canEdit == true}} -->\r\n                            <ng-template [ngIf]=\"cotizacion.editMode == false && canEdit == true \">\r\n                                <button type=\"button\" class=\"ml-2 btn btn-info\" (click)=\"clickEditButton(cotizacion)\" ngbTooltip=\"Editar Cotizacion\"><i class=\"fal fa-edit\"></i></button>\r\n                            </ng-template>\r\n                            <ng-template [ngIf]=\"cotizacion.editMode == true\">\r\n                                <button type=\"button\" class=\"ml-2 btn btn-danger\" (click)=\"clickCancelButton(cotizacion)\" ngbTooltip=\"Cancelar Cambios\"><i class=\"fas fa-ban\"></i></button>\r\n                                <button type=\"button\" class=\"ml-1 btn btn-success\" (click)=\"clickSaveButton(cotizacion)\" ngbTooltip=\"Guardar Cambios\"><i class=\"fal fa-check\"></i></button>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    \r\n                    <!-- <tr class=\"row-space\"></tr> -->\r\n                </ng-template>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <footer class=\"mt-2\" [paginate]=\"paginateData\" (setPageEvent)=\"SetPage($event)\"></footer>\r\n</ng-template>"]}