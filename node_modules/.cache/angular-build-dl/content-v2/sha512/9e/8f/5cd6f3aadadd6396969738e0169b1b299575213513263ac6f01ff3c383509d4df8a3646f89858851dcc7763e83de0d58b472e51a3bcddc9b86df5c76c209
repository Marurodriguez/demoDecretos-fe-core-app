{"version":3,"sources":["./src/app/pages/asiento/listado/asiento-listado.component.ts","./src/app/pages/asiento/listado/asiento-listado.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwE;AACA;AACN;AACO;AACuB;AACA;AAET;AACQ;AACG;AACkB;AAMnD;AACI;AACR;;;;;;;;;;;;;;;;;;ICW7C,+EACI;IAAA,4EAA0B;IAAA,iEAAM;IAAA,4DAAQ;IACxC,gFAAkI;IAApD,gXAAuC;IAAC,4DAAY;IACtI,4DAAW;;;IADI,0DAAiC;IAAjC,iGAAiC;;;IA2D5B,oEAAG;IAAA,uDAA4B;IAAA,4DAAI;;;;IAAhC,0DAA4B;IAA5B,mGAA4B;;;IAKnC,6EAAwK;;;;IAAtH,2GAAuC;;;IAIzF,6EAA6J;;;;IAA1G,6GAAwC;;;IApBnG,qEACI;IAAA,qEACI;IAAA,uDACJ;IAAA,4DAAK;IACL,qEACI;IAAA,uDACJ;IAAA,4DAAK;IACL,yEACI;IAAA,6EAA0G;IAE1G,sKACI;IAER,4DAAK;IACL,yEACI;IACA,uKAA0J;IAC9J,4DAAK;IACL,0EACI;IACA,yKAA+I;IACnJ,4DAAK;IACT,4DAAK;;;;IApBG,0DACJ;IADI,iHACJ;IAEI,0DACJ;IADI,iHACJ;IAEiB,0DAAqB;IAArB,iFAAqB;IAErB,0DAA+C;IAA/C,kHAA+C;IAM/C,0DAAoC;IAApC,iGAAoC;IAIpC,0DAAqC;IAArC,kGAAqC;;;IA7C1D,yEACI;IAAA,yEACI;IAAA,mEAA2F;IAC/F,4DAAK;IACT,4DAAK;IACL,qEACI;IAAA,yEACI;IAAA,uDACJ;IAAA,4DAAK;IACT,4DAAK;IACL,yEACI;IACA,qEACI;IAAA,uDACJ;IAAA,4DAAK;IAEL,qEACI;IAAA,wDACJ;IAAA,4DAAK;IAEL,sEACI;IAAA,wDACJ;IAAA,4DAAK;IACL,qEAAsC;IAC1C,4DAAK;IACL,kJACI;IAsBJ,0EACI;IAAA,qEAAqB;IACrB,0EACI;IACA,8EAA0H;IAC9H,4DAAK;IACL,0EACI;IACA,8EAA2H;IAC/H,4DAAK;IACT,4DAAK;IACL,qEAA2B;;;;IApDnB,0DACJ;IADI,4KACJ;IAII,0DAA2D;IAA3D,0HAA2D;IAC3D,0DACJ;IADI,yFACJ;IAEI,0DAA2D;IAA3D,0HAA2D;IAC3D,0DACJ;IADI,4FACJ;IAEI,0DAA2D;IAA3D,0HAA2D;IAC3D,0DACJ;IADI,iGACJ;IAGA,0DAAqC;IAArC,yFAAqC;IA2BpB,0DAA2C;IAA3C,+GAA2C;IAI3C,0DAA4C;IAA5C,gHAA4C;;;;IAnFjF,yEACI;IAAA,yEACI;IAAA,2IACI;IAGR,4DAAM;IACN,qEAEM;IACV,4DAAM;IAGN,0EACI;IAAA,4EACI;IAAA,4EACI;IAAA,yEAAe;IAAA,4DAAC;IAAA,4DAAK;IACrB,yEAAe;IAAA,iEAAK;IAAA,4DAAK;IACzB,0EAAgB;IAAA,sEAAU;IAAA,4DAAK;IAC/B,0EAAgB;IAAA,mEAAO;IAAA,4DAAK;IAC5B,0EAAgB;IAAA,mEAAO;IAAA,4DAAK;IAC5B,0EAAgB;IAAA,2EAAe;IAAA,4DAAK;IACpC,0EAAgB;IAAA,kEAAM;IAAA,4DAAK;IAC3B,0EAAgB;IAAA,mEAAO;IAAA,4DAAK;IAChC,4DAAQ;IACR,yEACI;IAAA,sJACI;IA6DR,4DAAQ;IACZ,4DAAQ;IACZ,4DAAM;IACN,8EAAyF;IAA1C,+VAAgC;IAAC,4DAAS;;;IAzFpD,0DAAmC;IAAnC,oGAAmC;IAwB7B,2DAAoB;IAApB,oFAAoB;IAiE1C,0DAAyB;IAAzB,yFAAyB;;ADjGtD,IAAY,aAIX;AAJD,WAAY,aAAa;IACvB,yDAAU;IACV,2DAAW;IACX,6DAAY,EAAC,kFAAkF;AACjG,CAAC,EAJW,aAAa,KAAb,aAAa,QAIxB;AASM,MAAM,uBAAuB;IAgChC;;;6HAGyH;IAC1H,YAAmB,WAAwB,EACxB,SAAoB,EAAU,EAAqB,EACnD,MAAc,EAAS,KAAqB,EAC5C,eAAgC,EAChC,UAAyB,EAAS,eAAgC,EAAS,WAAwB,EACnG,QAAqB,EAAS,eAAgC;QAL9D,gBAAW,GAAX,WAAW,CAAa;QACxB,cAAS,GAAT,SAAS,CAAW;QAAU,OAAE,GAAF,EAAE,CAAmB;QACnD,WAAM,GAAN,MAAM,CAAQ;QAAS,UAAK,GAAL,KAAK,CAAgB;QAC5C,oBAAe,GAAf,eAAe,CAAiB;QAChC,eAAU,GAAV,UAAU,CAAe;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAAS,gBAAW,GAAX,WAAW,CAAa;QACnG,aAAQ,GAAR,QAAQ,CAAa;QAAS,oBAAe,GAAf,eAAe,CAAiB;QAxClF;;;kIAG0H;QAE1H;;;kIAG0H;QACjH,WAAM,GAAY,KAAK,CAAC;QACxB,gBAAW,GAAW,KAAK,CAAC;QAC5B,aAAQ,GAAkB,EAAE,CAAC;QAC7B,eAAU,GAAW,CAAC,CAAC;QACvB,UAAK,GAAY,IAAI,kEAAO,CAAC,IAAI,EAAC,CAAC,EAAC,EAAE,CAAC,CAAC;QACxC,aAAQ,GAAY,IAAI,kEAAO,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAC1C,SAAI,GAAW,CAAC,CAAC;QACjB,SAAI,GAAW,EAAE,CAAC;QAClB,cAAS,GAAkB,aAAa,CAAC,QAAQ,CAAC;QAGlD,YAAO,GAAY,KAAK,CAAC;QACzB,iBAAY,GAAsB,IAAI,4FAAiB,EAAE,CAAC;QAE1D,YAAO,GAAW,IAAI,CAAC,IAAI,CAAC;QAC5B,YAAO,GAAW,IAAI,CAAC,IAAI,CAAC;QAC5B,aAAQ,GAAW,IAAI,kEAAO,CAAC,IAAI,EAAC,CAAC,EAAC,EAAE,CAAC,CAAC;QAE1C,0BAAqB,GAAG,IAAI,gHAAe,EAAE,CAAC;QAerD,uBAAuB;QACvB,wCAAwC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACzC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,EAAE,CAAC;QACrD,IAAI,CAAC,eAAe,CAAC,KAAK,GAAG,cAAc,CAAC;QAC5C,IAAI,CAAC,eAAe,CAAC,QAAQ,GAAG,2DAA2D,CAAC;QAC5F,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;QAE/C,IAAI,CAAC,qBAAqB,CAAC,UAAU,GAAE,KAAK,CAAC;QAC7C,IAAI,CAAC,qBAAqB,CAAC,IAAI,GAAE,kBAAkB,CAAC;QACpD,IAAI,CAAC,kBAAkB,GAAG,EAAC,IAAI,EAAC,aAAa,CAAC,QAAQ,EAAE,QAAQ,EAAC,UAAU,EAAC,CAAC;QAC7E,IAAI,CAAC,qBAAqB,CAAC,KAAK,GAAG;YACC,EAAC,IAAI,EAAC,aAAa,CAAC,QAAQ,EAAE,QAAQ,EAAC,UAAU,EAAC;YAClD,EAAC,IAAI,EAAC,aAAa,CAAC,SAAS,EAAE,QAAQ,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,EAAC;YAC3E,EAAC,IAAI,EAAC,aAAa,CAAC,UAAU,EAAE,QAAQ,EAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAC;SAC3E,CAAC;IAEzC,CAAC;IACD,eAAe,CAAC,iBAAqB;QACpC,QAAO,iBAAiB,CAAC,EAAE,EAAC;YAC1B,KAAK,CAAC;gBACJ,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,QAAQ,CAAC;gBACxC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;gBACjD,MAAM;YACN,KAAK,CAAC;gBACJ,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC;gBACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;gBACjD,MAAM;YACN,KAAK,CAAC;gBACJ,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,UAAU,CAAC;gBAC1C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;gBACnD,MAAM;SACP;QAED,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;IACxB,CAAC;IACD;;;;OAIG;IACH,mBAAmB,CAAC,GAAyB;QAC5C,IAAI,KAAK,GAAW,CAAC,CAAC;QACtB,IAAI,IAAI,GAAW,GAAG,CAAC,UAAU,CAAC;QAClC,IAAI,GAAG,GAAW,EAAE,CAAC;QAErB,QAAO,IAAI,CAAC,SAAS,EAAC;YACpB,KAAK,aAAa,CAAC,QAAQ;gBACzB,2DAA2D;gBAC3D,yEAAyE;gBACzE,IAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,EAAC;oBAC1D,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,sBAAsB,GAAG,GAAG,CAAC,uBAAuB,CAAC,CAAC;oBACzE,8DAA8D;oBAC9D,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,EAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBACvE,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;oBAC/D,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAI,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,GAAC,KAAK,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;iBAC7G;gBACH,MAAM;YACN,KAAK,aAAa,CAAC,SAAS;gBAC1B,gEAAgE;gBAChE,0DAA0D;gBAC1D,IAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAAE,EAAC;oBAC1D,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,sBAAsB,GAAG,GAAG,CAAC,uBAAuB,CAAC,CAAC;oBACzE,8DAA8D;oBAC9D,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,EAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBACvE,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;oBAC/D,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAI,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,GAAC,KAAK,EAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;iBAC7G;gBACH,MAAM;YACN,KAAK,aAAa,CAAC,UAAU;gBAC3B,qEAAqE;gBACrE,0CAA0C;gBAC1C,IAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,EAAC;oBACxD,KAAK,GAAG,CAAC,GAAG,CAAC,oBAAoB,GAAG,GAAG,CAAC,qBAAqB,CAAC,CAAC;oBAC/D,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,EAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBACvE,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC;oBAC/D,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,MAAM,GAAI,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,GAAC,IAAI,EAAC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;iBAE/G;gBACH,MAAM;SACP;QAED,mDAAmD;QACnD,0EAA0E;QAC1E,oDAAoD;QACpD,8EAA8E;QAC9E,sEAAsE;QACtE,mHAAmH;QACnH,MAAM;QACN,SAAS;QACT,8EAA8E;QAC9E,mEAAmE;QACnE,4EAA4E;QAC5E,oEAAoE;QACpE,iHAAiH;QACjH,IAAI;QAGJ,OAAO,GAAG,CAAC;IACZ,CAAC;IACD,mBAAmB,CAAC,GAAyB;QAC5C,QAAO,IAAI,CAAC,SAAS,EAAC;YACpB,KAAK,aAAa,CAAC,QAAQ;gBACzB,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;YAC3B,KAAK,aAAa,CAAC,SAAS;gBAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;gBACrC,MAAM;YACN,KAAK,aAAa,CAAC,UAAU;gBAC3B,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;gBACvC,MAAM;SACN;QACD,OAAO,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC;IAC3B,CAAC;IAED;;;;;OAKG;IACH,mBAAmB,CAAC,GAAQ,EAAE,SAAkB;QAC/C,IAAI,YAAY,GAAkB,IAAI,CAAC,SAAS,CAAC;QACjD,IAAG,YAAY,IAAI,aAAa,CAAC,QAAQ,EAAC;YACxC,IAAG,GAAG,CAAC,MAAM,IAAI,SAAS,EAAC,EAAE,kCAAkC;gBAC7D,YAAY,GAAG,aAAa,CAAC,SAAS,CAAC;aACxC;iBAAI;gBACH,IAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,IAAI,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,EAAC;oBACxD,YAAY,GAAG,aAAa,CAAC,SAAS,CAAC;iBACxC;qBAAI;oBACH,YAAY,GAAG,aAAa,CAAC,UAAU,CAAC;iBACzC;aACF;SAEF;QAED,QAAO,YAAY,EAAC;YAClB,KAAK,aAAa,CAAC,SAAS;gBAC1B,IAAG,SAAS,IAAI,IAAI,EAAC;oBACnB,OAAO,GAAG,CAAC,oBAAoB,CAAC;iBACjC;qBAAI;oBACH,OAAO,GAAG,CAAC,qBAAqB,CAAC;iBAClC;gBACH,MAAM;YACN,KAAK,aAAa,CAAC,UAAU;gBAC3B,IAAG,SAAS,IAAI,IAAI,EAAC;oBACnB,OAAO,GAAG,CAAC,sBAAsB,CAAC;iBACnC;qBAAI;oBACH,OAAO,GAAG,CAAC,uBAAuB,CAAC;iBACpC;gBACH,MAAM;YACN;gBACE,OAAO,CAAC,CAAC,CAAC;gBACZ,MAAM;SACN;IAEH,CAAC;IAED,QAAQ,CAAC,SAAiB,EAAE,GAAiB;QAC5C,QAAO,SAAS,EAAC;YACf,KAAK,OAAO;gBACV,IAAI,IAAI,GAAS,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;gBACxE,OAAO,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC/C,MAAM;YACN,KAAK,mBAAmB;gBACtB,IAAG,GAAG,CAAC,SAAS,IAAI,IAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,SAAS,CAAC,MAAM,IAAG,CAAC,EAAC;oBAC5C,OAAO,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC;iBAC7B;qBAAI;oBACH,OAAO,CAAC,CAAC;iBACV;gBACH,MAAM;YACN,KAAK,WAAW;gBACd,IAAG,GAAG,CAAC,aAAa,EAAC;oBACnB,OAAO,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC;iBACjC;gBACH,MAAM;YACN,KAAK,kBAAkB;gBACrB,OAAO,GAAG,CAAC,eAAe,CAAC;gBAC7B,MAAM;SACP;IACF,CAAC;IAED,WAAW,CAAC,SAAiB,EAAE,GAAyB;QACvD,IAAG;YACD,QAAO,SAAS,EAAC;gBACf,KAAK,SAAS;oBACZ,IAAG,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE;wBACpC,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;qBAC3B;oBACH,MAAM;gBACN,KAAK,SAAS;oBACZ,IAAG,GAAG,CAAC,OAAO,IAAI,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE;wBACpC,OAAO,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC;qBAC3B;oBACH,MAAM;aACP;SACF;QAAA,OAAM,EAAE,EAAC;YACR,OAAO,EAAE,CAAC;SACX;QACD,OAAO,EAAE,CAAC;IACX,CAAC;IAED,QAAQ,CAAC,IAAY;QACpB,IAAI,SAAS,GAAW,CAAC,CAAC;QAC1B,IAAI,UAAU,GAAW,CAAC,CAAC;QAC3B,KAAI,IAAI,OAAO,IAAI,IAAI,CAAC,QAAQ,EAAC;YAC/B,KAAI,IAAI,GAAG,IAAI,OAAO,CAAC,SAAS,EAAC;gBAC/B,SAAS,GAAG,SAAS,GAAG,GAAG,CAAC,oBAAoB,CAAC;gBACjD,UAAU,GAAG,UAAU,GAAG,GAAG,CAAC,qBAAqB,CAAC;aACrD;SACF;QACD,IAAG,IAAI,IAAI,QAAQ,EAAC;YAClB,OAAO,SAAS,CAAC;SAClB;aAAI;YACH,OAAO,UAAU,CAAC;SACnB;IACF,CAAC;IAED;;;;8HAI0H;IACzH,QAAQ;QACN,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrB,CAAC;IAGF;;;8HAG0H;IACzH,OAAO,CAAC,KAAc;QACpB,IAAO,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,KAAK,EAAE;YAClN,OAAO,CAAC,kBAAkB;SAC3B;QACD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QACvC,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;QAErC,IAAI,iBAAiB,GAAsB,IAAI,4FAAiB,CAAC,IAAI,CAAC,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtF,iBAAiB,CAAC,YAAY,CAAC,SAAS,EAAC,IAAI,CAAC,WAAW,CAAC,oBAAoB,EAAE,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE7F,sCAAsC;QACtC,IAAI,SAAS,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,WAAW,CAAC;QACtG,IAAI,QAAQ,GAAW,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,GAAG,WAAW,CAAC;QAE9G,iBAAiB,CAAC,YAAY,CAAC,aAAa,EAAC,SAAS,CAAC,CAAC;QACxD,iBAAiB,CAAC,YAAY,CAAC,UAAU,EAAC,QAAQ,CAAC,CAAC;QAEpD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,uEAAM,CAAC,oBAAoB,EAAC,IAAI,EAAC,iBAAiB,CAAC,CAAC;QAGlF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACtB,CAAC;IAGF,QAAQ,CAAC,GAAG;QACT,IAAG;YACD,IAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAC;gBAChB,OAAO,UAAU,CAAC;aACnB;iBAAI;gBACH,OAAO,WAAW,CAAC;aACpB;SACF;QAAA,OAAM,EAAE,EAAC;YACR,OAAO,EAAE,CAAC;SACX;IAEH,CAAC;IAED,OAAO,CAAC,QAA2B;QACjC,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;IAGH;;;;8HAI0H;IAGzH,UAAU,CAAC,aAAiB,EAAE,IAAY,EAAE,IAAsB,EAAE,EAAM;QACvE,QAAO,EAAE,CAAC,OAAO,EAAE;YACjB,KAAK,uEAAM,CAAC,oBAAoB;gBAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;gBAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;gBACnB,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC;gBACzB,MAAM;SACT;IACF,CAAC;IAED,aAAa,CAAC,WAAmB,EAAC,aAAqB,EAAE,IAAS,EAAE,EAAQ;QAC3E,QAAO,EAAE,CAAC,OAAO,EAAE;YACjB,KAAK,uEAAM,CAAC,oBAAoB;gBAC9B,KAAK,CAAC,sBAAsB,CAAC,CAAC;gBAChC,MAAM;SACT;IACA,CAAC;;8FAxVS,uBAAuB;uGAAvB,uBAAuB;QClCpC,6EACI;QAAA,yEACI;QAAA,yEACI;QAAA,oFAAyE;QAAzD,mMAAmB;QAAqB,4DAAiB;QAC7E,4DAAM;QACN,yEACI;QAAA,4EAAqE;QAAxB,+IAAS,YAAQ,IAAI,CAAC,IAAC;QAAC,iEAAM;QAAA,4DAAS;QACxF,4DAAM;QACV,4DAAM;QAiBN,oIAEI;QA+FR,4DAAU;;QAvHkB,0DAAmB;QAAnB,8EAAmB;QAsB9B,0DAAe;QAAf,4EAAe;;6FDSnB,uBAAuB;cANnC,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,kCAAkC;gBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;aAChD","file":"default~pages-asiento-asiento-module~pages-balance-balance-module-es2015.js","sourcesContent":["import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\r\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\r\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\r\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\r\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\r\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\r\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\r\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\r\nimport { SmSelectOptions } from '../../../../../../coreApp/src/app/shared/components/sm-select/sm-select.component';\r\nimport { AsientoModel } from '../../../models/Asiento.model';\r\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\r\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\r\nimport { EmpresaModel } from '../../../models/Empresa.model';\r\nimport { MonedaModel } from '../../../models/Moneda.model';\r\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\r\nimport { TitleBarService } from '../../../services/TitleBar.service';\r\nimport { UserService } from '../../../services/User.service';\r\n\r\n\r\nexport enum TipoVistaEnum {\r\n  original=0, // Muestra los registros en la moneda en que se crearon\r\n  principal=1, // Muestra todos los registros en la moneda principal, haciendo las conversiones.\r\n  secundaria=2 // Muestra todos los registros en la moneda secundaria, haciendo las conversiones.\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'asiento-listado',\r\n  templateUrl: './asiento-listado.component.html',\r\n  styleUrls: ['./asiento-listado.component.scss']\r\n})\r\n\r\nexport class AsientoListadoComponent {\r\n  /************************************************************************************************************************\r\n   * Inputs && Outputs && Properties\r\n   *\r\n   ************************************************************************************************************************/\r\n  \r\n  /************************************************************************************************************************\r\n   * Variables\r\n   *\r\n   ************************************************************************************************************************/\r\n    public loaded: boolean = false;\r\n    public isCollapsed:boolean = false;\r\n    public asientos:AsientoModel[] = [];\r\n    public posAsiento: number = 0;\r\n    public fecha: NgbDate = new NgbDate(2020,9,26);\r\n    public fechaFin: NgbDate = new NgbDate(2022,1,1);\r\n    public page: number = 0;\r\n    public size: number = 10;\r\n    public tipoVista: TipoVistaEnum = TipoVistaEnum.original;\r\n    public monedaVista: MonedaModel; \r\n    \r\n    public loading: boolean = false; \r\n    public paginateData: PaginateDataModel = new PaginateDataModel();\r\n    public empresa: EmpresaModel; \r\n    public sizeAnt: number = this.size;\r\n    public pageAnt: number = this.page;\r\n    public fechaAnt:NgbDate = new NgbDate(2022,9,26);\r\n\r\n    public selectTipoVistaOption = new SmSelectOptions();\r\n    public initValueTipoVista: any;\r\n\r\n\r\n    /************************************************************************************************************************\r\n    * Constructor && Implements\r\n    *\r\n    ************************************************************************************************************************/\r\n   constructor(public dataService: DataService,\r\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\r\n               public router: Router, public route: ActivatedRoute,\r\n               public authUserService: AuthUserService, \r\n               public serializer: UrlSerializer, public functionService: FunctionService, public userService: UserService,\r\n               public calendar: NgbCalendar, public titleBarService: TitleBarService){\r\n    \r\n    // Primer día del mes  \r\n    // this.fecha= this.calendar.getToday();\r\n    this.fechaFin = this.calendar.getToday();\r\n    this.empresa = this.userService.getEmpresaSelected();\r\n    this.titleBarService.title = \"Libro Diario\";\r\n    this.titleBarService.subTitle = \"Desde esta pantalla se ven los registros del Libro Diario\";\r\n    this.monedaVista = this.empresa.monedaPrimaria;\r\n\r\n    this.selectTipoVistaOption.searchable =false;\r\n    this.selectTipoVistaOption.name =\"TipoVista-Select\";\r\n    this.initValueTipoVista = {\"id\":TipoVistaEnum.original, \"nombre\":\"Original\"};\r\n    this.selectTipoVistaOption.items = [\r\n                                        {\"id\":TipoVistaEnum.original, \"nombre\":\"Original\"},\r\n                                        {\"id\":TipoVistaEnum.principal, \"nombre\":this.empresa.monedaPrimaria.nombre},\r\n                                        {\"id\":TipoVistaEnum.secundaria, \"nombre\":this.empresa.monedaSecundaria.nombre},\r\n                                          ];\r\n    \r\n   }\r\n   tipoVistaChange(TipoVistaSelected:any){\r\n    switch(TipoVistaSelected.id){\r\n      case 0:\r\n        this.tipoVista = TipoVistaEnum.original;\r\n        this.monedaVista = this.empresa.monedaPrimaria;\r\n      break;\r\n      case 1: \r\n        this.tipoVista = TipoVistaEnum.principal;\r\n        this.monedaVista = this.empresa.monedaPrimaria;\r\n      break;\r\n      case 2:\r\n        this.tipoVista = TipoVistaEnum.secundaria;\r\n        this.monedaVista = this.empresa.monedaSecundaria;\r\n      break;\r\n    }\r\n\r\n    this.cd.markForCheck();\r\n   }\r\n   /**\r\n    * Muestra el resumen del monto de la moneda secundaria\r\n    * para saber como se transformo, con la tasa..\r\n    * @param reg \r\n    */\r\n   getMonedaAclaracion(reg: AsientoRegistroModel): string {\r\n    let monto: number = 0; \r\n    let tasa: number = reg.tasaMoneda;\r\n    let str: string = \"\";\r\n\r\n    switch(this.tipoVista){\r\n      case TipoVistaEnum.original:\r\n        // Si se tiene que mostrar según la moneda que se ingreso, \r\n        // entonces si la moneda ingresada es la secundaría se pone la aclaración\r\n        if(reg.cuenta.moneda.id == this.empresa.monedaSecundaria.id){\r\n          monto = Number(reg.debitoMonedaSecundaria + reg.creditoMonedaSecundaria);\r\n          // Moneda secundaria se muestra con la tasa para la conversión\r\n          str = this.functionService.formatMoney(monto,reg.cuenta.moneda.codigo);\r\n          str = str + \" x \" + this.functionService.formatMoney(tasa,\" \");\r\n          str = \"(\" + str + \") = \"  + this.functionService.formatMoney(tasa*monto,this.empresa.monedaPrimaria.codigo);          \r\n        }\r\n      break;\r\n      case TipoVistaEnum.principal:\r\n        // Si se tiene que mostrar siempre la moneda principal, entonces\r\n        // Si es una moneda secundaria se debe poner la aclaración\r\n        if(reg.cuenta.moneda.id == this.empresa.monedaSecundaria.id){\r\n          monto = Number(reg.debitoMonedaSecundaria + reg.creditoMonedaSecundaria);\r\n          // Moneda secundaria se muestra con la tasa para la conversión\r\n          str = this.functionService.formatMoney(monto,reg.cuenta.moneda.codigo);\r\n          str = str + \" x \" + this.functionService.formatMoney(tasa,\" \");\r\n          str = \"(\" + str + \") = \"  + this.functionService.formatMoney(tasa*monto,this.empresa.monedaPrimaria.codigo);\r\n        }\r\n      break;\r\n      case TipoVistaEnum.secundaria:\r\n        // Si se debe mostrar en moneda secundaría entonces, si es una moneda\r\n        // Principal se debe mostrar la aclaración\r\n        if(reg.cuenta.moneda.id == this.empresa.monedaPrimaria.id){\r\n          monto = (reg.debitoMonedaPrimaria + reg.creditoMonedaPrimaria);\r\n          str = this.functionService.formatMoney(monto,reg.cuenta.moneda.codigo);\r\n          str = str + \" / \" + this.functionService.formatMoney(tasa,\" \");\r\n          str = \"(\" + str + \") = \"  + this.functionService.formatMoney(monto/tasa,this.empresa.monedaSecundaria.codigo);\r\n    \r\n        }\r\n      break;\r\n    }\r\n\r\n    // if(reg.cuenta.moneda.id == this.monedaVista.id){\r\n    //   monto = Number(reg.debitoMonedaPrimaria + reg.creditoMonedaPrimaria);\r\n    //   if(this.tipoVista == TipoVistaEnum.secundaria){\r\n    //     str = this.functionService.formatMoney(monto,reg.cuenta.moneda.codigo);\r\n    //     str = str + \" / \" + this.functionService.formatMoney(tasa,\" \");\r\n    //     str = \"(\" + str + \") = \"  + this.functionService.formatMoney(monto/tasa,this.empresa.monedaPrimaria.codigo);\r\n    //   }\r\n    // }else{\r\n    //   monto = Number(reg.debitoMonedaSecundaria + reg.creditoMonedaSecundaria);\r\n    //   // Moneda secundaria se muestra con la tasa para la conversión\r\n    //   str = this.functionService.formatMoney(monto,reg.cuenta.moneda.codigo);\r\n    //   str = str + \" x \" + this.functionService.formatMoney(tasa,\" \");\r\n    //   str = \"(\" + str + \") = \"  + this.functionService.formatMoney(tasa*monto,this.empresa.monedaPrimaria.codigo);\r\n    // }\r\n    \r\n\r\n    return str;\r\n   }\r\n   getMonedaSegunVista(reg: AsientoRegistroModel): MonedaModel{\r\n    switch(this.tipoVista){\r\n      case TipoVistaEnum.original:\r\n        return reg.cuenta.moneda;\r\n      case TipoVistaEnum.principal:\r\n        return this.empresa.monedaPrimaria;\r\n      break;\r\n      case TipoVistaEnum.secundaria:\r\n        return this.empresa.monedaSecundaria;  \r\n      break;\r\n     }\r\n     return reg.cuenta.moneda;\r\n   }\r\n\r\n   /**\r\n    * \r\n    * @param reg Puede ser AsientoRegistro o Asiento\r\n    * @param getDebito Si es true devuelve el debito, y si es false devuelve el credito\r\n    * @returns el total en la moneda expresada\r\n    */\r\n   getTotalSegunMoneda(reg: any, getDebito: boolean): number{\r\n    let tipoVistaReg: TipoVistaEnum = this.tipoVista;\r\n    if(tipoVistaReg == TipoVistaEnum.original){\r\n      if(reg.cuenta == undefined){ //Se trata de un asiento principal\r\n        tipoVistaReg = TipoVistaEnum.principal; \r\n      }else{\r\n        if(reg.cuenta.moneda.id == this.empresa.monedaPrimaria.id){\r\n          tipoVistaReg = TipoVistaEnum.principal; \r\n        }else{\r\n          tipoVistaReg = TipoVistaEnum.secundaria; \r\n        }\r\n      }\r\n      \r\n    }\r\n\r\n    switch(tipoVistaReg){\r\n      case TipoVistaEnum.principal:\r\n        if(getDebito == true){\r\n          return reg.debitoMonedaPrimaria;\r\n        }else{\r\n          return reg.creditoMonedaPrimaria;\r\n        }\r\n      break;\r\n      case TipoVistaEnum.secundaria:\r\n        if(getDebito == true){\r\n          return reg.debitoMonedaSecundaria;\r\n        }else{\r\n          return reg.creditoMonedaSecundaria;\r\n        }        \r\n      break;\r\n      default:\r\n        return -1;\r\n      break;\r\n     }\r\n     \r\n   }\r\n\r\n   getField(fieldName: string, row: AsientoModel){\r\n    switch(fieldName){\r\n      case \"fecha\":\r\n        let date: Date = this.functionService.getDateFromString(row.fecha, \"-\");\r\n        return this.functionService.formatDate(date);\r\n      break;\r\n      case \"cantidadRegistros\":\r\n        if(row.registros && row?.registros.length > 0){\r\n          return row.registros.length;\r\n        }else{\r\n          return 0;\r\n        }\r\n      break;\r\n      case \"operacion\":\r\n        if(row.tipoOperacion){\r\n          return row.tipoOperacion.nombre;\r\n        }\r\n      break;\r\n      case \"numero-operacion\":\r\n        return row.numeroOperacion;\r\n      break;\r\n    }\r\n   }\r\n\r\n   getFieldReg(fieldName: string, row: AsientoRegistroModel) {\r\n    try{\r\n      switch(fieldName){\r\n        case \"negocio\":\r\n          if(row.negocio && row.negocio.nombre) {\r\n            return row.negocio.nombre;\r\n          }\r\n        break;\r\n        case \"entidad\":\r\n          if(row.entidad && row.entidad.nombre) {\r\n            return row.entidad.nombre;\r\n          }\r\n        break;  \r\n      }\r\n    }catch(ex){\r\n      return \"\";\r\n    }\r\n    return \"\";\r\n   }\r\n\r\n   getTotal(tipo: string){\r\n    let sumDebito: number = 0;\r\n    let sumcredito: number = 0;\r\n    for(let asiento of this.asientos){\r\n      for(let reg of asiento.registros){\r\n        sumDebito = sumDebito + reg.debitoMonedaPrimaria;\r\n        sumcredito = sumcredito + reg.creditoMonedaPrimaria;\r\n      }\r\n    }\r\n    if(tipo == 'debito'){\r\n      return sumDebito;\r\n    }else{\r\n      return sumcredito;\r\n    }\r\n   }\r\n\r\n   /************************************************************************************************************************\r\n    *\r\n    * Eventos\r\n    *\r\n    ************************************************************************************************************************/\r\n    ngOnInit() {\r\n      this.refresh(true);\r\n    }\r\n\r\n\r\n   /************************************************************************************************************************\r\n    * FUNCTIONS\r\n    *\r\n    ************************************************************************************************************************/\r\n    refresh(force: boolean){\r\n      if (   !(this.pageAnt != this.page || this.sizeAnt != this.size || (this.fechaAnt.year != this.fechaAnt.year || this.fecha.month != this.fechaAnt.month || this.fecha.day != this.fechaAnt.day)) && force == false) {\r\n        return; //No hubo cambios!\r\n      }\r\n      this.pageAnt = this.page;\r\n      this.fechaAnt.day = this.fecha.day;\r\n      this.fechaAnt.month = this.fecha.month;\r\n      this.fechaAnt.year = this.fecha.year;\r\n\r\n      let paginateListModel: PaginateListModel = new PaginateListModel(this.page,this.size);\r\n      paginateListModel.addParameter(\"empresa\",this.userService.getIdEmpresaSelected().toString());\r\n\r\n      //FechaInit! --> La fecha seleccionada\r\n      let fechaInit: string = this.fecha.year + '-' + this.fecha.month + '-' + this.fecha.day + ' 00:00:01';\r\n      let fechaFin: string = this.fechaFin.year + '-' + this.fechaFin.month + '-' + this.fechaFin.day + ' 23:59:59';\r\n\r\n      paginateListModel.addParameter(\"fechaInicio\",fechaInit);\r\n      paginateListModel.addParameter(\"fechaFin\",fechaFin);\r\n\r\n      this.dataService.httpFunction(enumWS.ASIENTO_PAGINATE_DTO,this,paginateListModel);\r\n\r\n\r\n      this.loading = true;\r\n    } \r\n   \r\n   \r\n   getClass(reg):string{\r\n      try{\r\n        if(reg.debito > 0){\r\n          return \"reg-debe\";\r\n        }else{\r\n          return \"reg-haber\";\r\n        }\r\n      }catch(ex){\r\n        return \"\";\r\n      }\r\n\r\n    }\r\n\r\n    SetPage(paginate: PaginateListModel){\r\n      this.page = paginate.page;\r\n      this.size = paginate.size; \r\n      this.refresh(false);\r\n    }\r\n\r\n\r\n  /************************************************************************************************************************\r\n   *\r\n   * RESPONSE OK/ERROR\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n\r\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\r\n      switch(ws.enumUrl) {\r\n        case enumWS.ASIENTO_PAGINATE_DTO:\r\n          this.paginateData = data;\r\n          this.asientos = data.content;\r\n          this.loaded = true;\r\n          this.cd.markForCheck();\r\n        break;\r\n    }\r\n   }\r\n\r\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\r\n    switch(ws.enumUrl) {\r\n      case enumWS.ASIENTO_PAGINATE_DTO:\r\n        alert(\"error en el paginado\");\r\n      break;\r\n  }\r\n   }\r\n}\r\n","<section id=\"collapse\">\r\n    <div class=\"row mt-2 mb-2\">\r\n        <div class=\"col-12 col-md-6\">\r\n            <periodo-select [(fInicio)]=\"fecha\" [(fFin)]=\"fechaFin\"></periodo-select>\r\n        </div>\r\n        <div class=\"col-12 col-md-6 text-center col-btn-refresh\">\r\n            <button class=\"btn btnl-lg btn-primary mt-1\" (click)=\"refresh(true)\">CARGAR</button>\r\n        </div>\r\n    </div>\r\n    <!-- <div class=\"card card-header\">\r\n        <div class=\"card-content\">\r\n            <div class=\"row header\">\r\n                <div class=\"colx colx-asiento\">#</div>\r\n                <div class=\"colx colx-fecha\">Fecha</div>\r\n                <div class=\"colx colx-referencia\">Referencia</div>\r\n                <div class=\"colx colx-tercero\">Tercero</div>\r\n                <div class=\"colx colx-cuentacontable\">Cuenta Contable</div>\r\n                <div class=\"colx colx-debito\">Débito</div>\r\n                <div class=\"colx colx-credito\">Crédito</div>\r\n            </div>\r\n        </div>\r\n    </div> -->\r\n    \r\n\r\n\r\n    <ng-template [ngIf]=\"loaded\">\r\n       \r\n        <div class=\"row mb-2 mt-4\">\r\n            <div class=\"col-12 col-md-4 col-lg-3\">\r\n                <fieldset class=\"form-group\" *ngIf=\"empresa.multipleMoneda == 1\">\r\n                    <label for=\"input-nombre\">Moneda</label>\r\n                    <sm-select [options]=\"selectTipoVistaOption\" [initValue]=\"initValueTipoVista\" (changeEvent)=\"tipoVistaChange($event)\"></sm-select>\r\n                </fieldset>\r\n            </div>\r\n            <div class=\"col-6 col-md-4 col-lg-3 text-right\">\r\n                <!-- <exportar-data></exportar-data> -->\r\n            </div>\r\n        </div>\r\n        \r\n\r\n        <div class=\"container-table\">\r\n            <table width=\"100%\" class=\"table table-transparent table-striped table-dark\">\r\n                <thead class=\"thead-dark\">\r\n                    <th width=\"5%\">#</th>\r\n                    <th width=\"5%\">Fecha</th>\r\n                    <th width=\"10%\">Referencia</th>\r\n                    <th width=\"10%\">Negocio</th>\r\n                    <th width=\"15%\">Tercero</th>\r\n                    <th width=\"25%\">Cuenta Contable</th>\r\n                    <th width=\"15%\">Debito</th>\r\n                    <th width=\"15%\">Credito</th>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-template ngFor let-asiento [ngForOf]=\"asientos\">\r\n                        <tr class=\"row-space\">\r\n                            <td colspan=\"100\" class=\"row-space\">\r\n                                <i class=\"far fa-book-open text-primary\" style=\"text-align: middle; font-size:1.5rem;\"></i>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td colspan=\"100\" class=\"row-space\">\r\n                                {{getField('operacion',asiento)}} - {{getField('numero-operacion',asiento)}}\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"row-init\">\r\n                            <!-- número # -->\r\n                            <td [attr.rowspan]=\"getField('cantidadRegistros', asiento) + 1\">\r\n                                {{ asiento.id }}\r\n                            </td>\r\n                            <!-- FECHA -->\r\n                            <td [attr.rowspan]=\"getField('cantidadRegistros', asiento) + 1\">\r\n                                {{ asiento.fecha }}\r\n                            </td>\r\n                            <!-- referencia -->\r\n                            <td [attr.rowspan]=\"getField('cantidadRegistros', asiento) + 1\">\r\n                                {{ asiento.referencia }}\r\n                            </td>\r\n                            <td colspan=\"4\" class=\"td-space\"></td>\r\n                        </tr>\r\n                        <tr *ngFor=\"let reg of asiento.registros\">\r\n                            <td>\r\n                                {{ getFieldReg(\"negocio\",reg) }}\r\n                            </td>\r\n                            <td>\r\n                                {{ getFieldReg(\"entidad\", reg) }}\r\n                            </td>\r\n                            <td class=\"td-cuenta\">\r\n                                <cuenta-info [cuenta]=\"reg.cuenta\" [debe]=\"reg.debitoMonedaPrimaria > 0\" [tabCuenta]=\"true\"></cuenta-info>\r\n                                <!-- Si tiene una moneda que no es la primaria mostrar la multipricación -->\r\n                                <ng-template [ngIf]=\"reg.cuenta.moneda.id != monedaVista.id\">\r\n                                    <b>{{getMonedaAclaracion(reg)}}</b>\r\n                                </ng-template>\r\n                            </td>\r\n                            <td class=\"td-debito\">\r\n                                <!-- <p *ngIf=\"reg.debitoMonedaPrimaria > 0\">{{ functionService.formatMoney(reg.debitoMonedaPrimaria) }}</p> -->\r\n                                <money-input *ngIf=\"reg.debitoMonedaPrimaria > 0\" [value]=\"getTotalSegunMoneda(reg,true)\" [formatMoney]=\"true\" [monedaPrimary]=\"getMonedaSegunVista(reg)\"></money-input>\r\n                            </td>\r\n                            <td class=\"td-credito\">\r\n                                <!-- <p *ngIf=\"reg.creditoMonedaPrimaria > 0\">{{ functionService.formatMoney(reg.creditoMonedaPrimaria) }}</p> -->\r\n                                <money-input *ngIf=\"reg.creditoMonedaPrimaria > 0\" [value]=\"getTotalSegunMoneda(reg,false)\" [formatMoney]=\"true\" [monedaPrimary]=\"monedaVista\"></money-input>\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"row-footer\">\r\n                            <td colspan=\"6\"></td>\r\n                            <td class=\"td-debito td-total\">\r\n                                <!-- <p>{{ functionService.formatMoney(asiento.debitoMonedaPrimaria) }}</p> -->\r\n                                <money-input [value]=\"getTotalSegunMoneda(asiento,true)\" [formatMoney]=\"true\" [monedaPrimary]=\"monedaVista\"></money-input>\r\n                            </td>\r\n                            <td class=\"td-credito td-total\">\r\n                                <!-- <p>{{ functionService.formatMoney(asiento.creditoMonedaPrimaria) }}</p> -->\r\n                                <money-input [value]=\"getTotalSegunMoneda(asiento,false)\" [formatMoney]=\"true\" [monedaPrimary]=\"monedaVista\"></money-input>\r\n                            </td>\r\n                        </tr>\r\n                        <tr class=\"row-space\"></tr>\r\n                    </ng-template>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <footer class=\"mt-2\" [paginate]=\"paginateData\" (setPageEvent)=\"SetPage($event)\"></footer>\r\n    </ng-template>\r\n\r\n    \r\n</section>\r\n"],"sourceRoot":"webpack:///"}