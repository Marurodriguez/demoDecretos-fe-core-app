{"version":3,"sources":["../coreApp/src/app/pages/content-pages/error/error-page.component.ts","../coreApp/src/app/pages/content-pages/error/error-page.component.html","./src/app/navigation/pages/content-pages/content-pages.module.ts","./src/app/navigation/pages/content-pages/content-pages-routing.module.ts","../coreApp/src/app/pages/content-pages/login/login-page.component.ts","../coreApp/src/app/pages/content-pages/login/login-page.component.html"],"names":[],"mappings":"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","file":"pages-content-pages-content-pages-module-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.scss']\n})\n\nexport class ErrorPageComponent {\n\n}","<!--Error page starts-->\n<section id=\"error\">\n  <div class=\"container-fluid\">\n    <div class=\"row auth-height full-height-vh\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <img src=\"assets/img/gallery/error.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\">\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\n            <div class=\"w-75 error-text mx-auto mt-4\">\n              <p>The page you are looking for might have beel removed, had it's name changed, or is temporarily unavailable.</p>\n            </div>\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Error page ends-->\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\nimport { ContentPagesRoutingModule } from \"./content-pages-routing.module\";\nimport { ErrorPageComponent } from \"../../../../../../coreApp/src/app/pages/content-pages/error/error-page.component\";\nimport { LoginPageComponent } from \"../../../../../../coreApp/src/app/pages/content-pages/login/login-page.component\";\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ContentPagesRoutingModule,\n        FormsModule ,\n        ReactiveFormsModule,\n        NgbModule,\n        NgxSpinnerModule\n    ],\n    declarations: [\n        ErrorPageComponent,\n        LoginPageComponent\n    ]\n})\nexport class ContentPagesModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ErrorPageComponent } from \"../../../../../../coreApp/src/app/pages/content-pages/error/error-page.component\";\nimport { LoginPageComponent } from \"../../../../../../coreApp/src/app/pages/content-pages/login/login-page.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: [\n      {\n        path: 'error',\n        component: ErrorPageComponent,\n        data: {\n          title: 'Error Page'\n        }\n      },\n      {\n        path: 'login',\n        component: LoginPageComponent,\n        data: {\n          title: 'Login Page'\n        }\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContentPagesRoutingModule { }\n","import { UserModel } from './../../../models/user.model';\nimport { ConfigService } from '../../../shared/services/config.service';\nimport { Component, ViewChild, OnInit, AfterViewChecked, AfterViewInit } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from '../../../shared/auth/auth.service';\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { config } from 'process';\n\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss']\n})\n\nexport class LoginPageComponent implements OnInit, AfterViewInit {\n\n  loginFormSubmitted = false;\n  isLoginFailed = false;\n  mensaje: string = \"\";\n  errorCode: number = 0;\n\n  loginForm = new FormGroup({\n    username: new FormControl('', [Validators.required]),\n    password: new FormControl('', [Validators.required]),\n    rememberMe: new FormControl(true)\n  });\n\n\n  constructor(private router: Router, private authService: AuthService,\n    private spinner: NgxSpinnerService,\n    private route: ActivatedRoute, public configService: ConfigService) {\n\n\n  }\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    if (this.configService.proyectConfig.loginAutoLogin == true) {\n      this.loginForm.controls.username.setValue(this.configService.proyectConfig.loginUserName);\n      this.loginForm.controls.password.setValue(this.configService.proyectConfig.loginPassWord);\n    }\n  }\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n    if (this.configService.proyectConfig.loginAutoLogin == true) {\n      this.onSubmit();\n    }\n  }\n  get lf() {\n    return this.loginForm.controls;\n  }\n\n  // On submit button click\n  onSubmit() {\n    this.loginFormSubmitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.spinner.show(undefined,\n      {\n        type: 'ball-triangle-path',\n        size: 'medium',\n        bdColor: 'rgba(0, 0, 0, 0.8)',\n        color: '#fff',\n        fullScreen: true\n      });\n    this.isLoginFailed = false;\n    this.mensaje = \"\";\n    this.errorCode = 0;\n    this.authService.signinUser(this.loginForm.value.username, this.loginForm.value.password, this);\n    /*this.authService.signinUser(this.loginForm.value.username, this.loginForm.value.password)\n      .then((res) => {\n        this.spinner.hide();\n        this.router.navigate(['/page']);\n      })\n      .catch((err) => {\n        this.isLoginFailed = true;\n        this.spinner.hide();\n        console.log('error: ' + err)\n      }\n      );*/\n  }\n  /**\n   *\n   * @param user recibe el usuario logineado y si dio error recibe solo con el usuario\n   * @param status status = 1 -> Login Ok, status = -1 usuario y contraseña incorrecto, status = -2 Fallo del servidor\n   */\n  responseLogin(user: UserModel, status: number) {\n    this.spinner.hide();\n    this.mensaje = \"\";\n\n    switch (status) {\n      case 1: //login Ok\n        //alert(\"login ok\");\n        this.isLoginFailed = false;\n        this.router.navigate(['']);\n        break;\n      case -1: //usuario o contraseña incorrectos\n        this.errorCode = status;\n        this.mensaje = \"El usuario o contraseña son incorrectos\";\n        alert(this.mensaje);\n        // this.isLoginFailed = true;\n        break;\n      default: //fallo del servidor (-2 u otros)\n        this.errorCode = status;\n        this.mensaje = \"Fallo al conectarse con el servidor\";\n        alert(this.mensaje);\n        // this.isLoginFailed = true;\n        break;\n    }\n  }\n}\n","<!--Login Page Starts-->\n<section id=\"login\">\n    <div class=\"row auth-height full-height-vh m-0\">\n        <div class=\"col-12 d-flex align-items-center justify-content-center\">\n            <div class=\"card overflow-hidden\">\n                <div class=\"card-content\">\n                    <div class=\"card-body auth-img\">\n                        <div class=\"row m-0\">\n                            <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\">\n                                <img src=\"{{configService.proyectConfig?.loginImg}}\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\">\n                            </div>\n                            <div class=\"col-lg-6 col-12 px-4 py-3\">\n                                <h4 class=\"mb-2 card-title\">{{configService.proyectConfig?.loginTitle}}</h4>\n                                <p>{{configService.proyectConfig?.loginDesc}}</p>\n                                <form [formGroup]=\"loginForm\">\n                                    <div class=\"form-group\">\n                                        <input type=\"text\" formControlName=\"username\" class=\"form-control\" placeholder=\"Usuario\" [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.username.invalid, 'is-valid': loginFormSubmitted && !lf.username.invalid }\" required>\n                                        <div *ngIf=\"loginFormSubmitted && (lf.username.invalid || lf.username.errors?.required)\" class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> Es Requerido</div>\n                                    </div>\n                                    <div class=\"form-group\">\n                                        <input (keyup.enter)=\"onSubmit()\" type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\" [ngClass]=\"{ 'is-invalid': loginFormSubmitted && lf.password.invalid, 'is-valid': loginFormSubmitted && !lf.password.invalid }\" required>\n                                        <div *ngIf=\"loginFormSubmitted && (lf.password.invalid || lf.password.errors?.required)\" class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> Es Requerido\n                                        </div>\n                                    </div>\n                                    <div class=\"d-sm-flex justify-content-between mb-3 font-small-2\">\n                                        <div class=\"remember-me mb-2 mb-sm-0\">\n                                            <div class=\"checkbox auth-checkbox\" *ngIf=\"configService.proyectConfig?.loginRemember\">\n                                                <input type=\"checkbox\" formControlName=\"rememberMe\" class=\"form-control\" id=\"rememberMe\">\n                                                <label for=\"rememberMe\"><span class=\"font-small-2 mb-3 font-weight-normal\">Recuerdame</span></label>\n                                            </div>\n                                        </div>\n                                        <a href=\"javascript:;\" *ngIf=\"configService.proyectConfig?.loginAllowForgotPassword\">Olvidaste la clave</a>\n                                    </div>\n                                    <div class=\"d-flex justify-content-between flex-sm-row flex-column\">\n                                        <a href=\"javascript:;\" class=\"btn bg-light-primary mb-2 mb-sm-0\" *ngIf=\"configService.proyectConfig?.loginAllowRegister\">Register</a>\n                                        <a class=\"btn btn-primary\" (click)=\"onSubmit()\">Login</a>\n                                    </div>\n                                </form>\n                                <hr>\n\n                                <!-- <p class=\"text-danger\">{{getMensaje()}}</p> -->\n\n\n\n                                <div class=\"d-flex justify-content-between align-items-center\" *ngIf=\"configService.proyectConfig?.loginOrLoginWith\">\n                                    <h6 class=\"text-primary m-0\">Or Login With</h6>\n                                    <ngx-spinner></ngx-spinner>\n                                    <div class=\"login-options\">\n                                        <a class=\"btn btn-sm btn-social-icon btn-facebook mr-1\"><span class=\"fa fa-facebook\"></span></a>\n                                        <a class=\"btn btn-sm btn-social-icon btn-twitter mr-1\"><span class=\"fa fa-twitter\"></span></a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<!--Login Page Ends-->"],"sourceRoot":"webpack:///"}