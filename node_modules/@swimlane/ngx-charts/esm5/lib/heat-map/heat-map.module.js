import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { ChartCommonModule } from '../common/chart-common.module';
import { HeatMapCellComponent } from './heat-map-cell.component';
import { HeatCellSeriesComponent } from './heat-map-cell-series.component';
import { HeatMapComponent } from './heat-map.component';
import * as ɵngcc0 from '@angular/core';
var HeatMapModule = /** @class */ (function () {
    function HeatMapModule() {
    }
HeatMapModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HeatMapModule });
HeatMapModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HeatMapModule_Factory(t) { return new (t || HeatMapModule)(); }, imports: [[ChartCommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HeatMapModule, { declarations: function () { return [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]; }, imports: function () { return [ChartCommonModule]; }, exports: function () { return [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HeatMapModule, [{
        type: NgModule,
        args: [{
                imports: [ChartCommonModule],
                declarations: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent],
                exports: [HeatMapCellComponent, HeatCellSeriesComponent, HeatMapComponent]
            }]
    }], function () { return []; }, null); })();
    return HeatMapModule;
}());
export { HeatMapModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhdC1tYXAubW9kdWxlLmpzIiwic291cmNlcyI6WyJAc3dpbWxhbmUvbmd4LWNoYXJ0cy9saWIvaGVhdC1tYXAvaGVhdC1tYXAubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ2pFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDOztBQU94RDtBQUNtQixJQURuQjtBQUEyQixJQUFDLENBQUM7SUFBaEIsYUFBYSx3QkFMekIsUUFBUSxDQUFDLGNBQ1I7QUFBTyxFQUFFLENBQUMsaUJBQWlCLENBQUMsY0FDNUIsWUFBWSxFQUFFLENBQUMsb0JBQW9CLEVBQUUsdUJBQXVCLEVBQUUsZ0JBQWdCLENBQUMsY0FDL0UsT0FBTyxFQUFFLENBQUMsb0JBQW9CLEVBQUU7a0JBQXVCLEVBQUUsZ0JBQWdCLENBQUMsVUFDM0UsQ0FBQyxRQUNXLGFBQWEsQ0FBRzs7Ozs7Ozs7Z0RBQzdCO0FBQUMsSUFEMkIsb0JBQUM7QUFDNUIsQ0FENEIsQUFBN0IsSUFBNkI7QUFDN0IsU0FEYSxhQUFhO0FBQzFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENoYXJ0Q29tbW9uTW9kdWxlIH0gZnJvbSAnLi4vY29tbW9uL2NoYXJ0LWNvbW1vbi5tb2R1bGUnO1xuaW1wb3J0IHsgSGVhdE1hcENlbGxDb21wb25lbnQgfSBmcm9tICcuL2hlYXQtbWFwLWNlbGwuY29tcG9uZW50JztcbmltcG9ydCB7IEhlYXRDZWxsU2VyaWVzQ29tcG9uZW50IH0gZnJvbSAnLi9oZWF0LW1hcC1jZWxsLXNlcmllcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSGVhdE1hcENvbXBvbmVudCB9IGZyb20gJy4vaGVhdC1tYXAuY29tcG9uZW50JztcblxuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW0NoYXJ0Q29tbW9uTW9kdWxlXSxcbiAgZGVjbGFyYXRpb25zOiBbSGVhdE1hcENlbGxDb21wb25lbnQsIEhlYXRDZWxsU2VyaWVzQ29tcG9uZW50LCBIZWF0TWFwQ29tcG9uZW50XSxcbiAgZXhwb3J0czogW0hlYXRNYXBDZWxsQ29tcG9uZW50LCBIZWF0Q2VsbFNlcmllc0NvbXBvbmVudCwgSGVhdE1hcENvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgSGVhdE1hcE1vZHVsZSB7fVxuIl19