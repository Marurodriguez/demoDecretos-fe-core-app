{"ast":null,"code":"import _createClass from \"C:/Proyectos/webPlus/angular-version/full-version/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"C:/Proyectos/webPlus/angular-version/full-version/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { CommonModule } from '@angular/common';\nimport { Directive, ElementRef, EventEmitter, Output, NgModule } from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/resized-event.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\nimport * as ɵngcc0 from '@angular/core';\n\nvar ResizedEvent =\n/**\r\n * @param {?} element\r\n * @param {?} newWidth\r\n * @param {?} newHeight\r\n * @param {?} oldWidth\r\n * @param {?} oldHeight\r\n */\nfunction ResizedEvent(element, newWidth, newHeight, oldWidth, oldHeight) {\n  _classCallCheck(this, ResizedEvent);\n\n  this.element = element;\n  this.newWidth = newWidth;\n  this.newHeight = newHeight;\n  this.oldWidth = oldWidth;\n  this.oldHeight = oldHeight;\n};\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/resized.directive.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar ResizedDirective = /*#__PURE__*/function () {\n  /**\r\n   * @param {?} element\r\n   */\n  function ResizedDirective(element) {\n    _classCallCheck(this, ResizedDirective);\n\n    this.element = element;\n    this.resized = new EventEmitter();\n  }\n  /**\r\n   * @return {?}\r\n   */\n\n\n  _createClass(ResizedDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      // only initialize resize watching if sensor is available\n      if (ResizeSensor) {\n        this.resizeSensor = new ResizeSensor(this.element.nativeElement,\n        /**\r\n        * @return {?}\r\n        */\n        function () {\n          return _this.onResized();\n        });\n      }\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.resizeSensor) {\n        this.resizeSensor.detach();\n      }\n    }\n    /**\r\n     * @private\r\n     * @return {?}\r\n     */\n\n  }, {\n    key: \"onResized\",\n    value: function onResized() {\n      /** @type {?} */\n      var newWidth = this.element.nativeElement.clientWidth;\n      /** @type {?} */\n\n      var newHeight = this.element.nativeElement.clientHeight;\n\n      if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\n        return;\n      }\n      /** @type {?} */\n\n\n      var event = new ResizedEvent(this.element, newWidth, newHeight, this.oldWidth, this.oldHeight);\n      this.oldWidth = this.element.nativeElement.clientWidth;\n      this.oldHeight = this.element.nativeElement.clientHeight;\n      this.resized.emit(event);\n    }\n  }]);\n\n  return ResizedDirective;\n}();\n\nResizedDirective.ɵfac = function ResizedDirective_Factory(t) {\n  return new (t || ResizedDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nResizedDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ResizedDirective,\n  selectors: [[\"\", \"resized\", \"\"]],\n  outputs: {\n    resized: \"resized\"\n  }\n});\n/** @nocollapse */\n\nResizedDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\nResizedDirective.propDecorators = {\n  resized: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(ResizedDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[resized]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    resized: [{\n      type: Output\n    }]\n  });\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: lib/angular-resized-event.module.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nvar AngularResizedEventModule = function AngularResizedEventModule() {\n  _classCallCheck(this, AngularResizedEventModule);\n};\n\nAngularResizedEventModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: AngularResizedEventModule\n});\nAngularResizedEventModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function AngularResizedEventModule_Factory(t) {\n    return new (t || AngularResizedEventModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AngularResizedEventModule, {\n    declarations: function declarations() {\n      return [ResizedDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [ResizedDirective];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(AngularResizedEventModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [ResizedDirective],\n      imports: [CommonModule],\n      exports: [ResizedDirective]\n    }]\n  }], null, null);\n})();\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: index.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n/**\r\n * @fileoverview added by tsickle\r\n * Generated from: angular-resize-event.ts\r\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\r\n */\n\n\nexport { AngularResizedEventModule, ResizedEvent, ResizedDirective };","map":{"version":3,"sources":["ng:/angular-resize-event/lib/resized-event.ts","ng:/angular-resize-event/lib/resized.directive.ts","ng:/angular-resize-event/lib/angular-resized-event.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;IAEa,Y;AACb;;;;;;;AAAE,sBACW,OADX,EAEW,QAFX,EAGW,SAHX,EAIW,QAJX,EAKW,SALX,EAK4B;AAAA;;AAJjB,OAAA,OAAA,GAAA,OAAA;AACA,OAAA,QAAA,GAAA,QAAA;AACA,OAAA,SAAA,GAAA,SAAA;AACA,OAAA,QAAA,GAAA,QAAA;AACA,OAAA,SAAA,GAAA,SAAA;AACP,C;AAEL;;;;;;;ICJY,gB;AAAmB;;;AAU9B,4BAA6B,OAA7B,EAAgD;AAAA;;AAAnB,SAAA,OAAA,GAAA,OAAA;AAPpB,SAAA,OAAA,GAAU,IAAI,YAAJ,EAAV;AAQR;AACH;;;;;;;+BACU;AAAA;;AACV;AACI,UAAI,YAAJ,EAAkB;AAChB,aAAK,YAAL,GAAoB,IAAI,YAAJ,CAAiB,KAAK,OAAL,CAAa,aAA9B;AAA2C;;;AAAE;AAAA,iBAAM,KAAI,CAAC,SAAL,EAAN;AAAA,SAA7C,CAApB;AACD;AACF;AACH;;;;;;kCACa;AACT,UAAI,KAAK,YAAT,EAAuB;AACrB,aAAK,YAAL,CAAkB,MAAlB;AACD;AACF;AACH;;;;;;;gCACmB;AACnB;AAAyB,UAAf,QAAQ,GAAG,KAAK,OAAL,CAAa,aAAb,CAA2B,WAAvB;AACzB;;AAAyB,UAAf,SAAS,GAAG,KAAK,OAAL,CAAa,aAAb,CAA2B,YAAxB;;AAErB,UAAI,QAAQ,KAAK,KAAK,QAAlB,IAA8B,SAAS,KAAK,KAAK,SAArD,EAAgE;AAC9D;AACD;AACL;;;AACwB,UAAd,KAAK,GAAG,IAAI,YAAJ,CACZ,KAAK,OADO,EAEZ,QAFY,EAGZ,SAHY,EAIZ,KAAK,QAJO,EAKZ,KAAK,SALO,CAAM;AAQpB,WAAK,QAAL,GAAgB,KAAK,OAAL,CAAa,aAAb,CAA2B,WAA3C;AACA,WAAK,SAAL,GAAiB,KAAK,OAAL,CAAa,aAAb,CAA2B,YAA5C;AAEA,WAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB;AACD;;;;;;iCAjDF,wB,CAAS,C,EAAA;AAAC,SAAA,KAAA,CAAA,IACT,gBADS,EACC,MAAW,CAAA,iBAAX,CACX,MAAA,CAAA,UADW,CADD,CAAA;AAEV,C;;;;;;aACI;;;AAAC;;AAAmB,gBAAA,CAAA,cAAA,GAAA;AAAA,SAAA,CAEpB;AAAA,IAAA,IAAA,EATe;AASf,GAFoB,CAAA;AAAA,CAAA;;AAPW,gBAAA,CAAA,cAAA,GAAA;AAAoC,EAAA,OAAA,EAAA,CAAA;AAAA,IAAA,IAAA,EASrE;AATqE,GAAA;AAApC,CAAA;;;;;;;;;;;;;;;;;;AAUjC,C;AAAE;;;;;;;ICDQ,yB;;;;wCALZ,gB,CAAA;AAAA,EAAA,IAAQ,EAAA;AAAR,C;AACa,yBAAoB,CAAA,IAApB,GAAoB,MAAA,CAAA,gBAAA,CACtB;AAAA,EAAA,OAAa,EAAA,SAAA,iCAAA,CACI,CADJ,EACI;AAAA,WAAA,KAC5B,CAAA,IAAA,yBAD4B,GAAA;AAC5B,GAFW;AAEX,EAAA,OAAA,EAAA,CAAA,CAAA,YAAA,CAAA;AAFW,CADsB,CAApB;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIT,C;AAAE;;;;;;AACkK;;;;;;;AAA4N,SAAA,yBAAA,EAAA,YAAA,EAAA,gBAAA","sourcesContent":["import { ElementRef } from '@angular/core';\r\n\r\nexport class ResizedEvent {\r\n  constructor(\r\n    readonly element: ElementRef,\r\n    readonly newWidth: number,\r\n    readonly newHeight: number,\r\n    readonly oldWidth: number,\r\n    readonly oldHeight: number\r\n  ) {}\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output, OnDestroy } from '@angular/core';\r\nimport { ResizeSensor } from 'css-element-queries';\r\nimport { ResizedEvent } from './resized-event';\r\n\r\n@Directive({\r\n  selector: '[resized]'\r\n})\r\nexport class ResizedDirective implements OnInit, OnDestroy {\r\n\r\n  @Output()\r\n  readonly resized = new EventEmitter<ResizedEvent>();\r\n\r\n  private oldWidth: number;\r\n  private oldHeight: number;\r\n\r\n  private resizeSensor: ResizeSensor;\r\n\r\n  constructor(private readonly element: ElementRef) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // only initialize resize watching if sensor is available\r\n    if (ResizeSensor) {\r\n      this.resizeSensor = new ResizeSensor(this.element.nativeElement, () => this.onResized());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.resizeSensor) {\r\n      this.resizeSensor.detach();\r\n    }\r\n  }\r\n\r\n  private onResized() {\r\n    const newWidth = this.element.nativeElement.clientWidth;\r\n    const newHeight = this.element.nativeElement.clientHeight;\r\n\r\n    if (newWidth === this.oldWidth && newHeight === this.oldHeight) {\r\n      return;\r\n    }\r\n\r\n    const event = new ResizedEvent(\r\n      this.element,\r\n      newWidth,\r\n      newHeight,\r\n      this.oldWidth,\r\n      this.oldHeight\r\n    );\r\n\r\n    this.oldWidth = this.element.nativeElement.clientWidth;\r\n    this.oldHeight = this.element.nativeElement.clientHeight;\r\n\r\n    this.resized.emit(event);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ResizedDirective } from './resized.directive';\r\n\r\n@NgModule({\r\n  declarations: [ResizedDirective],\r\n  imports: [CommonModule],\r\n  exports: [ResizedDirective]\r\n})\r\nexport class AngularResizedEventModule { }\r\n"]},"metadata":{},"sourceType":"module"}