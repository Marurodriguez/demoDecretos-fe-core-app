{"ast":null,"code":"import _classCallCheck from \"C:/Proyectos/simac/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Proyectos/simac/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\nvar TranslateHttpLoader = /*#__PURE__*/function () {\n  /**\n   * @param {?} http\n   * @param {?=} prefix\n   * @param {?=} suffix\n   */\n  function TranslateHttpLoader(http) {\n    var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"/assets/i18n/\";\n    var suffix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \".json\";\n\n    _classCallCheck(this, TranslateHttpLoader);\n\n    this.http = http;\n    this.prefix = prefix;\n    this.suffix = suffix;\n  }\n  /**\n   * Gets the translations from the server\n   * @param {?} lang\n   * @return {?}\n   */\n\n\n  _createClass(TranslateHttpLoader, [{\n    key: \"getTranslation\",\n    value: function getTranslation(lang) {\n      return this.http.get(\"\".concat(this.prefix).concat(lang).concat(this.suffix));\n    }\n  }]);\n\n  return TranslateHttpLoader;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingReturn,uselessCode} checked by tsc\n */\n\n\nexport { TranslateHttpLoader };","map":{"version":3,"sources":["ng:/@ngx-translate/http-loader/lib/http-loader.ts"],"names":[],"mappings":";;;;;;;IAIa,mB;AAAsB;;;;;AACjC,+BAAoB,IAApB,EAA8G;AAAA,QAAjE,MAAiE,uEAAhD,eAAgD;AAAA,QAAxB,MAAwB,uEAAP,OAAO;;AAAA;;AAA1F,SAAA,IAAA,GAAA,IAAA;AAAyB,SAAA,MAAA,GAAA,MAAA;AAAyC,SAAA,MAAA,GAAA,MAAA;AAA4B;AACpH;;;;;;;;;mCAIwB,I,EAAY;AAChC,aAAO,KAAK,IAAL,CAAU,GAAV,WAAiB,KAAK,MAAtB,SAA+B,IAA/B,SAAsC,KAAK,MAA3C,EAAP;AACD;;;;;AAEF;;;;;AAA2H;;;;;;AAA2H,SAAA,mBAAA","sourcesContent":["import {HttpClient} from \"@angular/common/http\";\nimport {TranslateLoader} from \"@ngx-translate/core\";\nimport {Observable} from 'rxjs';\n\nexport class TranslateHttpLoader implements TranslateLoader {\n  constructor(private http: HttpClient, public prefix: string = \"/assets/i18n/\", public suffix: string = \".json\") {}\n\n  /**\n   * Gets the translations from the server\n   */\n  public getTranslation(lang: string): Observable<Object> {\n    return this.http.get(`${this.prefix}${lang}${this.suffix}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}