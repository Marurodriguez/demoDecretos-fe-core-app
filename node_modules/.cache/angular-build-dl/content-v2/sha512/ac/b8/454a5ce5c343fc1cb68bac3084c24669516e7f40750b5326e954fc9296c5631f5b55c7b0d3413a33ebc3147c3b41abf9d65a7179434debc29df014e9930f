{"version":3,"sources":["./src/app/pages/asiento/asiento-routing.module.ts","./src/app/pages/asiento/abm/asiento-registro-abm/asiento-registro-abm.component.ts","./src/app/pages/asiento/abm/asiento-registro-abm/asiento-registro-abm.component.html","./src/app/pages/asiento/abm/asiento-abm.component.ts","./src/app/pages/asiento/abm/asiento-abm.component.html","./src/app/pages/asiento/asiento.module.ts","./src/app/pages/asiento/listado/asiento-listado.component.ts","./src/app/pages/asiento/listado/asiento-listado.component.html"],"names":[],"mappings":"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","file":"pages-asiento-asiento-module-es2015.js","sourcesContent":["import { AsientoListadoComponent } from './listado/asiento-listado.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AsientoAbmComponent } from './abm/asiento-abm.component';\n\n\n\nconst routes: Routes = [\n  // { path: '',\n  //   redirectTo: '/listado',\n  //   pathMatch: 'full'\n  // },\n  {\n    path: 'listado',\n    component: AsientoListadoComponent,\n    pathMatch: 'full',\n    data: {\n      title: 'Listado'\n    }\n  },\n  {\n    path: 'abm/:operation',\n    component: AsientoAbmComponent,\n    data: {\n      title: 'Nuevo Asiento',\n      operation: 'new'\n    }\n  }\n  // {\n  //   path: 'abm/:operation/:seccion/:uuid',\n  //   component: ClientesAbmComponent,\n  //   // pathMatch: 'full',\n  //   data: {\n  //     title: 'Cliente ABM',\n  //     operation: 'view'\n  //   }\n  // }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AsientoRoutingModule { }\n","import { ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\nimport { NgbCalendar, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { AppConfig } from '../../../../../../../coreApp/src/app/app.config';\nimport { PaginateDataModel } from '../../../../../../../coreApp/src/app/models/PaginateData.model';\nimport { PaginateListModel } from '../../../../../../../coreApp/src/app/models/PaginateList.model';\nimport { UserModel } from '../../../../../../../coreApp/src/app/models/user.model';\nimport { DataService } from '../../../../../../../coreApp/src/app/services/data.services';\nimport { AuthUserService } from '../../../../../../../coreApp/src/app/shared/auth/auth-user.service';\nimport { SmSelectOptions } from '../../../../../../../coreApp/src/app/shared/components/sm-select/sm-select.component';\nimport { AsientoModel } from '../../../../models/Asiento.model';\nimport { AsientoRegistroModel } from '../../../../models/AsientoRegistro.model';\nimport { CuentaContableModel } from '../../../../models/CuentaContable.model';\nimport { EmpresaModel } from '../../../../models/Empresa.model';\nimport { enumWS } from '../../../../navigation/ws/ws-routes.config';\n\n\n@Component({\n  selector: 'asiento-registro-abm',\n  templateUrl: './asiento-registro-abm.component.html',\n  styleUrls: ['./asiento-registro-abm.component.scss']\n})\n\nexport class AsientoRegistroAbmComponent {\n  /************************************************************************************************************************\n   * Inputs && Outputs && Properties\n   *\n   ************************************************************************************************************************/\n   @Input() registro: AsientoRegistroModel = new AsientoRegistroModel();\n  /************************************************************************************************************************\n   * Variables\n   *\n   ************************************************************************************************************************/\n\n   /************************************************************************************************************************\n    * Constructor && Implements\n    *\n    ************************************************************************************************************************/\n   constructor(public dataService: DataService,\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\n               public router: Router, public route: ActivatedRoute,\n               public authUserService: AuthUserService, public serializer: UrlSerializer,\n               private calendar: NgbCalendar){\n   }\n\n\n\n   /************************************************************************************************************************\n    *\n    * Eventos\n    *\n    ************************************************************************************************************************/\n    ngOnInit() {\n\n    }\n\n\n   /************************************************************************************************************************\n    * FUNCTIONS\n    *\n    ************************************************************************************************************************/\n    deleteRegistro() {\n      this.registro.status = -1;\n      this.cd.markForCheck();\n    }\n\n    selectCuenta(cuenta:CuentaContableModel){\n      this.registro.cuenta = cuenta;\n      this.registro.idCuenta = cuenta.id;\n    }\n\n\n  /************************************************************************************************************************\n   *\n   * RESPONSE OK/ERROR\n   *\n   ************************************************************************************************************************/\n\n\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\n    //this.refreshComponent();\n    // switch(ws.enumUrl) {\n    //   case enumWS.CUENTA_CONTABLE_PAGINATE:\n    //     this.rows = data.content;\n    //     this.loaded = true;\n    //     this.cd.markForCheck();\n    //   break;\n    // }\n   }\n\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\n    // this.loaded = true;\n    // this.rows = [];\n    // this.cd.markForCheck();\n   }\n}\n","<div class=\"row\" *ngIf=\"registro.status == 0\">\n    <div class=\"col-1\">\n        <label for=\"input-nombre\">Ref</label>\n        <input class=\"form-control\" [(ngModel)]=\"registro.referencia\" />\n    </div>\n    <div class=\"col-3\">\n        <label for=\"input-nombre\">Cuenta</label>\n        <cuenta-select (changeEvent)=\"selectCuenta($event)\"></cuenta-select>\n    </div>\n    <div class=\"col-4\">\n        <label for=\"input-nombre\">Descripcion</label>\n        <input class=\"form-control\" [(ngModel)]=\"registro.descripcion\" />\n    </div>\n    <div class=\"col-2\">\n        <ng-template [ngIf]=\"registro.credito == 0\">\n            <label for=\"input-nombre\">Débito</label>\n            <input class=\"form-control\" [(ngModel)]=\"registro.debito\" />\n        </ng-template>\n    </div>\n    \n    <div class=\"col-2\">\n        <ng-template [ngIf]=\"registro.debito == 0\">\n            <label for=\"input-nombre\">Crédito</label>\n            <input class=\"form-control\" [(ngModel)]=\"registro.credito\" />\n        </ng-template>\n    </div>\n\n    <div class=\"d-inline-flex\">\n        <i (click)=\"deleteRegistro()\" class=\"fas fa-minus-circle warning cursor-pointer\" ></i>\n    </div>\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\nimport { NgbCalendar, NgbDate, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\nimport { UserModel } from '../../../../../../coreApp/src/app/models/user.model';\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\nimport { SmSelectOptions } from '../../../../../../coreApp/src/app/shared/components/sm-select/sm-select.component';\nimport { AsientoModel } from '../../../models/Asiento.model';\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\nimport { EmpresaModel } from '../../../models/Empresa.model';\nimport { NegocioModel } from '../../../models/Negocio.model';\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\nimport { UserService } from '../../../services/User.service';\nimport { PageComponentInterface } from '../../_PageInterface/PageComponentInterface';\nimport swal from 'sweetalert2';\nimport { regExpEscape } from '@ng-bootstrap/ng-bootstrap/util/util';\n\n@Component({\n  selector: 'asiento-abm',\n  templateUrl: './asiento-abm.component.html',\n  styleUrls: ['./asiento-abm.component.scss']\n})\n\nexport class AsientoAbmComponent implements PageComponentInterface{\n  /************************************************************************************************************************\n   * Inputs && Outputs && Properties\n   *\n   ************************************************************************************************************************/\n\n  /************************************************************************************************************************\n   * Variables\n   *\n   ************************************************************************************************************************/\n\n    model: NgbDateStruct;\n    today = this.calendar.getToday();\n\n    public asiento: AsientoModel = new AsientoModel();\n    public referencia: string = \"\";\n    public loaded: boolean = false;\n    public isCollapsed:boolean = false;\n    public rows:CuentaContableModel[] = [];\n    public negocioOptions: SmSelectOptions = new SmSelectOptions();\n    public empresas: EmpresaModel[]=[];\n    public initValue: NegocioModel;\n   /************************************************************************************************************************\n    * Constructor && Implements\n    *\n    ************************************************************************************************************************/\n   constructor(public dataService: DataService,\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\n               public router: Router, public route: ActivatedRoute,\n               public authUserService: AuthUserService, public serializer: UrlSerializer,\n               private calendar: NgbCalendar, private functionService: FunctionService,\n               public userService: UserService){\n\n    // let user: UserModel;\n    // user = this.authUserService.getUser();\n    // let empresas: EmpresaModel[] = user.getData(\"empresaList\",[]);\n    let negocios = this.userService.getEmpresaSelected().negocioList;\n    this.asiento.fechaObj = this.today;\n    this.initValue = negocios[0];\n    this.negocioOptions.bindLabel = \"nombre\";\n    this.negocioOptions.items = negocios;\n    \n    this.userService.setPageComponentActive(this);\n\n    console.log(this.userService.getPageComponentActive());\n   }\n\n\n\n   /************************************************************************************************************************\n    *\n    * Eventos\n    *\n    ************************************************************************************************************************/\n    ngOnInit() {\n      const paginate: PaginateListModel = new PaginateListModel(0,100);\n      //paginate.addParameter(\"idEmpresa\",)\n      this.loaded = false;\n      this.rows = [];\n      this.dataService.httpFunction(enumWS.CUENTA_CONTABLE_PAGINATE,this,paginate)\n    }\n    changeEmpresa(empresaActual: EmpresaModel, empresaAnterior: EmpresaModel): void {\n        //alert(\"Cambio la empresa: \" + empresaActual.nombre);\n    }\n\n\n   /************************************************************************************************************************\n    * FUNCTIONS\n    *\n    ************************************************************************************************************************/\n\n    crearRegistro() {\n      //Crea un registro nuevo y lo muestra en pantalla\n      let asientoReg: AsientoRegistroModel  = new AsientoRegistroModel();\n      this.asiento.registros.push(asientoReg);\n      \n    }\n\n    getTotalString(tipo:string): string{\n      return this.functionService.formatMoney(this.getTotal(tipo));\n    }\n\n    getTotal(tipo:string){\n      let sumDebito: number =0;\n      let sumCredito:number =0;\n      for(let reg of this.asiento.registros){\n        if(reg.status == 0){\n          sumDebito=sumDebito + Number(reg.debito);\n          sumCredito=sumCredito + Number(reg.credito);\n        }\n      }\n      if(tipo == \"debito\"){\n        return sumDebito;\n      }else{\n        return sumCredito;\n      }\n    }\n    deleteRow(row: AsientoRegistroModel) {\n      row.status = -1;\n      this.cd.markForCheck();\n    }\n\n    public validar(): boolean {\n\n      if(this.asiento.debito == 0 && this.asiento.credito == 0){\n        swal.fire(\"Guardar\", \"El débito y el Crédito son nulos.\",\"warning\");\n        return false;\n      }\n      // Validar que el debe sea igual que el haber!!\n      if(this.asiento.debito!=this.asiento.credito){\n        swal.fire(\"Guardar\", \"El debito y el credito no coinciden.\",\"warning\");\n        return false;\n      }\n      return true;\n    }\n\n\n    guardar(): boolean {\n      let sumDebito: number = this.getTotal(\"debito\");\n      let sumCredito: number = this.getTotal(\"credito\");\n\n      this.asiento.debito = sumDebito;\n      this.asiento.credito = sumCredito;\n\n      if(this.validar() == false){\n        return false;\n      }\n      // Grabar en los registros el asiento\n      for(let reg of this.asiento.registros){\n        reg.idEntidad = this.asiento.entidad.id;\n      }\n      //this.asiento.idEntidad = this.asiento.entidad.id;\n      this.asiento.fechaDTO = this.asiento.fechaObj.year + '-' + this.asiento.fechaObj.month + '-' + this.asiento.fechaObj.day;\n      this.asiento.idEmpresa = this.userService.getEmpresaSelected().id;\n      this.asiento.idNegocio = this.asiento.negocio.id;\n     \n\n      this.dataService.httpFunction(enumWS.ASIENTO_SAVE,this,this.asiento,{});\n\n\n      return true;\n    }\n\n    cancelar() {\n\n    }\n\n  /************************************************************************************************************************\n   *\n   * RESPONSE OK/ERROR\n   *\n   ************************************************************************************************************************/\n\n\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\n    //this.refreshComponent();\n    switch(ws.enumUrl) {\n      case enumWS.CUENTA_CONTABLE_PAGINATE:\n        this.rows = data.content;\n        this.loaded = true;\n        this.cd.markForCheck();\n      break;\n      case enumWS.ASIENTO_SAVE:\n        swal.fire(\"!Guardado exitoso!\", \"Se ha guardado el registro correctamente\",\"success\");\n        this.asiento.registros = [];\n        this.asiento.descripcion = \"\";\n        this.asiento.referencia = \"\";\n        this.cd.markForCheck();\n\n      break;\n    }\n   }\n\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\n    this.loaded = true;\n    this.rows = [];\n    this.cd.markForCheck();\n   }\n}\n","<section id=\"collapse\">\n    <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n            <div class=\"content-header\">Asientos Manuales</div>\n            <p class=\"content-sub-header mb-1\">Desde esta pantalla se van a poder registrar los asientos contables. (NUEVO)</p>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <div class=\"row\">\n                        <!-- Fecha -->\n                        <div class=\"col-6 col-md-4 col-lg-3\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"input-nombre\">Fecha</label>\n                                <div class=\"input-group\">\n                                    <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"asiento.fechaObj\" ngbDatepicker [footerTemplate]=\"footerTemplate\" #d=\"ngbDatepicker\" />\n                                    <button class=\"btn btn-outline-info far fa-calendar-alt ml-1\" (click)=\"d.toggle()\" type=\"button\"></button>\n                                </div>\n                                <ng-template #footerTemplate>\n                                    <hr class=\"my-0\" />\n                                    <button class=\"btn btn-primary btn-sm m-2 float-start\" (click)=\"model = today; d.close()\">Today</button>\n                                    <button class=\"btn btn-secondary btn-sm m-2 float-end\" (click)=\"d.close()\">Close</button>\n                                </ng-template>\n                            </fieldset>\n                        </div>\n                        <!-- Número de Referencia -->\n                        <div class=\"col-6 col-md-4 col-lg-3\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"input-nombre\">Referencia</label>\n                                <input class=\"form-control\" [(ngModel)]=\"asiento.referencia\"  />\n                            </fieldset>\n                        </div>\n                        <!-- Empresa -->\n                        <div class=\"col-6 col-md-4 col-lg-3\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"input-nombre\">Negocio</label>\n                                <sm-select (changeEvent)=\"asiento.negocio = $event\" [options]=\"negocioOptions\" [initValue]=\"initValue\"></sm-select>\n                            </fieldset>\n                        </div>\n                        <!-- Entidad -->\n                        <div class=\"col-6 col-md-4 col-lg-3\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"input-nombre\">Entidad</label>\n                                <entidad-select (changeEvent)=\"asiento.entidad = $event\"></entidad-select>\n                            </fieldset>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <!-- Observaciones del Asiento -->\n                        <div class=\"col-12\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"input-nombre\">Observaciones</label>\n                                <textarea class=\"form-control ng-untouched ng-pristine ng-valid\" rows=\"5\" [(ngModel)]=\"asiento.descripcion\" style=\"resize: none\"></textarea>\n                            </fieldset>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"registro\" *ngFor=\"let reg of asiento.registros\">\n                        <asiento-registro-abm [registro]=\"reg\"></asiento-registro-abm>\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-3\">\n                            <button class=\"btn btn-primary btn-large\" (click)=\"crearRegistro()\">Agregar Linea</button>\n                        </div>\n                        <div class=\"col-5\"></div>\n                        <div class=\"col-2\">\n                            <label for=\"input-nombre\">Débito</label>\n                            <input class=\"form-control\" style=\"text-align: right; font-weight: bold\" value=\"{{ getTotalString('debito') }}\" disabled />\n                        </div>\n                        <div class=\"col-2\">\n                            <label for=\"input-nombre\">Crédito</label>\n                            <input class=\"form-control\" style=\"text-align: right; font-weight: bold\" value=\"{{ getTotalString('credito') }}\" disabled />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"row mt-2 mb-2\">\n            <div class=\"col-6 text-center\">\n                <button class=\"btn btn-danger btn-lg\" (click)=\"cancelar()\">Cancelar</button>\n            </div>\n            <div class=\"col-6 text-center\">\n                <button class=\"btn btn-primary btn-lg\" (click)=\"guardar()\">Guardar</button>\n            </div>\n        </div>\n    </div>\n</section>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from '@angular/core';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { ChartistModule } from 'ng-chartist';\nimport { ChartsModule } from 'ng2-charts';\nimport { ComponentsModule } from '../../../../../coreApp/src/app/shared/components.module';\nimport { PipeModule } from '../../../../../coreApp/src/app/shared/pipes/pipe.module';\nimport { ComponentsProyectModule } from '../../components/components-proyect.module';\nimport { AsientoListadoComponent } from \"./listado/asiento-listado.component\";\nimport { AsientoAbmComponent } from \"./abm/asiento-abm.component\";\nimport { AsientoRoutingModule } from \"./asiento-routing.module\";\nimport { SharedAppModule } from \"../../SharedApp.module\";\nimport { AsientoRegistroAbmComponent } from \"./abm/asiento-registro-abm/asiento-registro-abm.component\";\nimport { UsuarioModel } from \"../../models/Usuario.model\";\nimport { UserService } from \"../../services/User.service\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsProyectModule,\n    ComponentsModule,\n    // CoreModule,\n    AsientoRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ChartsModule,\n    ChartistModule,\n    NgxChartsModule,\n    NgApexchartsModule,\n    HttpClientModule,\n    NgbModule,\n    NgSelectModule,\n    NgxDatatableModule,\n    PipeModule,\n    NgbTooltipModule,\n    SharedAppModule\n  ],\n  exports: [],\n  declarations: [\n    AsientoListadoComponent,\n    AsientoAbmComponent,\n    AsientoRegistroAbmComponent\n  ],\n  providers: [\n\n  ],\n})\nexport class AsientoModule { }\n","import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\nimport { AsientoModel } from '../../../models/Asiento.model';\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\nimport { TitleBarService } from '../../../services/TitleBar.service';\nimport { UserService } from '../../../services/User.service';\n\n\n@Component({\n  selector: 'asiento-listado',\n  templateUrl: './asiento-listado.component.html',\n  styleUrls: ['./asiento-listado.component.scss']\n})\n\nexport class AsientoListadoComponent {\n  /************************************************************************************************************************\n   * Inputs && Outputs && Properties\n   *\n   ************************************************************************************************************************/\n\n  /************************************************************************************************************************\n   * Variables\n   *\n   ************************************************************************************************************************/\n  public loaded: boolean = false;\n  public isCollapsed: boolean = false;\n  public asientos: AsientoModel[] = [];\n  public posAsiento: number = 0;\n  public cuentasActivos: CuentaContableModel[] = [];\n  public cuentasPasivos: CuentaContableModel[] = [];\n  public fecha: NgbDate = new NgbDate(2020, 9, 26);\n  public fechaFin: NgbDate = new NgbDate(2022, 1, 1);\n  public page: number = 0;\n  public size: number = 10;\n\n\n  public loading: boolean = false;\n  public paginateData: PaginateDataModel = new PaginateDataModel();\n\n  public sizeAnt: number = this.size;\n  public pageAnt: number = this.page;\n  public fechaAnt: NgbDate = new NgbDate(2022, 9, 26);\n  /************************************************************************************************************************\n  * Constructor && Implements\n  *\n  ************************************************************************************************************************/\n  constructor(public dataService: DataService,\n    public appConfig: AppConfig, private cd: ChangeDetectorRef,\n    public router: Router, public route: ActivatedRoute,\n    public authUserService: AuthUserService,\n    public serializer: UrlSerializer, public functionService: FunctionService, public userService: UserService,\n    public calendar: NgbCalendar, public titleBarService: TitleBarService) {\n\n    // Primer día del mes  \n    // this.fecha= this.calendar.getToday();\n    this.fechaFin = this.calendar.getToday();\n\n    this.titleBarService.title = \"Libro Diario\";\n    this.titleBarService.subTitle = \"Desde esta pantalla se ven los registros del Libro Diario\";\n\n\n  }\n\n  getField(fieldName: string, row: AsientoModel) {\n    switch (fieldName) {\n      case \"fecha\":\n        let date: Date = this.functionService.getDateFromString(row.fecha, \"-\");\n        return this.functionService.formatDate(date, \"dd/mm/yy\");\n        break;\n      case \"cantidadRegistros\":\n        if (row.registros && row?.registros.length > 0) {\n          return row.registros.length;\n        } else {\n          return 0;\n        }\n        break;\n    }\n  }\n\n  getFieldReg(fieldName: string, row: AsientoRegistroModel) {\n    try {\n      switch (fieldName) {\n        case \"entidad\":\n          if (row.entidad && row.entidad.nombre) {\n            return row.entidad.nombre;\n          }\n          break;\n      }\n    } catch (ex) {\n      return \"\";\n    }\n    return \"\";\n  }\n\n  getTotal(tipo: string) {\n    let sumDebito: number = 0;\n    let sumcredito: number = 0;\n    for (let asiento of this.asientos) {\n      for (let reg of asiento.registros) {\n        sumDebito = sumDebito + reg.debito;\n        sumcredito = sumcredito + reg.credito\n      }\n    }\n    if (tipo == 'debito') {\n      return sumDebito;\n    } else {\n      return sumcredito;\n    }\n  }\n\n  /************************************************************************************************************************\n   *\n   * Eventos\n   *\n   ************************************************************************************************************************/\n  ngOnInit() {\n\n  }\n\n\n  /************************************************************************************************************************\n   * FUNCTIONS\n   *\n   ************************************************************************************************************************/\n  refresh(force: boolean) {\n    if (!(this.pageAnt != this.page || this.sizeAnt != this.size || (this.fechaAnt.year != this.fechaAnt.year || this.fecha.month != this.fechaAnt.month || this.fecha.day != this.fechaAnt.day)) && force == false) {\n      return; //No hubo cambios!\n    }\n    this.pageAnt = this.page;\n    this.fechaAnt.day = this.fecha.day;\n    this.fechaAnt.month = this.fecha.month;\n    this.fechaAnt.year = this.fecha.year;\n\n    let paginateListModel: PaginateListModel = new PaginateListModel(this.page, this.size);\n    paginateListModel.addParameter(\"empresa\", this.userService.getIdEmpresaSelected().toString());\n\n    //FechaInit! --> La fecha seleccionada\n    let fechaInit: string = this.fecha.year + '-' + this.fecha.month + '-' + this.fecha.day + ' 00:00:01';\n    let fechaFin: string = this.fechaFin.year + '-' + this.fechaFin.month + '-' + this.fechaFin.day + ' 23:59:59';\n\n    paginateListModel.addParameter(\"fechaInicio\", fechaInit);\n    paginateListModel.addParameter(\"fechaFin\", fechaFin);\n\n    this.dataService.httpFunction(enumWS.DOCUMENTO_PAGINATE, this, paginateListModel);\n\n    this.loading = true;\n  }\n\n  getClass(reg): string {\n    try {\n      if (reg.debito > 0) {\n        return \"reg-debe\";\n      } else {\n        return \"reg-haber\";\n      }\n    } catch (ex) {\n      return \"\";\n    }\n  }\n\n  SetPage(paginate: PaginateListModel) {\n    this.page = paginate.page;\n    this.size = paginate.size;\n    this.refresh(false);\n  }\n\n\n  /************************************************************************************************************************\n   *\n   * RESPONSE OK/ERROR\n   *\n   ************************************************************************************************************************/\n\n  responseOk(httpOperation: any, http: string, data: PaginateDataModel, ws: any) {\n    switch (ws.enumUrl) {\n      case enumWS.ASIENTO_PAGINATE_DTO:\n        this.paginateData = data;\n        this.asientos = data.content;\n        this.loaded = true;\n        this.cd.markForCheck();\n        break;\n    }\n  }\n\n  responseError(urlResource: string, httpOperation: string, data: any, ws?: any) { }\n}\n","<section id=\"collapse\">\n    <div class=\"row mt-2 mb-2\">\n        <div class=\"col-8 col-md-6\">\n            <periodo-select [(fInicio)]=\"fecha\" [(fFin)]=\"fechaFin\"></periodo-select>\n        </div>\n        <div class=\"col-4 col-md-6\">\n            <button class=\"btn btnl-lg btn-primary mt-1\" (click)=\"refresh(true)\">CARGAR</button>\n        </div>\n    </div>\n    <!-- <div class=\"card card-header\">\n        <div class=\"card-content\">\n            <div class=\"row header\">\n                <div class=\"colx colx-asiento\">#</div>\n                <div class=\"colx colx-fecha\">Fecha</div>\n                <div class=\"colx colx-referencia\">Referencia</div>\n                <div class=\"colx colx-tercero\">Tercero</div>\n                <div class=\"colx colx-cuentacontable\">Cuenta Contable</div>\n                <div class=\"colx colx-debito\">Débito</div>\n                <div class=\"colx colx-credito\">Crédito</div>\n            </div>\n        </div>\n    </div> -->\n\n    <ng-template [ngIf]=\"loaded\">\n        <div class=\"container-table\">\n            <table width=\"100%\" class=\"table table-transparent table-striped table-dark\">\n                <thead class=\"thead-dark\">\n                    <th width=\"5%\">#</th>\n                    <th width=\"10%\">Fecha</th>\n                    <th width=\"15%\">Referencia</th>\n                    <th width=\"20%\">Tercero</th>\n                    <th width=\"30%\">Cuenta Contable</th>\n                    <th width=\"10%\">Debito</th>\n                    <th width=\"10%\">Credito</th>\n                </thead>\n                <tbody>\n                    <ng-template ngFor let-asiento [ngForOf]=\"asientos\">\n                        <tr class=\"row-space\">\n                            <td colspan=\"100\" class=\"row-space\">\n                                <i class=\"far fa-book-open text-primary\" style=\"text-align: middle; font-size:1.5rem;\"></i>\n                            </td>\n                        </tr>\n                        <tr class=\"row-init\">\n                            <!-- número # -->\n                            <td [attr.rowspan]=\"getField('cantidadRegistros', asiento) + 1\">\n                                {{ asiento.id }}\n                            </td>\n                            <!-- FECHA -->\n                            <td [attr.rowspan]=\"getField('cantidadRegistros', asiento) + 1\">\n                                {{ asiento.fecha }}\n                            </td>\n                            <!-- referencia -->\n                            <td [attr.rowspan]=\"getField('cantidadRegistros', asiento) + 1\">\n                                {{ asiento.referencia }}\n                            </td>\n                            <td colspan=\"4\"></td>\n                        </tr>\n                        <tr *ngFor=\"let reg of asiento.registros\">\n                            <td>\n                                {{ getFieldReg(\"entidad\", reg) }}\n                            </td>\n                            <td class=\"td-cuenta\">\n                                <cuenta-info [cuenta]=\"reg.cuenta\"></cuenta-info>\n                            </td>\n                            <td class=\"td-debito\">\n                                <p *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.debito) }}</p>\n                            </td>\n                            <td class=\"td-credito\">\n                                <p *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.credito) }}</p>\n                            </td>\n                        </tr>\n                        <tr class=\"row-footer\">\n                            <td colspan=\"5\"></td>\n                            <td class=\"td-debito td-total\">\n                                <p>{{ functionService.formatMoney(asiento.debito) }}</p>\n                            </td>\n                            <td class=\"td-credito td-total\">\n                                <p>{{ functionService.formatMoney(asiento.debito) }}</p>\n                            </td>\n                        </tr>\n                        <tr class=\"row-space\"></tr>\n                    </ng-template>\n                </tbody>\n            </table>\n        </div>\n        <footer class=\"mt-2\" [paginate]=\"paginateData\" (setPageEvent)=\"SetPage($event)\"></footer>\n    </ng-template>\n</section>\n"],"sourceRoot":"webpack:///"}