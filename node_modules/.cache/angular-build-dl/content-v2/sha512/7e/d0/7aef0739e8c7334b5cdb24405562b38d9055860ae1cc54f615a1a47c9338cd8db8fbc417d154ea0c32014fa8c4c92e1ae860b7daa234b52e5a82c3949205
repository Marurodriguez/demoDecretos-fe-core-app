{"version":3,"sources":["webpack:///src/app/pages/asiento/asiento-routing.module.ts","webpack:///src/app/pages/asiento/abm/asiento-registro-abm/asiento-registro-abm.component.ts","webpack:///src/app/pages/asiento/abm/asiento-registro-abm/asiento-registro-abm.component.html","webpack:///src/app/pages/asiento/abm/asiento-abm.component.ts","webpack:///src/app/pages/asiento/abm/asiento-abm.component.html","webpack:///src/app/pages/asiento/asiento.module.ts","webpack:///src/app/pages/asiento/listado/asiento-listado.component.ts","webpack:///src/app/pages/asiento/listado/asiento-listado.component.html"],"names":["routes","path","component","pathMatch","data","title","operation","AsientoRoutingModule","forChild","imports","exports","AsientoRegistroAbmComponent","dataService","appConfig","cd","router","route","authUserService","serializer","calendar","registro","status","markForCheck","cuenta","idCuenta","id","httpOperation","http","ws","urlResource","selector","templateUrl","styleUrls","AsientoAbmComponent","functionService","userService","today","getToday","asiento","referencia","loaded","isCollapsed","rows","negocioOptions","empresas","negocios","getEmpresaSelected","negocioList","fechaObj","initValue","bindLabel","items","setPageComponentActive","console","log","getPageComponentActive","paginate","httpFunction","CUENTA_CONTABLE_PAGINATE","empresaActual","empresaAnterior","asientoReg","registros","push","tipo","formatMoney","getTotal","sumDebito","sumCredito","reg","Number","debito","credito","row","fire","validar","idEntidad","entidad","fechaDTO","year","month","day","idEmpresa","idNegocio","negocio","ASIENTO_SAVE","enumUrl","content","descripcion","crearRegistro","cancelar","guardar","AsientoModule","declarations","providers","AsientoListadoComponent","titleBarService","asientos","posAsiento","cuentasActivos","cuentasPasivos","fecha","fechaFin","page","size","loading","paginateData","sizeAnt","pageAnt","fechaAnt","subTitle","fieldName","date","getDateFromString","formatDate","length","nombre","ex","sumcredito","force","paginateListModel","addParameter","getIdEmpresaSelected","toString","fechaInit","DOCUMENTO_PAGINATE","refresh","ASIENTO_PAGINATE_DTO"],"mappings":"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","file":"pages-asiento-asiento-module-es5.js","sourcesContent":["import { AsientoListadoComponent } from './listado/asiento-listado.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AsientoAbmComponent } from './abm/asiento-abm.component';\n\n\n\nconst routes: Routes = [\n  // { path: '',\n  //   redirectTo: '/listado',\n  //   pathMatch: 'full'\n  // },\n  {\n    path: 'listado',\n    component: AsientoListadoComponent,\n    pathMatch: 'full',\n    data: {\n      title: 'Listado'\n    }\n  },\n  {\n    path: 'abm/:operation',\n    component: AsientoAbmComponent,\n    data: {\n      title: 'Nuevo Asiento',\n      operation: 'new'\n    }\n  }\n  // {\n  //   path: 'abm/:operation/:seccion/:uuid',\n  //   component: ClientesAbmComponent,\n  //   // pathMatch: 'full',\n  //   data: {\n  //     title: 'Cliente ABM',\n  //     operation: 'view'\n  //   }\n  // }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AsientoRoutingModule { }\n","import { ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\nimport { NgbCalendar, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { AppConfig } from '../../../../../../../coreApp/src/app/app.config';\nimport { PaginateDataModel } from '../../../../../../../coreApp/src/app/models/PaginateData.model';\nimport { PaginateListModel } from '../../../../../../../coreApp/src/app/models/PaginateList.model';\nimport { UserModel } from '../../../../../../../coreApp/src/app/models/user.model';\nimport { DataService } from '../../../../../../../coreApp/src/app/services/data.services';\nimport { AuthUserService } from '../../../../../../../coreApp/src/app/shared/auth/auth-user.service';\nimport { SmSelectOptions } from '../../../../../../../coreApp/src/app/shared/components/sm-select/sm-select.component';\nimport { AsientoModel } from '../../../../models/Asiento.model';\nimport { AsientoRegistroModel } from '../../../../models/AsientoRegistro.model';\nimport { CuentaContableModel } from '../../../../models/CuentaContable.model';\nimport { EmpresaModel } from '../../../../models/Empresa.model';\nimport { enumWS } from '../../../../navigation/ws/ws-routes.config';\n\n\n@Component({\n  selector: 'asiento-registro-abm',\n  templateUrl: './asiento-registro-abm.component.html',\n  styleUrls: ['./asiento-registro-abm.component.scss']\n})\n\nexport class AsientoRegistroAbmComponent {\n  /************************************************************************************************************************\n   * Inputs && Outputs && Properties\n   *\n   ************************************************************************************************************************/\n   @Input() registro: AsientoRegistroModel = new AsientoRegistroModel();\n  /************************************************************************************************************************\n   * Variables\n   *\n   ************************************************************************************************************************/\n\n   /************************************************************************************************************************\n    * Constructor && Implements\n    *\n    ************************************************************************************************************************/\n   constructor(public dataService: DataService,\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\n               public router: Router, public route: ActivatedRoute,\n               public authUserService: AuthUserService, public serializer: UrlSerializer,\n               private calendar: NgbCalendar){\n   }\n\n\n\n   /************************************************************************************************************************\n    *\n    * Eventos\n    *\n    ************************************************************************************************************************/\n    ngOnInit() {\n\n    }\n\n\n   /************************************************************************************************************************\n    * FUNCTIONS\n    *\n    ************************************************************************************************************************/\n    deleteRegistro() {\n      this.registro.status = -1;\n      this.cd.markForCheck();\n    }\n\n    selectCuenta(cuenta:CuentaContableModel){\n      this.registro.cuenta = cuenta;\n      this.registro.idCuenta = cuenta.id;\n    }\n\n\n  /************************************************************************************************************************\n   *\n   * RESPONSE OK/ERROR\n   *\n   ************************************************************************************************************************/\n\n\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\n    //this.refreshComponent();\n    // switch(ws.enumUrl) {\n    //   case enumWS.CUENTA_CONTABLE_PAGINATE:\n    //     this.rows = data.content;\n    //     this.loaded = true;\n    //     this.cd.markForCheck();\n    //   break;\n    // }\n   }\n\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\n    // this.loaded = true;\n    // this.rows = [];\n    // this.cd.markForCheck();\n   }\n}\n","<div class=\"row\" *ngIf=\"registro.status == 0\">\n    <div class=\"col-1\">\n        <label for=\"input-nombre\">Ref</label>\n        <input class=\"form-control\" [(ngModel)]=\"registro.referencia\" />\n    </div>\n    <div class=\"col-3\">\n        <label for=\"input-nombre\">Cuenta</label>\n        <cuenta-select (changeEvent)=\"selectCuenta($event)\"></cuenta-select>\n    </div>\n    <div class=\"col-4\">\n        <label for=\"input-nombre\">Descripcion</label>\n        <input class=\"form-control\" [(ngModel)]=\"registro.descripcion\" />\n    </div>\n    <div class=\"col-2\">\n        <ng-template [ngIf]=\"registro.credito == 0\">\n            <label for=\"input-nombre\">Débito</label>\n            <input class=\"form-control\" [(ngModel)]=\"registro.debito\" />\n        </ng-template>\n    </div>\n    \n    <div class=\"col-2\">\n        <ng-template [ngIf]=\"registro.debito == 0\">\n            <label for=\"input-nombre\">Crédito</label>\n            <input class=\"form-control\" [(ngModel)]=\"registro.credito\" />\n        </ng-template>\n    </div>\n\n    <div class=\"d-inline-flex\">\n        <i (click)=\"deleteRegistro()\" class=\"fas fa-minus-circle warning cursor-pointer\" ></i>\n    </div>\n</div>","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\nimport { NgbCalendar, NgbDate, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\nimport { UserModel } from '../../../../../../coreApp/src/app/models/user.model';\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\nimport { SmSelectOptions } from '../../../../../../coreApp/src/app/shared/components/sm-select/sm-select.component';\nimport { AsientoModel } from '../../../models/Asiento.model';\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\nimport { EmpresaModel } from '../../../models/Empresa.model';\nimport { NegocioModel } from '../../../models/Negocio.model';\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\nimport { UserService } from '../../../services/User.service';\nimport { PageComponentInterface } from '../../_PageInterface/PageComponentInterface';\nimport swal from 'sweetalert2';\nimport { regExpEscape } from '@ng-bootstrap/ng-bootstrap/util/util';\n\n@Component({\n  selector: 'asiento-abm',\n  templateUrl: './asiento-abm.component.html',\n  styleUrls: ['./asiento-abm.component.scss']\n})\n\nexport class AsientoAbmComponent implements PageComponentInterface{\n  /************************************************************************************************************************\n   * Inputs && Outputs && Properties\n   *\n   ************************************************************************************************************************/\n\n  /************************************************************************************************************************\n   * Variables\n   *\n   ************************************************************************************************************************/\n\n    model: NgbDateStruct;\n    today = this.calendar.getToday();\n\n    public asiento: AsientoModel = new AsientoModel();\n    public referencia: string = \"\";\n    public loaded: boolean = false;\n    public isCollapsed:boolean = false;\n    public rows:CuentaContableModel[] = [];\n    public negocioOptions: SmSelectOptions = new SmSelectOptions();\n    public empresas: EmpresaModel[]=[];\n    public initValue: NegocioModel;\n   /************************************************************************************************************************\n    * Constructor && Implements\n    *\n    ************************************************************************************************************************/\n   constructor(public dataService: DataService,\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\n               public router: Router, public route: ActivatedRoute,\n               public authUserService: AuthUserService, public serializer: UrlSerializer,\n               private calendar: NgbCalendar, private functionService: FunctionService,\n               public userService: UserService){\n\n    // let user: UserModel;\n    // user = this.authUserService.getUser();\n    // let empresas: EmpresaModel[] = user.getData(\"empresaList\",[]);\n    let negocios = this.userService.getEmpresaSelected().negocioList;\n    this.asiento.fechaObj = this.today;\n    this.initValue = negocios[0];\n    this.negocioOptions.bindLabel = \"nombre\";\n    this.negocioOptions.items = negocios;\n    \n    this.userService.setPageComponentActive(this);\n\n    console.log(this.userService.getPageComponentActive());\n   }\n\n\n\n   /************************************************************************************************************************\n    *\n    * Eventos\n    *\n    ************************************************************************************************************************/\n    ngOnInit() {\n      const paginate: PaginateListModel = new PaginateListModel(0,100);\n      //paginate.addParameter(\"idEmpresa\",)\n      this.loaded = false;\n      this.rows = [];\n      this.dataService.httpFunction(enumWS.CUENTA_CONTABLE_PAGINATE,this,paginate)\n    }\n    changeEmpresa(empresaActual: EmpresaModel, empresaAnterior: EmpresaModel): void {\n        //alert(\"Cambio la empresa: \" + empresaActual.nombre);\n    }\n\n\n   /************************************************************************************************************************\n    * FUNCTIONS\n    *\n    ************************************************************************************************************************/\n\n    crearRegistro() {\n      //Crea un registro nuevo y lo muestra en pantalla\n      let asientoReg: AsientoRegistroModel  = new AsientoRegistroModel();\n      this.asiento.registros.push(asientoReg);\n      \n    }\n\n    getTotalString(tipo:string): string{\n      return this.functionService.formatMoney(this.getTotal(tipo));\n    }\n\n    getTotal(tipo:string){\n      let sumDebito: number =0;\n      let sumCredito:number =0;\n      for(let reg of this.asiento.registros){\n        if(reg.status == 0){\n          sumDebito=sumDebito + Number(reg.debito);\n          sumCredito=sumCredito + Number(reg.credito);\n        }\n      }\n      if(tipo == \"debito\"){\n        return sumDebito;\n      }else{\n        return sumCredito;\n      }\n    }\n    deleteRow(row: AsientoRegistroModel) {\n      row.status = -1;\n      this.cd.markForCheck();\n    }\n\n    public validar(): boolean {\n\n      if(this.asiento.debito == 0 && this.asiento.credito == 0){\n        swal.fire(\"Guardar\", \"El débito y el Crédito son nulos.\",\"warning\");\n        return false;\n      }\n      // Validar que el debe sea igual que el haber!!\n      if(this.asiento.debito!=this.asiento.credito){\n        swal.fire(\"Guardar\", \"El debito y el credito no coinciden.\",\"warning\");\n        return false;\n      }\n      return true;\n    }\n\n\n    guardar(): boolean {\n      let sumDebito: number = this.getTotal(\"debito\");\n      let sumCredito: number = this.getTotal(\"credito\");\n\n      this.asiento.debito = sumDebito;\n      this.asiento.credito = sumCredito;\n\n      if(this.validar() == false){\n        return false;\n      }\n      // Grabar en los registros el asiento\n      for(let reg of this.asiento.registros){\n        reg.idEntidad = this.asiento.entidad.id;\n      }\n      //this.asiento.idEntidad = this.asiento.entidad.id;\n      this.asiento.fechaDTO = this.asiento.fechaObj.year + '-' + this.asiento.fechaObj.month + '-' + this.asiento.fechaObj.day;\n      this.asiento.idEmpresa = this.userService.getEmpresaSelected().id;\n      this.asiento.idNegocio = this.asiento.negocio.id;\n     \n\n      this.dataService.httpFunction(enumWS.ASIENTO_SAVE,this,this.asiento,{});\n\n\n      return true;\n    }\n\n    cancelar() {\n\n    }\n\n  /************************************************************************************************************************\n   *\n   * RESPONSE OK/ERROR\n   *\n   ************************************************************************************************************************/\n\n\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\n    //this.refreshComponent();\n    switch(ws.enumUrl) {\n      case enumWS.CUENTA_CONTABLE_PAGINATE:\n        this.rows = data.content;\n        this.loaded = true;\n        this.cd.markForCheck();\n      break;\n      case enumWS.ASIENTO_SAVE:\n        swal.fire(\"!Guardado exitoso!\", \"Se ha guardado el registro correctamente\",\"success\");\n        this.asiento.registros = [];\n        this.asiento.descripcion = \"\";\n        this.asiento.referencia = \"\";\n        this.cd.markForCheck();\n\n      break;\n    }\n   }\n\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\n    this.loaded = true;\n    this.rows = [];\n    this.cd.markForCheck();\n   }\n}\n","<section id=\"collapse\">\n    <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n            <div class=\"content-header\">Asientos Manuales</div>\n            <p class=\"content-sub-header mb-1\">Desde esta pantalla se van a poder registrar los asientos contables. (NUEVO)</p>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-header\">\n                    <div class=\"row\">\n                        <!-- Fecha -->\n                        <div class=\"col-6 col-md-4 col-lg-3\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"input-nombre\">Fecha</label>\n                                <div class=\"input-group\">\n                                    <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"asiento.fechaObj\" ngbDatepicker [footerTemplate]=\"footerTemplate\" #d=\"ngbDatepicker\" />\n                                    <button class=\"btn btn-outline-info far fa-calendar-alt ml-1\" (click)=\"d.toggle()\" type=\"button\"></button>\n                                </div>\n                                <ng-template #footerTemplate>\n                                    <hr class=\"my-0\" />\n                                    <button class=\"btn btn-primary btn-sm m-2 float-start\" (click)=\"model = today; d.close()\">Today</button>\n                                    <button class=\"btn btn-secondary btn-sm m-2 float-end\" (click)=\"d.close()\">Close</button>\n                                </ng-template>\n                            </fieldset>\n                        </div>\n                        <!-- Número de Referencia -->\n                        <div class=\"col-6 col-md-4 col-lg-3\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"input-nombre\">Referencia</label>\n                                <input class=\"form-control\" [(ngModel)]=\"asiento.referencia\"  />\n                            </fieldset>\n                        </div>\n                        <!-- Empresa -->\n                        <div class=\"col-6 col-md-4 col-lg-3\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"input-nombre\">Negocio</label>\n                                <sm-select (changeEvent)=\"asiento.negocio = $event\" [options]=\"negocioOptions\" [initValue]=\"initValue\"></sm-select>\n                            </fieldset>\n                        </div>\n                        <!-- Entidad -->\n                        <div class=\"col-6 col-md-4 col-lg-3\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"input-nombre\">Entidad</label>\n                                <entidad-select (changeEvent)=\"asiento.entidad = $event\"></entidad-select>\n                            </fieldset>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <!-- Observaciones del Asiento -->\n                        <div class=\"col-12\">\n                            <fieldset class=\"form-group\">\n                                <label for=\"input-nombre\">Observaciones</label>\n                                <textarea class=\"form-control ng-untouched ng-pristine ng-valid\" rows=\"5\" [(ngModel)]=\"asiento.descripcion\" style=\"resize: none\"></textarea>\n                            </fieldset>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"registro\" *ngFor=\"let reg of asiento.registros\">\n                        <asiento-registro-abm [registro]=\"reg\"></asiento-registro-abm>\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <div class=\"row\">\n                        <div class=\"col-3\">\n                            <button class=\"btn btn-primary btn-large\" (click)=\"crearRegistro()\">Agregar Linea</button>\n                        </div>\n                        <div class=\"col-5\"></div>\n                        <div class=\"col-2\">\n                            <label for=\"input-nombre\">Débito</label>\n                            <input class=\"form-control\" style=\"text-align: right; font-weight: bold\" value=\"{{ getTotalString('debito') }}\" disabled />\n                        </div>\n                        <div class=\"col-2\">\n                            <label for=\"input-nombre\">Crédito</label>\n                            <input class=\"form-control\" style=\"text-align: right; font-weight: bold\" value=\"{{ getTotalString('credito') }}\" disabled />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card\">\n        <div class=\"row mt-2 mb-2\">\n            <div class=\"col-6 text-center\">\n                <button class=\"btn btn-danger btn-lg\" (click)=\"cancelar()\">Cancelar</button>\n            </div>\n            <div class=\"col-6 text-center\">\n                <button class=\"btn btn-primary btn-lg\" (click)=\"guardar()\">Guardar</button>\n            </div>\n        </div>\n    </div>\n</section>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from '@angular/core';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { ChartistModule } from 'ng-chartist';\nimport { ChartsModule } from 'ng2-charts';\nimport { ComponentsModule } from '../../../../../coreApp/src/app/shared/components.module';\nimport { PipeModule } from '../../../../../coreApp/src/app/shared/pipes/pipe.module';\nimport { ComponentsProyectModule } from '../../components/components-proyect.module';\nimport { AsientoListadoComponent } from \"./listado/asiento-listado.component\";\nimport { AsientoAbmComponent } from \"./abm/asiento-abm.component\";\nimport { AsientoRoutingModule } from \"./asiento-routing.module\";\nimport { SharedAppModule } from \"../../SharedApp.module\";\nimport { AsientoRegistroAbmComponent } from \"./abm/asiento-registro-abm/asiento-registro-abm.component\";\nimport { UsuarioModel } from \"../../models/Usuario.model\";\nimport { UserService } from \"../../services/User.service\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsProyectModule,\n    ComponentsModule,\n    // CoreModule,\n    AsientoRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ChartsModule,\n    ChartistModule,\n    NgxChartsModule,\n    NgApexchartsModule,\n    HttpClientModule,\n    NgbModule,\n    NgSelectModule,\n    NgxDatatableModule,\n    PipeModule,\n    NgbTooltipModule,\n    SharedAppModule\n  ],\n  exports: [],\n  declarations: [\n    AsientoListadoComponent,\n    AsientoAbmComponent,\n    AsientoRegistroAbmComponent\n  ],\n  providers: [\n\n  ],\n})\nexport class AsientoModule { }\n","import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\nimport { AsientoModel } from '../../../models/Asiento.model';\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\nimport { TitleBarService } from '../../../services/TitleBar.service';\nimport { UserService } from '../../../services/User.service';\n\n\n@Component({\n  selector: 'asiento-listado',\n  templateUrl: './asiento-listado.component.html',\n  styleUrls: ['./asiento-listado.component.scss']\n})\n\nexport class AsientoListadoComponent {\n  /************************************************************************************************************************\n   * Inputs && Outputs && Properties\n   *\n   ************************************************************************************************************************/\n\n  /************************************************************************************************************************\n   * Variables\n   *\n   ************************************************************************************************************************/\n  public loaded: boolean = false;\n  public isCollapsed: boolean = false;\n  public asientos: AsientoModel[] = [];\n  public posAsiento: number = 0;\n  public cuentasActivos: CuentaContableModel[] = [];\n  public cuentasPasivos: CuentaContableModel[] = [];\n  public fecha: NgbDate = new NgbDate(2020, 9, 26);\n  public fechaFin: NgbDate = new NgbDate(2022, 1, 1);\n  public page: number = 0;\n  public size: number = 10;\n\n\n  public loading: boolean = false;\n  public paginateData: PaginateDataModel = new PaginateDataModel();\n\n  public sizeAnt: number = this.size;\n  public pageAnt: number = this.page;\n  public fechaAnt: NgbDate = new NgbDate(2022, 9, 26);\n  /************************************************************************************************************************\n  * Constructor && Implements\n  *\n  ************************************************************************************************************************/\n  constructor(public dataService: DataService,\n    public appConfig: AppConfig, private cd: ChangeDetectorRef,\n    public router: Router, public route: ActivatedRoute,\n    public authUserService: AuthUserService,\n    public serializer: UrlSerializer, public functionService: FunctionService, public userService: UserService,\n    public calendar: NgbCalendar, public titleBarService: TitleBarService) {\n\n    // Primer día del mes  \n    // this.fecha= this.calendar.getToday();\n    this.fechaFin = this.calendar.getToday();\n\n    this.titleBarService.title = \"Libro Diario\";\n    this.titleBarService.subTitle = \"Desde esta pantalla se ven los registros del Libro Diario\";\n\n\n  }\n\n  getField(fieldName: string, row: AsientoModel) {\n    switch (fieldName) {\n      case \"fecha\":\n        let date: Date = this.functionService.getDateFromString(row.fecha, \"-\");\n        return this.functionService.formatDate(date, \"dd/mm/yy\");\n        break;\n      case \"cantidadRegistros\":\n        if (row.registros && row?.registros.length > 0) {\n          return row.registros.length;\n        } else {\n          return 0;\n        }\n        break;\n    }\n  }\n\n  getFieldReg(fieldName: string, row: AsientoRegistroModel) {\n    try {\n      switch (fieldName) {\n        case \"entidad\":\n          if (row.entidad && row.entidad.nombre) {\n            return row.entidad.nombre;\n          }\n          break;\n      }\n    } catch (ex) {\n      return \"\";\n    }\n    return \"\";\n  }\n\n  getTotal(tipo: string) {\n    let sumDebito: number = 0;\n    let sumcredito: number = 0;\n    for (let asiento of this.asientos) {\n      for (let reg of asiento.registros) {\n        sumDebito = sumDebito + reg.debito;\n        sumcredito = sumcredito + reg.credito\n      }\n    }\n    if (tipo == 'debito') {\n      return sumDebito;\n    } else {\n      return sumcredito;\n    }\n  }\n\n  /************************************************************************************************************************\n   *\n   * Eventos\n   *\n   ************************************************************************************************************************/\n  ngOnInit() {\n\n  }\n\n\n  /************************************************************************************************************************\n   * FUNCTIONS\n   *\n   ************************************************************************************************************************/\n  refresh(force: boolean) {\n    if (!(this.pageAnt != this.page || this.sizeAnt != this.size || (this.fechaAnt.year != this.fechaAnt.year || this.fecha.month != this.fechaAnt.month || this.fecha.day != this.fechaAnt.day)) && force == false) {\n      return; //No hubo cambios!\n    }\n    this.pageAnt = this.page;\n    this.fechaAnt.day = this.fecha.day;\n    this.fechaAnt.month = this.fecha.month;\n    this.fechaAnt.year = this.fecha.year;\n\n    let paginateListModel: PaginateListModel = new PaginateListModel(this.page, this.size);\n    paginateListModel.addParameter(\"empresa\", this.userService.getIdEmpresaSelected().toString());\n\n    //FechaInit! --> La fecha seleccionada\n    let fechaInit: string = this.fecha.year + '-' + this.fecha.month + '-' + this.fecha.day + ' 00:00:01';\n    let fechaFin: string = this.fechaFin.year + '-' + this.fechaFin.month + '-' + this.fechaFin.day + ' 23:59:59';\n\n    paginateListModel.addParameter(\"fechaInicio\", fechaInit);\n    paginateListModel.addParameter(\"fechaFin\", fechaFin);\n\n    this.dataService.httpFunction(enumWS.DOCUMENTO_PAGINATE, this, paginateListModel);\n\n    this.loading = true;\n  }\n\n  getClass(reg): string {\n    try {\n      if (reg.debito > 0) {\n        return \"reg-debe\";\n      } else {\n        return \"reg-haber\";\n      }\n    } catch (ex) {\n      return \"\";\n    }\n  }\n\n  SetPage(paginate: PaginateListModel) {\n    this.page = paginate.page;\n    this.size = paginate.size;\n    this.refresh(false);\n  }\n\n\n  /************************************************************************************************************************\n   *\n   * RESPONSE OK/ERROR\n   *\n   ************************************************************************************************************************/\n\n  responseOk(httpOperation: any, http: string, data: PaginateDataModel, ws: any) {\n    switch (ws.enumUrl) {\n      case enumWS.ASIENTO_PAGINATE_DTO:\n        this.paginateData = data;\n        this.asientos = data.content;\n        this.loaded = true;\n        this.cd.markForCheck();\n        break;\n    }\n  }\n\n  responseError(urlResource: string, httpOperation: string, data: any, ws?: any) { }\n}\n","<section id=\"collapse\">\n    <div class=\"row mt-2 mb-2\">\n        <div class=\"col-8 col-md-6\">\n            <periodo-select [(fInicio)]=\"fecha\" [(fFin)]=\"fechaFin\"></periodo-select>\n        </div>\n        <div class=\"col-4 col-md-6\">\n            <button class=\"btn btnl-lg btn-primary mt-1\" (click)=\"refresh(true)\">CARGAR</button>\n        </div>\n    </div>\n    <!-- <div class=\"card card-header\">\n        <div class=\"card-content\">\n            <div class=\"row header\">\n                <div class=\"colx colx-asiento\">#</div>\n                <div class=\"colx colx-fecha\">Fecha</div>\n                <div class=\"colx colx-referencia\">Referencia</div>\n                <div class=\"colx colx-tercero\">Tercero</div>\n                <div class=\"colx colx-cuentacontable\">Cuenta Contable</div>\n                <div class=\"colx colx-debito\">Débito</div>\n                <div class=\"colx colx-credito\">Crédito</div>\n            </div>\n        </div>\n    </div> -->\n\n    <ng-template [ngIf]=\"loaded\">\n        <div class=\"container-table\">\n            <table width=\"100%\" class=\"table table-transparent table-striped table-dark\">\n                <thead class=\"thead-dark\">\n                    <th width=\"5%\">#</th>\n                    <th width=\"10%\">Fecha</th>\n                    <th width=\"15%\">Referencia</th>\n                    <th width=\"20%\">Tercero</th>\n                    <th width=\"30%\">Cuenta Contable</th>\n                    <th width=\"10%\">Debito</th>\n                    <th width=\"10%\">Credito</th>\n                </thead>\n                <tbody>\n                    <ng-template ngFor let-asiento [ngForOf]=\"asientos\">\n                        <tr class=\"row-space\">\n                            <td colspan=\"100\" class=\"row-space\">\n                                <i class=\"far fa-book-open text-primary\" style=\"text-align: middle; font-size:1.5rem;\"></i>\n                            </td>\n                        </tr>\n                        <tr class=\"row-init\">\n                            <!-- número # -->\n                            <td [attr.rowspan]=\"getField('cantidadRegistros', asiento) + 1\">\n                                {{ asiento.id }}\n                            </td>\n                            <!-- FECHA -->\n                            <td [attr.rowspan]=\"getField('cantidadRegistros', asiento) + 1\">\n                                {{ asiento.fecha }}\n                            </td>\n                            <!-- referencia -->\n                            <td [attr.rowspan]=\"getField('cantidadRegistros', asiento) + 1\">\n                                {{ asiento.referencia }}\n                            </td>\n                            <td colspan=\"4\"></td>\n                        </tr>\n                        <tr *ngFor=\"let reg of asiento.registros\">\n                            <td>\n                                {{ getFieldReg(\"entidad\", reg) }}\n                            </td>\n                            <td class=\"td-cuenta\">\n                                <cuenta-info [cuenta]=\"reg.cuenta\"></cuenta-info>\n                            </td>\n                            <td class=\"td-debito\">\n                                <p *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.debito) }}</p>\n                            </td>\n                            <td class=\"td-credito\">\n                                <p *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.credito) }}</p>\n                            </td>\n                        </tr>\n                        <tr class=\"row-footer\">\n                            <td colspan=\"5\"></td>\n                            <td class=\"td-debito td-total\">\n                                <p>{{ functionService.formatMoney(asiento.debito) }}</p>\n                            </td>\n                            <td class=\"td-credito td-total\">\n                                <p>{{ functionService.formatMoney(asiento.debito) }}</p>\n                            </td>\n                        </tr>\n                        <tr class=\"row-space\"></tr>\n                    </ng-template>\n                </tbody>\n            </table>\n        </div>\n        <footer class=\"mt-2\" [paginate]=\"paginateData\" (setPageEvent)=\"SetPage($event)\"></footer>\n    </ng-template>\n</section>\n"]}