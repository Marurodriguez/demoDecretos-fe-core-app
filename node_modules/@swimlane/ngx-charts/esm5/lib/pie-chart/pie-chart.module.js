import { __decorate } from "tslib";
import { NgModule } from '@angular/core';
import { ChartCommonModule } from '../common/chart-common.module';
import { AdvancedPieChartComponent } from './advanced-pie-chart.component';
import { PieLabelComponent } from './pie-label.component';
import { PieArcComponent } from './pie-arc.component';
import { PieChartComponent } from './pie-chart.component';
import { PieGridComponent } from './pie-grid.component';
import { PieGridSeriesComponent } from './pie-grid-series.component';
import { PieSeriesComponent } from './pie-series.component';
import * as ɵngcc0 from '@angular/core';
var PieChartModule = /** @class */ (function () {
    function PieChartModule() {
    }
PieChartModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PieChartModule });
PieChartModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PieChartModule_Factory(t) { return new (t || PieChartModule)(); }, imports: [[ChartCommonModule]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(PieChartModule, { declarations: function () { return [AdvancedPieChartComponent,
        PieLabelComponent,
        PieArcComponent,
        PieChartComponent,
        PieGridComponent,
        PieGridSeriesComponent,
        PieSeriesComponent]; }, imports: function () { return [ChartCommonModule]; }, exports: function () { return [AdvancedPieChartComponent,
        PieLabelComponent,
        PieArcComponent,
        PieChartComponent,
        PieGridComponent,
        PieGridSeriesComponent,
        PieSeriesComponent]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PieChartModule, [{
        type: NgModule,
        args: [{
                imports: [ChartCommonModule],
                declarations: [
                    AdvancedPieChartComponent,
                    PieLabelComponent,
                    PieArcComponent,
                    PieChartComponent,
                    PieGridComponent,
                    PieGridSeriesComponent,
                    PieSeriesComponent
                ],
                exports: [
                    AdvancedPieChartComponent,
                    PieLabelComponent,
                    PieArcComponent,
                    PieChartComponent,
                    PieGridComponent,
                    PieGridSeriesComponent,
                    PieSeriesComponent
                ]
            }]
    }], function () { return []; }, null); })();
    return PieChartModule;
}());
export { PieChartModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGllLWNoYXJ0Lm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiQHN3aW1sYW5lL25neC1jaGFydHMvbGliL3BpZS1jaGFydC9waWUtY2hhcnQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7QUF1QjVEO0FBQ21CLElBRG5CO0FBQTRCLElBQUMsQ0FBQztJQUFqQixjQUFjLHdCQXJCMUIsUUFBUSxDQUFDLGNBQ1IsT0FBTztDQUFFLENBQUMsaUJBQWlCLENBQUMsY0FDNUIsWUFBWSxFQUFFLGtCQUNaLHlCQUF5QixrQkFDekIsaUJBQWlCLGtCQUNqQixlQUFlO1NBQ2YsaUJBQWlCLGtCQUNqQixnQkFBZ0Isa0JBQ2hCLHNCQUFzQixrQkFDdEIsa0JBQWtCLGNBQ25CLGNBQ0QsT0FBTztBQUFFLGtCQUNQO2dCQUF5QjtTQUN6QixpQkFBaUI7aUJBQ2pCO01BQWUsa0JBQ2Y7U0FBaUIsa0JBQ2pCLGdCQUFnQixrQkFDaEIsc0JBQXNCLGtCQUN0QixrQkFBa0IsY0FDbkIsVUFDRjtBQUFDLFFBQ1csY0FBYyxDQUFHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnREFDOUI7QUFBQyxJQUQ0QixxQkFBQztBQUM3QixDQUQ2QixBQUE5QixJQUE4QjtBQUM5QixTQURhLGNBQWM7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2hhcnRDb21tb25Nb2R1bGUgfSBmcm9tICcuLi9jb21tb24vY2hhcnQtY29tbW9uLm1vZHVsZSc7XG5pbXBvcnQgeyBBZHZhbmNlZFBpZUNoYXJ0Q29tcG9uZW50IH0gZnJvbSAnLi9hZHZhbmNlZC1waWUtY2hhcnQuY29tcG9uZW50JztcbmltcG9ydCB7IFBpZUxhYmVsQ29tcG9uZW50IH0gZnJvbSAnLi9waWUtbGFiZWwuY29tcG9uZW50JztcbmltcG9ydCB7IFBpZUFyY0NvbXBvbmVudCB9IGZyb20gJy4vcGllLWFyYy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGllQ2hhcnRDb21wb25lbnQgfSBmcm9tICcuL3BpZS1jaGFydC5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGllR3JpZENvbXBvbmVudCB9IGZyb20gJy4vcGllLWdyaWQuY29tcG9uZW50JztcbmltcG9ydCB7IFBpZUdyaWRTZXJpZXNDb21wb25lbnQgfSBmcm9tICcuL3BpZS1ncmlkLXNlcmllcy5jb21wb25lbnQnO1xuaW1wb3J0IHsgUGllU2VyaWVzQ29tcG9uZW50IH0gZnJvbSAnLi9waWUtc2VyaWVzLmNvbXBvbmVudCc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDaGFydENvbW1vbk1vZHVsZV0sXG4gIGRlY2xhcmF0aW9uczogW1xuICAgIEFkdmFuY2VkUGllQ2hhcnRDb21wb25lbnQsXG4gICAgUGllTGFiZWxDb21wb25lbnQsXG4gICAgUGllQXJjQ29tcG9uZW50LFxuICAgIFBpZUNoYXJ0Q29tcG9uZW50LFxuICAgIFBpZUdyaWRDb21wb25lbnQsXG4gICAgUGllR3JpZFNlcmllc0NvbXBvbmVudCxcbiAgICBQaWVTZXJpZXNDb21wb25lbnRcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIEFkdmFuY2VkUGllQ2hhcnRDb21wb25lbnQsXG4gICAgUGllTGFiZWxDb21wb25lbnQsXG4gICAgUGllQXJjQ29tcG9uZW50LFxuICAgIFBpZUNoYXJ0Q29tcG9uZW50LFxuICAgIFBpZUdyaWRDb21wb25lbnQsXG4gICAgUGllR3JpZFNlcmllc0NvbXBvbmVudCxcbiAgICBQaWVTZXJpZXNDb21wb25lbnRcbiAgXVxufSlcbmV4cG9ydCBjbGFzcyBQaWVDaGFydE1vZHVsZSB7fVxuIl19