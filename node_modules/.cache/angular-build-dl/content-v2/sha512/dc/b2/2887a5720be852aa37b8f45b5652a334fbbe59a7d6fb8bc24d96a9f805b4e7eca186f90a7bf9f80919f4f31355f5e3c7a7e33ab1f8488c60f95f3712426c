{"version":3,"sources":["webpack:///src/app/pages/asiento/asiento-routing.module.ts","webpack:///src/app/pages/asiento/abm/asiento-registro-abm/asiento-registro-abm.component.ts","webpack:///src/app/pages/asiento/abm/asiento-registro-abm/asiento-registro-abm.component.html","webpack:///src/app/models/Entidad.model.ts","webpack:///src/app/models/AsientoRegistro.model.ts","webpack:///src/app/pages/asiento/abm/asiento-abm.component.ts","webpack:///src/app/pages/asiento/abm/asiento-abm.component.html","webpack:///src/app/pages/asiento/asiento.module.ts"],"names":["routes","path","component","pathMatch","data","title","operation","AsientoRoutingModule","forChild","imports","exports","$event","AsientoRegistroAbmComponent","dataService","appConfig","cd","router","route","authUserService","serializer","calendar","userService","titleBarService","registro","changeCalculo","montoDebito","montoCredito","empresa","getEmpresaSelected","monedaPrimaria","monedaSecundaria","cuenta","moneda","id","debitoMonedaPrimaria","creditoMonedaPrimaria","debitoMonedaSecundaria","creditoMonedaSecundaria","status","emit","markForCheck","idCuenta","entidad","idEntidad","negocio","idNegocio","tipo","event","Number","httpOperation","http","ws","urlResource","selector","templateUrl","styleUrls","asiento","EntidadModel","tipoEntidad","codigo","nombre","telefono","email","AsientoRegistroModel","descripcion","referencia","fecha","tasaMoneda","saldoDebito","saldoCredito","AsientoAbmComponent","functionService","today","getToday","loaded","isCollapsed","rows","negocioOptions","empresas","multipleMoneda","monedas","negocios","negocioList","initValue","bindLabel","items","fechaObj","setPageComponentActive","console","log","getPageComponentActive","subTitle","paginate","httpFunction","CUENTA_CONTABLE_PAGINATE","empresaActual","empresaAnterior","recalcularTotales","getMonedas","length","ex","bExiste","regMoneda","registros","reg","JSON","parse","stringify","tasa","tasaMonedaPrimaria","totalDebitoPrimaria","totalCreditoPrimaria","totalDebitoSecundaria","totalCreditoSecundaria","push","asientoReg","monto","sumDebitoPrimaria","sumCreditoPrimaria","sumDebitoSecundaria","sumCreditoSecundaria","row","fire","tipoOperacion","undefined","recalcular","validar","fechaDTO","year","month","day","idEmpresa","idTipoOperacion","ASIENTO_SAVE","enumUrl","content","numeroUnico","reg1","crearAsientoRnd","uuid","reg2","parseFloat","Math","random","toFixed","reg3","reg4","tipoMoneda","crearRegistro","cancelar","guardar","AsientoModule","declarations","providers"],"mappings":"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","file":"pages-asiento-asiento-module-es5.js","sourcesContent":["import { AsientoListadoComponent } from './listado/asiento-listado.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AsientoAbmComponent } from './abm/asiento-abm.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  // { path: '',\r\n  //   redirectTo: '/listado',\r\n  //   pathMatch: 'full'\r\n  // },\r\n  {\r\n    path: 'listado',\r\n    component: AsientoListadoComponent,\r\n    pathMatch: 'full',\r\n    data: {\r\n      title: 'Listado'\r\n    }\r\n  },\r\n  {\r\n    path: 'abm/:operation',\r\n    component: AsientoAbmComponent,\r\n    data: {\r\n      title: 'Nuevo Asiento',\r\n      operation: 'new'\r\n    }\r\n  }\r\n  // {\r\n  //   path: 'abm/:operation/:seccion/:uuid',\r\n  //   component: ClientesAbmComponent,\r\n  //   // pathMatch: 'full',\r\n  //   data: {\r\n  //     title: 'Cliente ABM',\r\n  //     operation: 'view'\r\n  //   }\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AsientoRoutingModule { }\r\n","import { ChangeDetectorRef, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\r\nimport { NgbCalendar, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppConfig } from '../../../../../../../coreApp/src/app/app.config';\r\nimport { PaginateDataModel } from '../../../../../../../coreApp/src/app/models/PaginateData.model';\r\nimport { PaginateListModel } from '../../../../../../../coreApp/src/app/models/PaginateList.model';\r\nimport { UserModel } from '../../../../../../../coreApp/src/app/models/user.model';\r\nimport { DataService } from '../../../../../../../coreApp/src/app/services/data.services';\r\nimport { AuthUserService } from '../../../../../../../coreApp/src/app/shared/auth/auth-user.service';\r\nimport { SmSelectOptions } from '../../../../../../../coreApp/src/app/shared/components/sm-select/sm-select.component';\r\nimport { AsientoModel } from '../../../../models/Asiento.model';\r\nimport { AsientoRegistroModel } from '../../../../models/AsientoRegistro.model';\r\nimport { CuentaContableModel } from '../../../../models/CuentaContable.model';\r\nimport { EmpresaModel } from '../../../../models/Empresa.model';\r\nimport { MonedaModel } from '../../../../models/Moneda.model';\r\nimport { EntidadModel } from '../../../../models/Entidad.model';\r\nimport { NegocioModel } from '../../../../models/Negocio.model';\r\nimport { enumWS } from '../../../../navigation/ws/ws-routes.config';\r\nimport { UserService } from '../../../../services/User.service';\r\nimport { TitleBarService } from '../../../../services/TitleBar.service';\r\n\r\n\r\n@Component({\r\n  selector: 'asiento-registro-abm',\r\n  templateUrl: './asiento-registro-abm.component.html',\r\n  styleUrls: ['./asiento-registro-abm.component.scss']\r\n})\r\n\r\nexport class AsientoRegistroAbmComponent {\r\n  /************************************************************************************************************************\r\n   * Inputs && Outputs && Properties\r\n   *\r\n   ************************************************************************************************************************/\r\n   @Input() registro: AsientoRegistroModel = new AsientoRegistroModel();\r\n   @Input() asiento: AsientoModel;\r\n   @Output() changeCalculo: EventEmitter<any> = new EventEmitter;\r\n\r\n   public monedaPrimaria: MonedaModel; \r\n   public monedaSecundaria: MonedaModel;\r\n  /************************************************************************************************************************\r\n   * Variables\r\n   *\r\n   ************************************************************************************************************************/\r\n    public montoDebito: number=0;\r\n    public montoCredito: number=0; \r\n   /************************************************************************************************************************\r\n    * Constructor && Implements\r\n    *\r\n    ************************************************************************************************************************/\r\n   constructor(public dataService: DataService,\r\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\r\n               public router: Router, public route: ActivatedRoute,\r\n               public authUserService: AuthUserService, public serializer: UrlSerializer,\r\n               private calendar: NgbCalendar, public userService: UserService, public titleBarService: TitleBarService){\r\n\r\n   }\r\n\r\n\r\n\r\n   /************************************************************************************************************************\r\n    *\r\n    * Eventos\r\n    *\r\n    ************************************************************************************************************************/\r\n    ngOnInit() {\r\n      const empresa: EmpresaModel = this.userService.getEmpresaSelected();\r\n      if(empresa && empresa.monedaPrimaria){\r\n        this.monedaPrimaria = empresa.monedaPrimaria;\r\n      }\r\n      if(empresa && empresa.monedaSecundaria){\r\n        this.monedaSecundaria = empresa.monedaSecundaria;\r\n      }\r\n\r\n      if(this.registro.cuenta.moneda.id == this.monedaPrimaria.id){\r\n        this.montoDebito = this.registro.debitoMonedaPrimaria;\r\n        this.montoCredito = this.registro.creditoMonedaPrimaria;\r\n      }else{\r\n        this.montoDebito = this.registro.debitoMonedaSecundaria;\r\n        this.montoCredito = this.registro.creditoMonedaSecundaria;\r\n      }\r\n    }\r\n\r\n\r\n   /************************************************************************************************************************\r\n    * FUNCTIONS\r\n    *\r\n    ************************************************************************************************************************/\r\n    deleteRegistro() {\r\n      this.registro.status = -1;\r\n      this.changeCalculo.emit(this.registro);\r\n      this.cd.markForCheck();\r\n\r\n    }\r\n\r\n    selectCuenta(cuenta:CuentaContableModel){\r\n      this.registro.cuenta = cuenta;\r\n      this.registro.idCuenta = cuenta.id;\r\n      this.changeCalculo.emit(this.registro);\r\n    }\r\n\r\n    selectEntidad(entidad: EntidadModel){\r\n      this.registro.entidad = entidad;\r\n      this.registro.idEntidad = entidad.id;\r\n    }\r\n\r\n    selectNegocio(negocio:NegocioModel){\r\n      this.registro.negocio = negocio;\r\n      this.registro.idNegocio = negocio.id;\r\n    }\r\n\r\n    recalcular(tipo: number, event: any){\r\n      // Sumar a la moneda primaria\r\n        switch(tipo){\r\n          case 0:   // Afecta al debito\r\n            if(this.registro.cuenta.moneda.id == this.monedaPrimaria.id ){ // Es Moneda Primaria\r\n              this.registro.debitoMonedaPrimaria = Number(event);\r\n              this.registro.creditoMonedaPrimaria = Number(0);\r\n\r\n              this.registro.debitoMonedaSecundaria = 0; this.registro.creditoMonedaSecundaria = 0;\r\n            }else{                                                        // Es moneda Secundaria\r\n              this.registro.debitoMonedaSecundaria = Number(event); \r\n              this.registro.creditoMonedaSecundaria = Number(0);\r\n\r\n              this.registro.debitoMonedaPrimaria= 0; this.registro.creditoMonedaPrimaria = 0;\r\n            }\r\n          break;\r\n          case 1: // Afecta al Crédito\r\n            if(this.registro.cuenta.moneda.id == this.monedaPrimaria.id ){ // Es Moneda Primaria\r\n              this.registro.debitoMonedaPrimaria = Number(0);\r\n              this.registro.creditoMonedaPrimaria = Number(event);\r\n\r\n              this.registro.debitoMonedaSecundaria = 0; this.registro.creditoMonedaSecundaria = 0;\r\n            }else{                                                        // Es moneda Secundaria\r\n              this.registro.creditoMonedaSecundaria = Number(event); \r\n              this.registro.debitoMonedaSecundaria = Number(0);\r\n\r\n              this.registro.debitoMonedaPrimaria= 0; this.registro.creditoMonedaPrimaria = 0;\r\n            }\r\n          break;\r\n        }\r\n      this.changeCalculo.emit(this.registro);\r\n    }\r\n\r\n    registroTieneMonedaSecundaria(): boolean{\r\n      if(this.registro?.cuenta && this.monedaSecundaria && this.registro?.cuenta?.moneda?.id == this.monedaSecundaria.id ){\r\n        return true;\r\n      }else{\r\n        return false;\r\n      }\r\n    }\r\n\r\n    getMonedaPrimaria(): MonedaModel{\r\n      return this.monedaPrimaria;\r\n    }\r\n    \r\n    \r\n\r\n  /************************************************************************************************************************\r\n   *\r\n   * RESPONSE OK/ERROR\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n\r\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\r\n    //this.refreshComponent();\r\n    // switch(ws.enumUrl) {\r\n    //   case enumWS.CUENTA_CONTABLE_PAGINATE:\r\n    //     this.rows = data.content;\r\n    //     this.loaded = true;\r\n    //     this.cd.markForCheck();\r\n    //   break;\r\n    // }\r\n   }\r\n\r\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\r\n    // this.loaded = true;\r\n    // this.rows = [];\r\n    // this.cd.markForCheck();\r\n   }\r\n}\r\n","<ng-template [ngIf]=\"registro.status == 0\">\r\n        \r\n    <div class=\"container-table\">\r\n        <table width=\"100%\" class=\"table table-transparent\">\r\n            <!-- <thead class=\"thead-dark\">\r\n                <th width=\"25%\"></th>\r\n                <th width=\"10%\"></th>\r\n                <th width=\"18%\"></th>\r\n                <th width=\"23%\"></th>\r\n                <th width=\"10%\"></th>\r\n                <th width=\"10%\"></th>\r\n\r\n                <th width=\"13%\"></th>\r\n                <th width=\"13%\"></th>\r\n            </thead> -->\r\n            <tbody>\r\n                <tr>\r\n                    <!-- CUENTA -->\r\n                    <td class=\"td-cuenta\" width=\"30%\"> \r\n                        <label for=\"input-nombre\">Cuenta</label>\r\n                        <cuenta-select (changeEvent)=\"selectCuenta($event)\" [initValue]=\"registro.cuenta\"></cuenta-select>\r\n                    </td>\r\n                    <!-- ENTIDAD TERCERO -->\r\n                    <td width=\"20%\">\r\n                        <label for=\"input-nombre\">Entidad/Tercero</label>\r\n                        <entidad-select (changeEvent)=\"selectEntidad($event)\"></entidad-select>       \r\n                    </td>\r\n                    <!-- TASA -->\r\n                    <td width=\"20%\">\r\n                        <money-input *ngIf=\"registroTieneMonedaSecundaria()\" [label]=\"'Tasa'\" [(value)]=\"registro.tasaMoneda\" [monedaPrimary]=\"getMonedaPrimaria()\" (changeEvent)=\"recalcular(-1, $event)\"></money-input>\r\n                    </td>\r\n                    <!-- DEBITO -->\r\n                    <td class=\"subtotal td-debito\" width=\"15%\" rowspan=\"2\">\r\n                        <ng-template [ngIf]=\"montoCredito == 0\">\r\n                            <money-input [label]=\"'Débito'\" [(value)]=\"montoDebito\" [monedaPrimary]=\"this.registro.cuenta?.moneda\" (changeEvent)=\"recalcular(0, $event)\"></money-input>\r\n                        </ng-template>\r\n                    </td>\r\n                    <!-- CREDITO -->\r\n                    <td class=\"subtotal td-credito\" width=\"15%\" rowspan=\"2\">\r\n                        <ng-template [ngIf]=\"montoDebito == 0\">\r\n                            <money-input [label]=\"'Crédito'\" [(value)]=\"montoCredito\" [monedaPrimary]=\"this.registro.cuenta?.moneda\" (changeEvent)=\"recalcular(1, $event)\"></money-input>\r\n                        </ng-template>   \r\n                    </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                    <td>\r\n                        <label for=\"input-nombre\">Ref</label>\r\n                        <input class=\"form-control\" [(ngModel)]=\"registro.referencia\" />   \r\n                    </td>\r\n                    <td>\r\n                        <label for=\"input-nombre\">Detalle</label>\r\n                        <input class=\"form-control\" [(ngModel)]=\"registro.descripcion\" />                        \r\n                    </td>\r\n                    <td>\r\n                        <label for=\"input-nombre\">Negocio/Local</label>\r\n                        <negocio-select [initValue]=\"registro.negocio\"  (changeEvent)=\"selectNegocio($event)\"></negocio-select>\r\n                    </td>\r\n                </tr>\r\n            </tbody>\r\n\r\n\r\n        </table>\r\n    </div>\r\n    \r\n    <!--  -->\r\n    <!-- {{registro|json}} -->\r\n\r\n        <div class=\"row sep-bottom\">\r\n            <div class=\"d-inline-flex mb-2\">\r\n                <i (click)=\"deleteRegistro()\" class=\"fas fa-minus-circle warning cursor-pointer\"></i>\r\n            </div>\r\n        </div>\r\n\r\n</ng-template>\r\n","import { AbstractModel } from \"./Abstract.model\";\r\nimport { NegocioModel } from \"./Negocio.model\";\r\nimport { TipoEntidad } from \"./TipoEntidad.model\";\r\n\r\n\r\nexport class EntidadModel extends AbstractModel {\r\n\r\n  public tipoEntidad: TipoEntidad = new TipoEntidad();\r\n  public codigo: string = '';\r\n  public nombre: string = '';\r\n  public telefono: string = '';\r\n  public email: string = '';\r\n\r\n\r\n  constructor(){\r\n    super();\r\n  }\r\n\r\n}\r\n\r\n","import { AbstractModel } from \"./Abstract.model\";\r\nimport { AsientoModel } from \"./Asiento.model\";\r\nimport { CuentaContableModel } from \"./CuentaContable.model\";\r\nimport { EmpresaModel } from \"./Empresa.model\";\r\nimport { EntidadModel } from \"./Entidad.model\";\r\nimport { NegocioModel } from \"./Negocio.model\";\r\nimport { TipoIva } from \"./TipoIva.model\";\r\n\r\n\r\nexport class AsientoRegistroModel extends AbstractModel {\r\n\r\n  public descripcion: string = \"\";\r\n  public referencia: string = \"\";\r\n  public fecha: string = \"\";\r\n  \r\n  public cuenta: CuentaContableModel;\r\n  public entidad: EntidadModel = new EntidadModel();\r\n  public negocio: NegocioModel = new NegocioModel();\r\n\r\n\r\n  public debitoMonedaPrimaria: number = 0;\r\n  public creditoMonedaPrimaria: number = 0\r\n  public tasaMoneda: number = 1;\r\n  public debitoMonedaSecundaria: number =0;\r\n  public creditoMonedaSecundaria: number = 0;\r\n\r\n\r\n\r\n\r\n  //DTO:\r\n  public asiento: AsientoModel = new AsientoModel();\r\n  \r\n  public idCuenta: number = 0;\r\n  public idEntidad: number = 0;\r\n  public idNegocio: number = 0;\r\n\r\n\r\n  //--->HARDCODE->libro mayor\r\n  public saldoDebito: number = 0;\r\n  public saldoCredito: number = 0;\r\n\r\n  constructor(){\r\n    super();\r\n  }\r\n\r\n}\r\n\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\r\nimport { NgbCalendar, NgbDate, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\r\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\r\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\r\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\r\nimport { UserModel } from '../../../../../../coreApp/src/app/models/user.model';\r\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\r\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\r\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\r\nimport { SmSelectOptions } from '../../../../../../coreApp/src/app/shared/components/sm-select/sm-select.component';\r\nimport { AsientoModel } from '../../../models/Asiento.model';\r\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\r\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\r\nimport { EmpresaModel } from '../../../models/Empresa.model';\r\nimport { NegocioModel } from '../../../models/Negocio.model';\r\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\r\nimport { UserService } from '../../../services/User.service';\r\nimport { PageComponentInterface } from '../../_PageInterface/PageComponentInterface';\r\nimport swal from 'sweetalert2';\r\nimport { regExpEscape } from '@ng-bootstrap/ng-bootstrap/util/util';\r\nimport { MonedaModel } from '../../../models/Moneda.model';\r\nimport { MonedaSelectComponent } from '../../../components/moneda-select/moneda-select.component';\r\nimport { TitleBarService } from '../../../services/TitleBar.service';\r\n\r\n@Component({\r\n  selector: 'asiento-abm',\r\n  templateUrl: './asiento-abm.component.html',\r\n  styleUrls: ['./asiento-abm.component.scss']\r\n})\r\n\r\nexport class AsientoAbmComponent implements PageComponentInterface{\r\n  /************************************************************************************************************************\r\n   * Inputs && Outputs && Properties\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n  /************************************************************************************************************************\r\n   * Variables\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n    model: NgbDateStruct;\r\n    today = this.calendar.getToday();\r\n\r\n    public asiento: AsientoModel = new AsientoModel();\r\n    public referencia: string = \"\";\r\n    public loaded: boolean = false;\r\n    public isCollapsed:boolean = false;\r\n    public rows:CuentaContableModel[] = [];\r\n    public negocioOptions: SmSelectOptions = new SmSelectOptions();\r\n    public empresas: EmpresaModel[]=[];\r\n    public initValue: NegocioModel;\r\n    public monedaPrimaria: MonedaModel;\r\n    public monedaSecundaria: MonedaModel;\r\n    public multipleMoneda: number = 0;\r\n    public monedas: MonedaModel[] = [];\r\n    public empresa: EmpresaModel;\r\n\r\n//    public monedaDefecto: M\r\n   /************************************************************************************************************************\r\n    * Constructor && Implements\r\n    *\r\n    ************************************************************************************************************************/\r\n   constructor(public dataService: DataService,\r\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\r\n               public router: Router, public route: ActivatedRoute,\r\n               public authUserService: AuthUserService, public serializer: UrlSerializer,\r\n               private calendar: NgbCalendar, private functionService: FunctionService,\r\n               public userService: UserService, public titleBarService: TitleBarService){\r\n\r\n    // let user: UserModel;\r\n    // user = this.authUserService.getUser();\r\n    // let empresas: EmpresaModel[] = user.getData(\"empresaList\",[]);\r\n    let negocios = this.userService.getEmpresaSelected().negocioList;\r\n\r\n    this.initValue = negocios[0];\r\n    this.negocioOptions.bindLabel = \"nombre\";\r\n    this.negocioOptions.items = negocios;\r\n    this.asiento.fechaObj = this.today;\r\n\r\n    this.userService.setPageComponentActive(this);\r\n    this.empresa = this.userService.getEmpresaSelected();\r\n    this.monedaPrimaria = this.empresa.monedaPrimaria;\r\n    this.monedaSecundaria = this.empresa.monedaSecundaria;\r\n    this.multipleMoneda = this.empresa.multipleMoneda;\r\n    console.log(this.userService.getPageComponentActive());\r\n    this.titleBarService.title = \"Crear un nuevo Asiento\";\r\n    this.titleBarService.subTitle = \"Desde esta pantalla se puede crear un nuevo asiento\";\r\n   }\r\n\r\n\r\n\r\n   /************************************************************************************************************************\r\n    *\r\n    * Eventos\r\n    *\r\n    ************************************************************************************************************************/\r\n    ngOnInit() {\r\n      const paginate: PaginateListModel = new PaginateListModel(0,100);\r\n      //paginate.addParameter(\"idEmpresa\",)\r\n      this.loaded = false;\r\n      this.rows = [];\r\n      this.dataService.httpFunction(enumWS.CUENTA_CONTABLE_PAGINATE,this,paginate)\r\n    }\r\n    changeEmpresa(empresaActual: EmpresaModel, empresaAnterior: EmpresaModel): void {\r\n        //alert(\"Cambio la empresa: \" + empresaActual.nombre);\r\n    }\r\n\r\n    /**\r\n     * Calcula las monedas y la sumatoria: Se acciona cuando se cambia la cuenta o el monto de los renglones\r\n     */\r\n   \r\n\r\n   /************************************************************************************************************************\r\n    * FUNCTIONS\r\n    *\r\n    ************************************************************************************************************************/\r\n\r\n\r\n \r\n    recalcular(): boolean {\r\n\r\n      //Get Monedas\r\n      this.recalcularTotales();\r\n      this.getMonedas();\r\n      // this.recalcularTotales();\r\n      return true;\r\n    }\r\n\r\n    hasMultiplesMonedas(): boolean{\r\n      try {\r\n        if(this.monedas.length > 1){\r\n          return true;\r\n        }else{\r\n          return false;\r\n        }\r\n      }catch(ex){\r\n        return false; \r\n      }\r\n      return false;\r\n    }\r\n    getMonedas(): MonedaModel[]{\r\n      let bExiste: boolean = true; \r\n      this.monedas = [];\r\n      /*for(let moneda of this.monedas){\r\n        moneda.totalCredito = Number(0); moneda.totalDebito = Number(0);\r\n      }*/\r\n\r\n      try {\r\n        let regMoneda:MonedaModel;\r\n        for(let reg of this.asiento.registros){\r\n          if(reg.status == 0){\r\n            regMoneda = JSON.parse(JSON.stringify(reg.cuenta.moneda));\r\n            //regMoneda = reg.cuenta.moneda;\r\n            if(regMoneda.id == this.monedaSecundaria.id){ \r\n              regMoneda.id = Number(Number(regMoneda.id) + 1000 + Number(reg.tasaMoneda));\r\n            }else{\r\n              regMoneda.tasa = Number(this.asiento.tasaMonedaPrimaria);\r\n            }\r\n\r\n\r\n            bExiste = false;\r\n            for(let moneda of this.monedas){\r\n              if(moneda.id == regMoneda.id && bExiste == false){\r\n                moneda.totalDebitoPrimaria = Number(moneda.totalDebitoPrimaria) +  Number(reg.debitoMonedaPrimaria);\r\n                moneda.totalCreditoPrimaria =Number(moneda.totalCreditoPrimaria) + Number(reg.creditoMonedaPrimaria);\r\n                moneda.totalDebitoSecundaria = Number(moneda.totalDebitoSecundaria) +  Number(reg.debitoMonedaSecundaria);\r\n                moneda.totalCreditoSecundaria =Number(moneda.totalCreditoSecundaria) + Number(reg.creditoMonedaSecundaria);\r\n                moneda.tasa = reg.tasaMoneda;\r\n                bExiste = true;\r\n              }\r\n            }\r\n            if(bExiste == false){\r\n              //regMoneda = JSON.parse(JSON.stringify(reg.cuenta.moneda));\r\n\r\n\r\n              //regMoneda.tasa = reg.tasaMoneda;\r\n              regMoneda.tasa = Number(reg.tasaMoneda);\r\n              regMoneda.totalDebitoPrimaria = Number(reg.debitoMonedaPrimaria);\r\n              regMoneda.totalCreditoPrimaria =Number(reg.creditoMonedaPrimaria);\r\n              regMoneda.totalDebitoSecundaria = Number(reg.debitoMonedaSecundaria);\r\n              regMoneda.totalCreditoSecundaria =Number(reg.creditoMonedaSecundaria);\r\n\r\n              this.monedas.push(regMoneda);\r\n            }\r\n          }\r\n        }\r\n        return this.monedas;\r\n      }catch(ex){\r\n        return [];\r\n      }\r\n     \r\n    }\r\n\r\n\r\n    crearRegistro() {\r\n      //Crea un registro nuevo y lo muestra en pantalla\r\n      let asientoReg: AsientoRegistroModel  = new AsientoRegistroModel();\r\n      asientoReg.negocio = this.asiento.negocio;\r\n      this.asiento.registros.push(asientoReg);\r\n      \r\n    }\r\n\r\n    getTotal(tipo:string): number{\r\n      let monto: number = 0;\r\n\r\n      if(tipo == \"debito\"){\r\n        monto = this.asiento.debitoMonedaPrimaria;\r\n      }else{\r\n        monto = this.asiento.creditoMonedaPrimaria;\r\n      }\r\n      \r\n      return monto;\r\n    }\r\n\r\n    recalcularTotales(){\r\n      this.asiento.debitoMonedaPrimaria = 0;\r\n      this.asiento.debitoMonedaSecundaria = 0;\r\n\r\n      this.asiento.creditoMonedaPrimaria = 0;\r\n      this.asiento.creditoMonedaSecundaria = 0;\r\n\r\n\r\n      let sumDebitoPrimaria: number =0;\r\n      let sumCreditoPrimaria:number =0;\r\n      let sumDebitoSecundaria: number =0;\r\n      let sumCreditoSecundaria:number =0;\r\n\r\n      let tasa: number = 1;\r\n\r\n      for(let reg of this.asiento.registros){\r\n        \r\n        // La moneda es la primaria, copiar tasa de defecto y calcular la secundaria\r\n        if(reg.status == 0){\r\n          if(reg.cuenta.moneda.id == this.monedaPrimaria.id){\r\n            reg.tasaMoneda = this.asiento.tasaMonedaPrimaria;\r\n            // reg.tasaMoneda = 1;\r\n            reg.debitoMonedaSecundaria = reg.debitoMonedaPrimaria / reg.tasaMoneda;\r\n            reg.creditoMonedaSecundaria = reg.creditoMonedaPrimaria / reg.tasaMoneda;\r\n          }else{\r\n            // reg.tasaMoneda = 1;\r\n            reg.debitoMonedaPrimaria = reg.debitoMonedaSecundaria * reg.tasaMoneda;\r\n            reg.creditoMonedaPrimaria = reg.creditoMonedaSecundaria * reg.tasaMoneda;\r\n          }\r\n\r\n          sumDebitoPrimaria = sumDebitoPrimaria + reg.debitoMonedaPrimaria;\r\n          sumCreditoPrimaria = sumCreditoPrimaria + reg.creditoMonedaPrimaria;\r\n\r\n          sumDebitoSecundaria = sumDebitoSecundaria + reg.debitoMonedaSecundaria;\r\n          sumCreditoSecundaria = sumCreditoSecundaria + reg.creditoMonedaSecundaria;          \r\n        }\r\n      }\r\n\r\n      this.asiento.debitoMonedaPrimaria = sumDebitoPrimaria;\r\n      this.asiento.creditoMonedaPrimaria = sumCreditoPrimaria;\r\n\r\n      this.asiento.debitoMonedaSecundaria = sumDebitoSecundaria;\r\n      this.asiento.creditoMonedaSecundaria = sumCreditoSecundaria;\r\n    }\r\n    deleteRow(row: AsientoRegistroModel) {\r\n      row.status = -1;\r\n      this.cd.markForCheck();\r\n    }\r\n\r\n    public validar(): boolean {\r\n\r\n      if(this.asiento.debitoMonedaPrimaria == 0 && this.asiento.creditoMonedaPrimaria == 0){\r\n        swal.fire(\"Guardar\", \"El débito y el Crédito son nulos.\",\"warning\");\r\n        return false;\r\n      }\r\n      // Validar que el debe sea igual que el haber!!\r\n      if(this.asiento.debitoMonedaPrimaria!=this.asiento.creditoMonedaPrimaria){\r\n        swal.fire(\"Guardar\", \"El debito y el credito no coinciden.\",\"warning\");\r\n        return false;\r\n      }\r\n\r\n      if(this.asiento.tasaMonedaPrimaria <= 0){\r\n        swal.fire(\"Guardar\", \"La tasa de conversión es invalida\",\"warning\");\r\n        return false;\r\n      }\r\n\r\n      if(this.asiento.tipoOperacion == undefined || this.asiento?.tipoOperacion?.id == 0){\r\n        swal.fire(\"Guardar\", \"El tipo de operación es invalido\",\"warning\");\r\n        return false;\r\n      }\r\n\r\n      if(this.asiento.debitoMonedaSecundaria != this.asiento.creditoMonedaSecundaria){\r\n        swal.fire(\"Guardar\", \"El debito y el credito en moneda secundaria no coinciden.\",\"warning\");\r\n        return false;\r\n      }\r\n\r\n\r\n      return true;\r\n    }\r\n\r\n    public getMonedaTotal(moneda:MonedaModel, tipo: string):number{\r\n      let tasa: number = 0;\r\n      if(moneda.id == this.monedaPrimaria.id){\r\n        tasa = 1;\r\n      }else{\r\n        tasa = moneda.tasa;\r\n      }\r\n      if(tipo == 'debito'){\r\n        return moneda.totalDebitoPrimaria;\r\n      }else{\r\n        return moneda.totalCreditoPrimaria; //(moneda.totalCreditoPrimaria).toFixed(2);\r\n      }\r\n    }\r\n\r\n\r\n    guardar(): boolean {\r\n      this.recalcular();\r\n      if(this.validar() == false){\r\n        return false;\r\n      }\r\n      // Grabar en los registros el asiento\r\n      \r\n      //this.asiento.idEntidad = this.asiento.entidad.id;\r\n      this.asiento.id\r\n      this.asiento.fechaDTO = this.asiento.fechaObj.year + '-' + this.asiento.fechaObj.month + '-' + this.asiento.fechaObj.day;\r\n      this.asiento.idEmpresa = this.userService.getEmpresaSelected().id;\r\n      this.asiento.idTipoOperacion = this.asiento.tipoOperacion.id;\r\n      //this.asiento.idNegocio = this.asiento.negocio.id;\r\n      \r\n\r\n\r\n\r\n      this.dataService.httpFunction(enumWS.ASIENTO_SAVE,this,this.asiento,{});\r\n\r\n\r\n      return true;\r\n    }\r\n\r\n    cancelar() {\r\n      this.asiento = new AsientoModel();\r\n      this.cd.markForCheck();\r\n    }\r\n\r\n  /************************************************************************************************************************\r\n   *\r\n   * RESPONSE OK/ERROR\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n\r\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\r\n    //this.refreshComponent();\r\n    switch(ws.enumUrl) {\r\n      case enumWS.CUENTA_CONTABLE_PAGINATE:\r\n        this.rows = data.content;\r\n        this.loaded = true;\r\n        this.cd.markForCheck();\r\n      break;\r\n      case enumWS.ASIENTO_SAVE:\r\n        swal.fire(\"!Guardado exitoso!\", \"Se ha guardado el registro correctamente\",\"success\");\r\n        this.asiento.tipoOperacion.numeroUnico = this.asiento.tipoOperacion.numeroUnico+1;\r\n        let tipoOperacion = this.asiento.tipoOperacion;\r\n        let tasaMonedaPrimaria = this.asiento.tasaMonedaPrimaria;\r\n        this.asiento = new AsientoModel();\r\n        this.asiento.tipoOperacion = tipoOperacion;\r\n        this.asiento.tasaMonedaPrimaria = tasaMonedaPrimaria;\r\n\r\n\r\n        this.asiento.fechaObj = this.today;\r\n        this.asiento.registros = [];\r\n        this.monedas = [];\r\n        this.asiento.descripcion = \"\";\r\n        this.asiento.referencia = \"\";\r\n        \r\n        this.recalcular();\r\n        this.cd.markForCheck();\r\n\r\n      break;\r\n    }\r\n   }\r\n\r\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\r\n    this.loaded = true;\r\n    this.rows = [];\r\n    this.cd.markForCheck();\r\n   }\r\n\r\n\r\n\r\n   public crearRegistroTEST(){\r\n    this.asiento = new AsientoModel();\r\n    this.asiento.descripcion = \"Asiento de Prueba\";\r\n    this.asiento.empresa = this.userService.getEmpresaSelected();\r\n    this.asiento.fecha = this.today.day + \"-\" + this.today.month + \"-\" + this.today.year;\r\n    this.asiento.fechaObj = this.today;\r\n    this.asiento.registros = []\r\n    this.monedas = [];\r\n    this.asiento.tasaMonedaPrimaria = 620;\r\n\r\n    let reg1: AsientoRegistroModel = this.crearAsientoRnd(this.asiento);\r\n    reg1.cuenta = new CuentaContableModel(\"\");\r\n    reg1.referencia = \"1\";\r\n    reg1.cuenta.nombre = \"Ajuste al peso gasto\";\r\n    reg1.cuenta.uuid = 'cont-99-1291422986-0-37408686-356-80';\r\n    reg1.cuenta.id = 1298;\r\n    reg1.cuenta.codigo = '5.3.3.3';\r\n    reg1.cuenta.moneda = new MonedaModel();\r\n    reg1.cuenta.moneda = JSON.parse('{\"id\": 3, \"uuid\": \"3\", \"codigo\": \"C\", \"nombre\": \"COLONES\", \"color\": \"normal\"}');\r\n    reg1.negocio = new NegocioModel();\r\n    reg1.negocio = JSON.parse('{\"id\":4, \"nombre\": \"Oficina\", \"uuid\":\"4\"}')\r\n    reg1.tasaMoneda = 620;\r\n    this.asiento.registros.push(reg1);\r\n\r\n    let reg2: AsientoRegistroModel = this.crearAsientoRnd(this.asiento);\r\n    reg2.cuenta = new CuentaContableModel(\"\");\r\n    reg2.referencia = \"2\";\r\n    reg2.cuenta.nombre = 'Banco Nacional - Dólares';\r\n    reg2.cuenta.uuid = 'cont-99-1291418142-0-15247953-10-80';\r\n    reg2.cuenta.id = 952;\r\n    reg2.cuenta.codigo = '1.1.1.2.3';\r\n    reg2.cuenta.moneda = new MonedaModel();\r\n    reg2.cuenta.moneda = JSON.parse('{\"id\": 4, \"uuid\": \"4\", \"codigo\": \"US$\", \"nombre\": \"DÓLARES\", \"color\": \"verde\", \"tasa\": 620}');\r\n    reg2.negocio = JSON.parse('{\"id\":5, \"nombre\": \"Avenida 1\", \"uuid\":\"5\"}')\r\n    reg2.tasaMoneda = Number.parseFloat((Math.random() * (800 - 600) + 600).toFixed(2));\r\n\r\n\r\n    reg2.debitoMonedaPrimaria =0; reg2.creditoMonedaPrimaria =0;\r\n    reg2.debitoMonedaSecundaria = Number.parseFloat((Math.random() * (999 - 1) + 1).toFixed(2));\r\n    reg2.creditoMonedaSecundaria = 0;\r\n\r\n    this.asiento.registros.push(reg2);\r\n\r\n\r\n    let reg3: AsientoRegistroModel = this.crearAsientoRnd(this.asiento);\r\n    reg3.cuenta = new CuentaContableModel(\"\");\r\n    reg3.referencia = \"3\";\r\n    reg3.cuenta.nombre = 'Caja General - Colones';\r\n    reg3.cuenta.uuid = 'cont-99-1291418053-0-3648043-4-80';\r\n    reg3.cuenta.id = 946;\r\n    reg3.cuenta.codigo = '1.1.1.1.1';\r\n    reg3.cuenta.moneda = new MonedaModel();\r\n    reg3.cuenta.moneda = JSON.parse('{\"id\": 3, \"uuid\": \"3\", \"codigo\": \"C\", \"nombre\": \"COLONES\", \"color\": \"normal\"}');\r\n    reg3.negocio = JSON.parse('{\"id\":6, \"nombre\": \"Bulevar\", \"uuid\":\"6\"}')\r\n    reg3.tasaMoneda = 620;\r\n    reg3.creditoMonedaPrimaria = reg1.debitoMonedaPrimaria;reg3.debitoMonedaPrimaria = 0;\r\n    this.asiento.registros.push(reg3);\r\n\r\n    let reg4: AsientoRegistroModel = this.crearAsientoRnd(this.asiento);\r\n    reg4.cuenta = new CuentaContableModel(\"\");\r\n    reg4.referencia = \"4\";\r\n    reg4.cuenta.nombre = 'Caja General - Dólares';\r\n    reg4.cuenta.uuid = 'cont-99-1291418065-0-70535916-5-80';\r\n    reg4.cuenta.id = 947;\r\n    reg4.cuenta.codigo = '1.1.1.1.2';\r\n    reg4.cuenta.moneda = new MonedaModel();\r\n    reg4.cuenta.moneda = JSON.parse('{\"id\": 4, \"uuid\": \"4\", \"codigo\": \"US$\", \"nombre\": \"DÓLARES\", \"color\": \"verde\"}');\r\n    reg4.negocio = JSON.parse('{\"id\":6, \"nombre\": \"Bulevar\", \"uuid\":\"6\"}')\r\n    reg4.creditoMonedaSecundaria = reg2.debitoMonedaSecundaria;reg4.debitoMonedaSecundaria = 0;\r\n    reg4.tasaMoneda = reg2.tasaMoneda;\r\n    this.asiento.registros.push(reg4);\r\n\r\n\r\n    this.recalcular();\r\n   }\r\n\r\n   crearAsientoRnd(asiento: AsientoModel,tipoMoneda: number = 0): AsientoRegistroModel{\r\n    let reg: AsientoRegistroModel = new AsientoRegistroModel();\r\n    if(tipoMoneda == 0){ //primaria\r\n      reg.debitoMonedaPrimaria = Number.parseFloat((Math.random() * (100 - 1) + 1).toFixed(2));\r\n    }else{\r\n      reg.debitoMonedaSecundaria = Number.parseFloat((Math.random() * (100 - 1) + 1).toFixed(2));\r\n    }\r\n    \r\n    reg.descripcion = \"Testeo\"\r\n    reg.referencia = \"1\";\r\n    return reg;\r\n   }\r\n}\r\n","<section id=\"collapse\">\r\n    <div class=\"row\">\r\n        <div class=\"col-4\">\r\n            <!-- <button class=\"btn btn-warning btn-lg\" (click)=\"crearRegistroTEST()\">Random</button> -->\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n            <div class=\"card\">\r\n                <div class=\"card-header\">\r\n                    <div class=\"row \">\r\n                        <!-- Fecha -->\r\n                        <div class=\"col-6 col-md-4 col-lg-3\">\r\n                            <fieldset class=\"form-group\">\r\n                                <label for=\"input-nombre\">Fecha</label>\r\n                                <div class=\"input-group\">\r\n                                    <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"asiento.fechaObj\" ngbDatepicker [footerTemplate]=\"footerTemplate\" #d=\"ngbDatepicker\" />\r\n                                    <button class=\"btn btn-outline-info far fa-calendar-alt ml-1\" (click)=\"d.toggle()\" type=\"button\"></button>\r\n                                </div>\r\n                                <ng-template #footerTemplate>\r\n                                    <hr class=\"my-0\" />\r\n                                    <button class=\"btn btn-primary btn-sm m-2 float-start\" (click)=\"model = today; d.close()\">Today</button>\r\n                                    <button class=\"btn btn-secondary btn-sm m-2 float-end\" (click)=\"d.close()\">Close</button>\r\n                                </ng-template>\r\n                            </fieldset>\r\n                        </div>\r\n                        <!-- Número de Referencia -->\r\n                        <div class=\"col-6 col-md-4 col-lg-3\">\r\n                            <fieldset class=\"form-group\">\r\n                                <label for=\"input-nombre\">Referencia</label>\r\n                                <input class=\"form-control\" [(ngModel)]=\"asiento.referencia\" />\r\n                            </fieldset>\r\n                        </div>\r\n                        <!-- Empresa -->\r\n                        <div class=\"col-6 col-md-4 col-lg-3\">\r\n                            <fieldset class=\"form-group\">\r\n                                <label for=\"input-nombre\">Negocio</label>\r\n                                <sm-select (changeEvent)=\"asiento.negocio = $event\" [options]=\"negocioOptions\" [initValue]=\"initValue\"></sm-select>\r\n                            </fieldset>\r\n                        </div>\r\n                        <!-- Entidad -->\r\n                        <!-- <div class=\"col-6 col-md-4 col-lg-3\">\r\n                            <fieldset class=\"form-group\">\r\n                                <label for=\"input-nombre\">Entidad</label>\r\n                                <entidad-select (changeEvent)=\"asiento.entidad = $event\"></entidad-select>\r\n                            </fieldset>\r\n                        </div> -->\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-6 col-md-4 col-lg-3\">\r\n                            <fieldset class=\"form-group\">\r\n                                <label for=\"input-nombre\">Operación</label>\r\n                                <tipo-operacion-select (changeEvent)=\"asiento.tipoOperacion = $event\"></tipo-operacion-select>\r\n                            </fieldset>\r\n                        </div>\r\n\r\n                        <div class=\"col-6 col-md-4 col-lg-3\">\r\n                            <fieldset class=\"form-group\">\r\n                                <label for=\"input-nombre\">Nro. de Operación</label>\r\n                                <input class=\"form-control\" [disabled]=\"true\" [value]=\"asiento.tipoOperacion.numeroUnico+1\" />\r\n                            </fieldset>\r\n                        </div>\r\n\r\n                        <div class=\"col-6 col-md-4 col-lg-3\">\r\n                            <fieldset class=\"form-group\" *ngIf=\"multipleMoneda == 1\">\r\n                                <money-input [label]=\"'Tasa'\" [(value)]=\"asiento.tasaMonedaPrimaria\" [monedaPrimary]=\"monedaPrimaria\" (changeEvent)=\"recalcular()\"></money-input>\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row \">\r\n                        <!-- Observaciones del Asiento -->\r\n                        <div class=\"col-12\">\r\n                            <fieldset class=\"form-group\">\r\n                                <label for=\"input-nombre\">Observaciones</label>\r\n                                <textarea class=\"form-control ng-untouched ng-pristine ng-valid\" rows=\"5\" [(ngModel)]=\"asiento.descripcion\" style=\"resize: none\"></textarea>\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                    <div class=\"registro\" *ngFor=\"let reg of asiento.registros\">\r\n                        <asiento-registro-abm [registro]=\"reg\" [asiento]=\"asiento\" (changeCalculo)=\"recalcular()\"></asiento-registro-abm>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"card-footer\">\r\n                    <div class=\"row row-grid\">\r\n                        <div class=\"col-12\">\r\n                            <button class=\"btn btn-primary btn-large\" (click)=\"crearRegistro()\">Agregar Linea</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <ng-template [ngIf]=\"hasMultiplesMonedas()\" class=\"ng-template-monedas\">\r\n                        <div class=\"row  ng-template-monedas\" *ngFor=\"let moneda of monedas\">\r\n                            <ng-template [ngIf]=\"moneda.totalDebito != 0 || moneda.totalCredito != 0\">\r\n                                <div class=\"col-2 text-right\">\r\n                                    <moneda-select [moneda]=\"moneda\" [tipo]=\"'label-large'\"></moneda-select>\r\n                                </div>\r\n                                <ng-template [ngIf]=\"moneda.id != monedaPrimaria.id\">\r\n                                    <div class=\"col-2\">\r\n                                        <!-- TASA -->\r\n                                        <!-- <label for=\"input-nombre\">Tasa</label> -->\r\n                                        <!-- <input class=\"form-control\" [(ngModel)]=\"moneda.tasa\" (change)=\"recalcular()\" (keyup)=\"recalcular()\" [disabled]=\"true\" /> -->\r\n                                        <money-input [monedaPrimary]=\"monedaPrimaria\" [value]=\"moneda.tasa\" [formatMoney]=\"true\"></money-input>\r\n                                    </div>\r\n                                    <div class=\"col-2\">\r\n                                        <!-- TOTAL DEBITO MONEDA EXT -->\r\n                                        <money-input [monedaPrimary]=\"moneda\" [value]=\"moneda.totalDebitoSecundaria\" [formatMoney]=\"true\"></money-input>\r\n                                    </div>\r\n                                    <div class=\"col-2\">\r\n                                        <!-- TOTAL CREDITO MONEDA EXT -->\r\n                                        <money-input [monedaPrimary]=\"moneda\" [value]=\"moneda.totalCreditoSecundaria\" [formatMoney]=\"true\"></money-input>\r\n                                    </div>\r\n                                </ng-template>\r\n                                <ng-template [ngIf]=\"!(moneda.id != monedaPrimaria.id)\">\r\n                                    <!-- hacer espacio -->\r\n                                    <div class=\"col-6\"></div>\r\n                                </ng-template>\r\n\r\n                                <div class=\"col-2\">\r\n                                    <!-- DEBITO -->\r\n                                    <money-input [monedaPrimary]=\"monedaPrimaria\" [value]=\"getMonedaTotal(moneda, 'debito')\"  [formatMoney]=\"true\"></money-input>\r\n                                </div>\r\n                                <div class=\"col-2\">\r\n                                    <!-- CREDITO -->\r\n                                    <money-input [monedaPrimary]=\"monedaPrimaria\" [value]=\"getMonedaTotal(moneda, 'credito')\"  [formatMoney]=\"true\"></money-input>\r\n                                </div>\r\n                            </ng-template>\r\n                        </div>\r\n                    </ng-template>\r\n\r\n                    <div class=\"row row-grid\">\r\n                        <div class=\"col-0 col-md-6\"></div>\r\n                        <div class=\"col-6 col-md-3\">\r\n                            <label for=\"input-nombre\">Débito</label>\r\n                            <money-input [monedaPrimary]=\"monedaPrimaria\" [value]=\"getTotal('debito')\" [formatMoney]=\"true\"></money-input>\r\n                            <!-- <input class=\"form-control\" style=\"text-align: right; font-weight: bold\" value=\"{{ getTotalString('debito') }}\" disabled /> -->\r\n                        </div>\r\n                        <div class=\"col-6 col-md-3\">\r\n                            <label for=\"input-nombre\">Crédito</label>\r\n                            <money-input [monedaPrimary]=\"monedaPrimaria\" [value]=\"getTotal('credito')\" [formatMoney]=\"true\"></money-input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"card\">\r\n        <div class=\"row mt-2 mb-2\">\r\n            <div class=\"col-6 text-center\">\r\n                <button class=\"btn btn-danger btn-lg\" (click)=\"cancelar()\">Cancelar</button>\r\n            </div>\r\n            <div class=\"col-6 text-center\">\r\n                <button class=\"btn btn-primary btn-lg\" (click)=\"guardar()\">Guardar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"card\" style=\"display: none;\">\r\n        <table>\r\n            <thead>\r\n                <td>Cuenta</td>\r\n                <td>Tasa Moneda</td>\r\n                <td>Debito Moneda Primaria</td>\r\n                <td>Credito Moneda Primaria</td>\r\n                <td>Debito Moneda Secundaria</td>\r\n                <td>Credito Moneda Secundaria</td>\r\n            </thead>\r\n            <tr *ngFor=\"let reg of asiento.registros\">\r\n                <td>{{reg.cuenta.nombre}}</td>\r\n                <td>{{reg.tasaMoneda}}</td>\r\n                <td>{{reg.debitoMonedaPrimaria}}</td>\r\n                <td>{{reg.creditoMonedaPrimaria}}</td>\r\n                <td>{{reg.debitoMonedaSecundaria}}</td>\r\n                <td>{{reg.creditoMonedaSecundaria}}</td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</section>\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ChartistModule } from 'ng-chartist';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { ComponentsModule } from '../../../../../coreApp/src/app/shared/components.module';\r\nimport { PipeModule } from '../../../../../coreApp/src/app/shared/pipes/pipe.module';\r\nimport { ComponentsProyectModule } from '../../components/components-proyect.module';\r\nimport { AsientoListadoComponent } from \"./listado/asiento-listado.component\";\r\nimport { AsientoAbmComponent } from \"./abm/asiento-abm.component\";\r\nimport { AsientoRoutingModule } from \"./asiento-routing.module\";\r\nimport { SharedAppModule } from \"../../SharedApp.module\";\r\nimport { AsientoRegistroAbmComponent } from \"./abm/asiento-registro-abm/asiento-registro-abm.component\";\r\nimport { UsuarioModel } from \"../../models/Usuario.model\";\r\nimport { UserService } from \"../../services/User.service\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsProyectModule,\r\n    ComponentsModule,\r\n    // CoreModule,\r\n    AsientoRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ChartsModule,\r\n    ChartistModule,\r\n    NgxChartsModule,\r\n    NgApexchartsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    NgxDatatableModule,\r\n    PipeModule,\r\n    NgbTooltipModule,\r\n    SharedAppModule\r\n  ],\r\n  exports: [],\r\n  declarations: [\r\n    AsientoListadoComponent,\r\n    AsientoAbmComponent,\r\n    AsientoRegistroAbmComponent\r\n  ],\r\n  providers: [\r\n    UserService\r\n  ],\r\n})\r\nexport class AsientoModule { }\r\n"]}