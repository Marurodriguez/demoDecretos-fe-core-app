{"version":3,"sources":["./src/app/pages/libro-mayor/libro-mayor-routing.module.ts","./src/app/pages/libro-mayor/listado/libro-mayor.component.ts","./src/app/pages/libro-mayor/listado/libro-mayor.component.html","./src/app/pages/libro-mayor/libro-mayor.module.ts"],"names":[],"mappings":"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","file":"pages-libro-mayor-libro-mayor-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LibroMayorComponent } from './listado/libro-mayor.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: 'listado',\n    component: LibroMayorComponent,\n    pathMatch: 'full',\n    data: {\n      title: 'Listado'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LibroMayorRoutingModule { }\n","import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\nimport { AsientoModel } from '../../../models/Asiento.model';\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\nimport { TitleBarService } from '../../../services/TitleBar.service';\nimport { UserService } from '../../../services/User.service';\n\n@Component({\n  selector: 'libro-mayor',\n  templateUrl: './libro-mayor.component.html',\n  styleUrls: ['./libro-mayor.component.scss']\n})\n\n// export class vista{\n//   public fecha: string = \"\";\n//   public referencia: string = \"\";\n//   public tercero: string = \"\";\n//   public cuentaContable: string = \"\";\n//   public debito: string = \"\";\n//   public credito: string = \"\";\n//   public debito\n// }\n\nexport class LibroMayorComponent {\n  /************************************************************************************************************************\n   * Inputs && Outputs && Properties\n   *\n   ************************************************************************************************************************/\n\n  /************************************************************************************************************************\n   * Variables\n   *\n   ************************************************************************************************************************/\n    public loaded: boolean = false;\n    public isCollapsed:boolean = false;\n    public registros:AsientoRegistroModel[] = [];\n    public posAsiento: number = 0;\n    public fechaInicio: NgbDate = new NgbDate(2022,9,26);\n    public fechaFin: NgbDate = new NgbDate(2022,1,1);\n    public cuentaListado: CuentaContableModel = new CuentaContableModel(\"\"); //Es la cuenta con la que se genero el listado\n    public paginateData: PaginateDataModel = new PaginateDataModel();\n    public page: number = 0;\n    public cuentaSelected: CuentaContableModel = new CuentaContableModel(\"\");\n    public cuentasCount: number = 0;\n    public size: number = 10; \n\n    /************************************************************************************************************************\n    * Constructor && Implements\n    *\n    ************************************************************************************************************************/\n   constructor(public dataService: DataService,\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\n               public router: Router, public route: ActivatedRoute,\n               public authUserService: AuthUserService, \n               public serializer: UrlSerializer, public functionService: FunctionService, public userService: UserService,\n               public calendar: NgbCalendar, public titleBarService: TitleBarService){\n      \n      this.titleBarService.title = \"Libro Mayor\";\n      this.titleBarService.subTitle = \"Desde esta pantalla se podrán mostrar los libros mayores\";\n    }\n  \n   /************************************************************************************************************************\n    *\n    * Eventos\n    *\n    ************************************************************************************************************************/\n    ngOnInit() {\n      this.fechaInicio= new NgbDate(2000,1,1);\n      this.fechaFin = this.calendar.getToday();\n      this.cuentaSelected.id = 71; //HARDCODE\n      \n    }\n\n\n   /************************************************************************************************************************\n    * FUNCTIONS\n    *\n    ************************************************************************************************************************/\n    \n   \n   public selectCuenta(cuenta: CuentaContableModel) {\n      this.cuentaSelected = cuenta; \n    }\n\n    getField(row, name: string){\n      try {\n        switch(name){\n          case \"cuenta-nombre\":\n            return this.cuentaListado.nombre;\n            break;\n          case \"fecha\":\n            let fecha:Date = this.functionService.getDateFromString(row.asiento.fecha,\"-\",0,true);\n            if(fecha==undefined){\n              return \"\";\n            }\n            return this.functionService.formatDate(fecha);\n          default:\n            return this.functionService.getValueFromObject(row,name);\n        }\n      }catch(ex){\n        return \"\";\n      }\n    }\n\n    refresh(){\n      const paginateListModel:PaginateListModel=new PaginateListModel(this.page,this.size);\n      paginateListModel.addParameter(\"empresa\", this.userService.getIdEmpresaSelected().toString());\n      paginateListModel.addParameter(\"fechaInicio\",this.fechaInicio.year + \"-\" + this.fechaInicio.month + \"-\" + this.fechaInicio.day + \" 00:00:01\")\n      paginateListModel.addParameter(\"fechaFin\",this.fechaFin.year + \"-\" + this.fechaFin.month + \"-\" + this.fechaFin.day + \" 23:59:59\")\n      paginateListModel.addParameter(\"cuenta\",this.cuentaSelected.id.toString());\n      this.dataService.httpFunction(enumWS.ASIENTO_CUENTA_RESUMEN,this,paginateListModel,{})\n      this.cuentaListado = JSON.parse(JSON.stringify(this.cuentaSelected));\n   } \n\n  \n\n   \n   getClass(reg):string{\n      try{\n        if(reg.debito > 0){\n          return \"reg-debe\";\n        }else{\n          return \"reg-haber\";\n        }\n      }catch(ex){\n        return \"\";\n      }\n\n    }\n\n\n    SetPage(paginateList: PaginateListModel){\n      this.page = paginateList.page;\n      this.size = paginateList.size; \n      this.refresh();\n    }\n\n  /************************************************************************************************************************\n   *\n   * RESPONSE OK/ERROR\n   *\n   ************************************************************************************************************************/\n\n\n   responseOk(httpOperation:any, http: string, data:any, ws:any ){\n    switch(ws.enumUrl) {\n      case enumWS.ASIENTO_CUENTA_RESUMEN:\n        this.registros = data.asientoRegistroDTOPage.content;\n        this.paginateData = data.asientoRegistroDTOPage;\n        this.loaded = true;\n        this.cd.markForCheck();\n      break;\n  }\n   }\n\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\n   }\n}\n","<section id=\"collapse\">\n    <!-- <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n            <div class=\"content-header\">Libro Mayor</div>\n            <p class=\"content-sub-header mb-1\">Desde esta pantalla se podrán mostrar los libros mayores</p>\n        </div>\n    </div> -->\n\n    <div class=\"row mt-2\">\n        <div class=\"col-4 col-md-4 col-xl-2\">\n            <fieldset class=\"form-group\">\n                <label for=\"input-nombre\">Periodo</label>\n                <div class=\"input-group\">\n                    <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"fechaInicio\" ngbDatepicker [footerTemplate]=\"footerTemplate\" #d=\"ngbDatepicker\" />\n                    <button class=\"btn btn-outline-info far fa-calendar-alt ml-1\" (click)=\"d.toggle()\" type=\"button\"></button>\n                </div>\n                <ng-template #footerTemplate>\n                    <hr class=\"my-0\" />\n                    <button class=\"btn btn-primary btn-sm m-2 float-start\" (click)=\"model = today; d.close()\">Today</button>\n                    <button class=\"btn btn-secondary btn-sm m-2 float-end\" (click)=\"d.close()\">Close</button>\n                </ng-template>\n            </fieldset>\n        </div>\n        <div class=\"col-4 col-md-4 col-xl-2\">\n            <fieldset class=\"form-group\">\n                <label for=\"input-nombre\"></label>\n                <div class=\"input-group\">\n                    <input class=\"form-control\" placeholder=\"yyyy-mm-dd\" name=\"dp\" [(ngModel)]=\"fechaFin\" ngbDatepicker [footerTemplate]=\"footerTemplate\" #df=\"ngbDatepicker\" />\n                    <button class=\"btn btn-outline-info far fa-calendar-alt ml-1\" (click)=\"df.toggle()\" type=\"button\"></button>\n                </div>\n                <ng-template #footerTemplate>\n                    <hr class=\"my-0\" />\n                    <button class=\"btn btn-primary btn-sm m-2 float-start\" (click)=\"model = today; df.close()\">Today</button>\n                    <button class=\"btn btn-secondary btn-sm m-2 float-end\" (click)=\"df.close()\">Close</button>\n                </ng-template>\n            </fieldset>\n        </div>\n        <div class=\"col-4 col-md-6 col-xl-4\">\n            <fieldset class=\"form-group\">\n                <label for=\"input-nombre\">Cuenta</label>\n                <cuenta-select (changeEvent)=\"selectCuenta($event)\"></cuenta-select>\n            </fieldset>\n        </div>\n        <div class=\"col-4\">\n            <button class=\"btn btnl-lg btn-primary mt-3\" (click)=\"refresh()\">CARGAR</button>\n        </div>\n    </div>\n\n    <ng-template [ngIf]=\"loaded\">\n        <div class=\"container-table\">\n            <table width=\"100%\" class=\"table table-transparent table-striped table-dark\">\n                <thead class=\"thead-dark\">\n                    <th width=\"5%\">#</th>\n                    <th width=\"8%\">Fecha</th>\n                    <th width=\"18%\">Referencia</th>\n                    <th width=\"23%\">Tercero</th>\n                    <th width=\"10%\">Debito</th>\n                    <th width=\"10%\">Credito</th>\n\n                    <th width=\"13%\">Saldo Debito</th>\n                    <th width=\"13%\">Saldo Credito</th>\n                </thead>\n                <tbody>\n                    <ng-template ngFor let-reg [ngForOf]=\"registros\">\n                        <tr class=\"row-space\"></tr>\n                        <tr>\n                            <!-- número # -->\n                            <td>\n                                {{ getField(reg, \"asiento.id\") }}\n                            </td>\n                            <!-- FECHA -->\n                            <td>\n                                {{ getField(reg, \"fecha\") }}\n                            </td>\n                            <!-- referencia -->\n                            <td>\n                                {{ getField(reg, \"asiento.referencia\") }}\n                            </td>\n                            <!-- Tercero -->\n                            <td>\n                                {{ getField(reg, \"entidad.nombre\") }}\n                            </td>\n                            <!-- <td class=\"td-cuenta\">\n                        <p class=\"{{getClass(reg)}}\">{{ getField(reg,\"cuenta-nombre\") }}</p>\n                    </td> -->\n                            <td class=\"td-debito monto\">\n                                <p *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.debito) }}</p>\n                            </td>\n                            <td class=\"td-credito monto\">\n                                <p *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.credito) }}</p>\n                            </td>\n                            <td class=\"saldo-debito monto\">\n                                <p class=\"p-saldo-debito\" *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.saldoAntDebitoEmpresa) }}</p>\n                            </td>\n                            <td class=\"saldo-credito monto\">\n                                <p class=\"p-saldo-credito\" *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.saldoAntCreditoEmpresa) }}</p>\n                            </td>\n                        </tr>\n                        <!-- <tr >\n                    <td>\n                        {{ getFieldReg('entidad',reg) }}\n                    </td>\n                    <td class=\"td-cuenta\">\n                        <p class=\"{{getClass(reg)}}\">{{ reg.cuenta.nombre }}</p>\n                    </td>\n                    <td class=\"td-debito\">\n                        <p *ngIf=\"reg.debito > 0\">{{ functionService.formatMoney(reg.debito) }}</p>\n                    </td>\n                    <td class=\"td-credito\">\n                        <p *ngIf=\"reg.credito > 0\">{{ functionService.formatMoney(reg.credito) }}</p>\n                    </td>\n                </tr> -->\n                        <!-- <tr class=\"row-footer\">\n                    <td colspan=\"5\">\n                        \n                    </td>\n                    <td class=\"td-debito td-total\"> \n                        <p>{{ functionService.formatMoney(asiento.debito) }}</p>\n                    </td>\n                    <td class=\"td-credito td-total\"> \n                        <p>{{ functionService.formatMoney(asiento.debito) }}</p>\n                     </td>\n                </tr> -->\n                        <tr class=\"row-space\"></tr>\n                    </ng-template>\n                </tbody>\n            </table>\n        </div>\n        <footer [paginate]=\"paginateData\" (setPageEvent)=\"SetPage($event)\"></footer>\n    </ng-template>\n</section>\n","import { CommonModule } from \"@angular/common\";\nimport { NgModule } from '@angular/core';\n\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgbModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { NgApexchartsModule } from 'ng-apexcharts';\nimport { ChartistModule } from 'ng-chartist';\nimport { ChartsModule } from 'ng2-charts';\nimport { ComponentsModule } from '../../../../../coreApp/src/app/shared/components.module';\nimport { PipeModule } from '../../../../../coreApp/src/app/shared/pipes/pipe.module';\nimport { ComponentsProyectModule } from '../../components/components-proyect.module';\nimport { UserService } from \"../../services/User.service\";\nimport { SharedAppModule } from \"../../SharedApp.module\";\nimport { LibroMayorRoutingModule } from \"./libro-mayor-routing.module\";\nimport { LibroMayorComponent } from \"./listado/libro-mayor.component\";\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ComponentsProyectModule,\n    ComponentsModule,\n    // CoreModule,\n    LibroMayorRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ChartsModule,\n    ChartistModule,\n    NgxChartsModule,\n    NgApexchartsModule,\n    HttpClientModule,\n    NgbModule,\n    NgSelectModule,\n    NgxDatatableModule,\n    PipeModule,\n    NgbTooltipModule,\n    SharedAppModule\n  ],\n  exports: [],\n  declarations: [\n    LibroMayorComponent,\n  ],\n  providers: [\n    UserService\n  ],\n})\nexport class LibroMayorModule { }\n"],"sourceRoot":"webpack:///"}