{"ast":null,"code":"'use strict';\n/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n\n(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define(factory);\n  } else if (typeof exports === \"object\") {\n    module.exports = factory();\n  } else {\n    root.ResizeSensor = factory();\n  }\n})(typeof window !== 'undefined' ? window : this, function () {\n  // Make sure it does not throw in a SSR (Server Side Rendering) situation\n  if (typeof window === \"undefined\") {\n    return null;\n  } // https://github.com/Semantic-Org/Semantic-UI/issues/3855\n  // https://github.com/marcj/css-element-queries/issues/257\n\n\n  var globalWindow = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')(); // Only used for the dirty checking, so the event callback count is limited to max 1 call per fps per sensor.\n  // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n  // would generate too many unnecessary events.\n\n  var requestAnimationFrame = globalWindow.requestAnimationFrame || globalWindow.mozRequestAnimationFrame || globalWindow.webkitRequestAnimationFrame || function (fn) {\n    return globalWindow.setTimeout(fn, 20);\n  };\n\n  var cancelAnimationFrame = globalWindow.cancelAnimationFrame || globalWindow.mozCancelAnimationFrame || globalWindow.webkitCancelAnimationFrame || function (timer) {\n    globalWindow.clearTimeout(timer);\n  };\n  /**\n   * Iterate over each of the provided element(s).\n   *\n   * @param {HTMLElement|HTMLElement[]} elements\n   * @param {Function}                  callback\n   */\n\n\n  function forEachElement(elements, callback) {\n    var elementsType = Object.prototype.toString.call(elements);\n    var isCollectionTyped = '[object Array]' === elementsType || '[object NodeList]' === elementsType || '[object HTMLCollection]' === elementsType || '[object Object]' === elementsType || 'undefined' !== typeof jQuery && elements instanceof jQuery //jquery\n    || 'undefined' !== typeof Elements && elements instanceof Elements //mootools\n    ;\n    var i = 0,\n        j = elements.length;\n\n    if (isCollectionTyped) {\n      for (; i < j; i++) {\n        callback(elements[i]);\n      }\n    } else {\n      callback(elements);\n    }\n  }\n  /**\n  * Get element size\n  * @param {HTMLElement} element\n  * @returns {Object} {width, height}\n  */\n\n\n  function getElementSize(element) {\n    if (!element.getBoundingClientRect) {\n      return {\n        width: element.offsetWidth,\n        height: element.offsetHeight\n      };\n    }\n\n    var rect = element.getBoundingClientRect();\n    return {\n      width: Math.round(rect.width),\n      height: Math.round(rect.height)\n    };\n  }\n  /**\n   * Apply CSS styles to element.\n   *\n   * @param {HTMLElement} element\n   * @param {Object} style\n   */\n\n\n  function setStyle(element, style) {\n    Object.keys(style).forEach(function (key) {\n      element.style[key] = style[key];\n    });\n  }\n  /**\n   * Class for dimension change detection.\n   *\n   * @param {Element|Element[]|Elements|jQuery} element\n   * @param {Function} callback\n   *\n   * @constructor\n   */\n\n\n  var ResizeSensor = function ResizeSensor(element, callback) {\n    //Is used when checking in reset() only for invisible elements\n    var lastAnimationFrameForInvisibleCheck = 0;\n    /**\n     *\n     * @constructor\n     */\n\n    function EventQueue() {\n      var q = [];\n\n      this.add = function (ev) {\n        q.push(ev);\n      };\n\n      var i, j;\n\n      this.call = function (sizeInfo) {\n        for (i = 0, j = q.length; i < j; i++) {\n          q[i].call(this, sizeInfo);\n        }\n      };\n\n      this.remove = function (ev) {\n        var newQueue = [];\n\n        for (i = 0, j = q.length; i < j; i++) {\n          if (q[i] !== ev) newQueue.push(q[i]);\n        }\n\n        q = newQueue;\n      };\n\n      this.length = function () {\n        return q.length;\n      };\n    }\n    /**\n     *\n     * @param {HTMLElement} element\n     * @param {Function}    resized\n     */\n\n\n    function attachResizeEvent(element, resized) {\n      if (!element) return;\n\n      if (element.resizedAttached) {\n        element.resizedAttached.add(resized);\n        return;\n      }\n\n      element.resizedAttached = new EventQueue();\n      element.resizedAttached.add(resized);\n      element.resizeSensor = document.createElement('div');\n      element.resizeSensor.dir = 'ltr';\n      element.resizeSensor.className = 'resize-sensor';\n      var style = {\n        pointerEvents: 'none',\n        position: 'absolute',\n        left: '0px',\n        top: '0px',\n        right: '0px',\n        bottom: '0px',\n        overflow: 'hidden',\n        zIndex: '-1',\n        visibility: 'hidden',\n        maxWidth: '100%'\n      };\n      var styleChild = {\n        position: 'absolute',\n        left: '0px',\n        top: '0px',\n        transition: '0s'\n      };\n      setStyle(element.resizeSensor, style);\n      var expand = document.createElement('div');\n      expand.className = 'resize-sensor-expand';\n      setStyle(expand, style);\n      var expandChild = document.createElement('div');\n      setStyle(expandChild, styleChild);\n      expand.appendChild(expandChild);\n      var shrink = document.createElement('div');\n      shrink.className = 'resize-sensor-shrink';\n      setStyle(shrink, style);\n      var shrinkChild = document.createElement('div');\n      setStyle(shrinkChild, styleChild);\n      setStyle(shrinkChild, {\n        width: '200%',\n        height: '200%'\n      });\n      shrink.appendChild(shrinkChild);\n      element.resizeSensor.appendChild(expand);\n      element.resizeSensor.appendChild(shrink);\n      element.appendChild(element.resizeSensor);\n      var computedStyle = window.getComputedStyle(element);\n      var position = computedStyle ? computedStyle.getPropertyValue('position') : null;\n\n      if ('absolute' !== position && 'relative' !== position && 'fixed' !== position && 'sticky' !== position) {\n        element.style.position = 'relative';\n      }\n\n      var dirty = false; //last request animation frame id used in onscroll event\n\n      var rafId = 0;\n      var size = getElementSize(element);\n      var lastWidth = 0;\n      var lastHeight = 0;\n      var initialHiddenCheck = true;\n      lastAnimationFrameForInvisibleCheck = 0;\n\n      var resetExpandShrink = function resetExpandShrink() {\n        var width = element.offsetWidth;\n        var height = element.offsetHeight;\n        expandChild.style.width = width + 10 + 'px';\n        expandChild.style.height = height + 10 + 'px';\n        expand.scrollLeft = width + 10;\n        expand.scrollTop = height + 10;\n        shrink.scrollLeft = width + 10;\n        shrink.scrollTop = height + 10;\n      };\n\n      var reset = function reset() {\n        // Check if element is hidden\n        if (initialHiddenCheck) {\n          var invisible = element.offsetWidth === 0 && element.offsetHeight === 0;\n\n          if (invisible) {\n            // Check in next frame\n            if (!lastAnimationFrameForInvisibleCheck) {\n              lastAnimationFrameForInvisibleCheck = requestAnimationFrame(function () {\n                lastAnimationFrameForInvisibleCheck = 0;\n                reset();\n              });\n            }\n\n            return;\n          } else {\n            // Stop checking\n            initialHiddenCheck = false;\n          }\n        }\n\n        resetExpandShrink();\n      };\n\n      element.resizeSensor.resetSensor = reset;\n\n      var onResized = function onResized() {\n        rafId = 0;\n        if (!dirty) return;\n        lastWidth = size.width;\n        lastHeight = size.height;\n\n        if (element.resizedAttached) {\n          element.resizedAttached.call(size);\n        }\n      };\n\n      var onScroll = function onScroll() {\n        size = getElementSize(element);\n        dirty = size.width !== lastWidth || size.height !== lastHeight;\n\n        if (dirty && !rafId) {\n          rafId = requestAnimationFrame(onResized);\n        }\n\n        reset();\n      };\n\n      var addEvent = function addEvent(el, name, cb) {\n        if (el.attachEvent) {\n          el.attachEvent('on' + name, cb);\n        } else {\n          el.addEventListener(name, cb);\n        }\n      };\n\n      addEvent(expand, 'scroll', onScroll);\n      addEvent(shrink, 'scroll', onScroll); // Fix for custom Elements and invisible elements\n\n      lastAnimationFrameForInvisibleCheck = requestAnimationFrame(function () {\n        lastAnimationFrameForInvisibleCheck = 0;\n        reset();\n      });\n    }\n\n    forEachElement(element, function (elem) {\n      attachResizeEvent(elem, callback);\n    });\n\n    this.detach = function (ev) {\n      // clean up the unfinished animation frame to prevent a potential endless requestAnimationFrame of reset\n      if (!lastAnimationFrameForInvisibleCheck) {\n        cancelAnimationFrame(lastAnimationFrameForInvisibleCheck);\n        lastAnimationFrameForInvisibleCheck = 0;\n      }\n\n      ResizeSensor.detach(element, ev);\n    };\n\n    this.reset = function () {\n      element.resizeSensor.resetSensor();\n    };\n  };\n\n  ResizeSensor.reset = function (element) {\n    forEachElement(element, function (elem) {\n      elem.resizeSensor.resetSensor();\n    });\n  };\n\n  ResizeSensor.detach = function (element, ev) {\n    forEachElement(element, function (elem) {\n      if (!elem) return;\n\n      if (elem.resizedAttached && typeof ev === \"function\") {\n        elem.resizedAttached.remove(ev);\n        if (elem.resizedAttached.length()) return;\n      }\n\n      if (elem.resizeSensor) {\n        if (elem.contains(elem.resizeSensor)) {\n          elem.removeChild(elem.resizeSensor);\n        }\n\n        delete elem.resizeSensor;\n        delete elem.resizedAttached;\n      }\n    });\n  };\n\n  if (typeof MutationObserver !== \"undefined\") {\n    var observer = new MutationObserver(function (mutations) {\n      for (var i in mutations) {\n        if (mutations.hasOwnProperty(i)) {\n          var items = mutations[i].addedNodes;\n\n          for (var j = 0; j < items.length; j++) {\n            if (items[j].resizeSensor) {\n              ResizeSensor.reset(items[j]);\n            }\n          }\n        }\n      }\n    });\n    document.addEventListener(\"DOMContentLoaded\", function (event) {\n      observer.observe(document.body, {\n        childList: true,\n        subtree: true\n      });\n    });\n  }\n\n  return ResizeSensor;\n});","map":{"version":3,"sources":["C:/Proyectos/webPlus/angular-version/full-version/node_modules/css-element-queries/src/ResizeSensor.js"],"names":["root","factory","define","amd","exports","module","ResizeSensor","window","globalWindow","Math","self","Function","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","fn","setTimeout","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","timer","clearTimeout","forEachElement","elements","callback","elementsType","Object","prototype","toString","call","isCollectionTyped","jQuery","Elements","i","j","length","getElementSize","element","getBoundingClientRect","width","offsetWidth","height","offsetHeight","rect","round","setStyle","style","keys","forEach","key","lastAnimationFrameForInvisibleCheck","EventQueue","q","add","ev","push","sizeInfo","remove","newQueue","attachResizeEvent","resized","resizedAttached","resizeSensor","document","createElement","dir","className","pointerEvents","position","left","top","right","bottom","overflow","zIndex","visibility","maxWidth","styleChild","transition","expand","expandChild","appendChild","shrink","shrinkChild","computedStyle","getComputedStyle","getPropertyValue","dirty","rafId","size","lastWidth","lastHeight","initialHiddenCheck","resetExpandShrink","scrollLeft","scrollTop","reset","invisible","resetSensor","onResized","onScroll","addEvent","el","name","cb","attachEvent","addEventListener","elem","detach","contains","removeChild","MutationObserver","observer","mutations","hasOwnProperty","items","addedNodes","event","observe","body","childList","subtree"],"mappings":"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","sourcesContent":["'use strict';\n\n/**\n * Copyright Marc J. Schmidt. See the LICENSE file at the top-level\n * directory of this distribution and at\n * https://github.com/marcj/css-element-queries/blob/master/LICENSE.\n */\n(function (root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(factory);\n    } else if (typeof exports === \"object\") {\n        module.exports = factory();\n    } else {\n        root.ResizeSensor = factory();\n    }\n}(typeof window !== 'undefined' ? window : this, function () {\n\n    // Make sure it does not throw in a SSR (Server Side Rendering) situation\n    if (typeof window === \"undefined\") {\n        return null;\n    }\n    // https://github.com/Semantic-Org/Semantic-UI/issues/3855\n    // https://github.com/marcj/css-element-queries/issues/257\n    var globalWindow = typeof window != 'undefined' && window.Math == Math\n        ? window\n        : typeof self != 'undefined' && self.Math == Math\n            ? self\n            : Function('return this')();\n    // Only used for the dirty checking, so the event callback count is limited to max 1 call per fps per sensor.\n    // In combination with the event based resize sensor this saves cpu time, because the sensor is too fast and\n    // would generate too many unnecessary events.\n    var requestAnimationFrame = globalWindow.requestAnimationFrame ||\n        globalWindow.mozRequestAnimationFrame ||\n        globalWindow.webkitRequestAnimationFrame ||\n        function (fn) {\n            return globalWindow.setTimeout(fn, 20);\n        };\n\n    var cancelAnimationFrame = globalWindow.cancelAnimationFrame ||\n        globalWindow.mozCancelAnimationFrame ||\n        globalWindow.webkitCancelAnimationFrame ||\n        function (timer) {\n            globalWindow.clearTimeout(timer);\n        };\n\n    /**\n     * Iterate over each of the provided element(s).\n     *\n     * @param {HTMLElement|HTMLElement[]} elements\n     * @param {Function}                  callback\n     */\n    function forEachElement(elements, callback){\n        var elementsType = Object.prototype.toString.call(elements);\n        var isCollectionTyped = ('[object Array]' === elementsType\n            || ('[object NodeList]' === elementsType)\n            || ('[object HTMLCollection]' === elementsType)\n            || ('[object Object]' === elementsType)\n            || ('undefined' !== typeof jQuery && elements instanceof jQuery) //jquery\n            || ('undefined' !== typeof Elements && elements instanceof Elements) //mootools\n        );\n        var i = 0, j = elements.length;\n        if (isCollectionTyped) {\n            for (; i < j; i++) {\n                callback(elements[i]);\n            }\n        } else {\n            callback(elements);\n        }\n    }\n\n    /**\n    * Get element size\n    * @param {HTMLElement} element\n    * @returns {Object} {width, height}\n    */\n    function getElementSize(element) {\n        if (!element.getBoundingClientRect) {\n            return {\n                width: element.offsetWidth,\n                height: element.offsetHeight\n            }\n        }\n\n        var rect = element.getBoundingClientRect();\n        return {\n            width: Math.round(rect.width),\n            height: Math.round(rect.height)\n        }\n    }\n\n    /**\n     * Apply CSS styles to element.\n     *\n     * @param {HTMLElement} element\n     * @param {Object} style\n     */\n    function setStyle(element, style) {\n        Object.keys(style).forEach(function(key) {\n            element.style[key] = style[key];\n        });\n    }\n\n    /**\n     * Class for dimension change detection.\n     *\n     * @param {Element|Element[]|Elements|jQuery} element\n     * @param {Function} callback\n     *\n     * @constructor\n     */\n    var ResizeSensor = function(element, callback) {\n        //Is used when checking in reset() only for invisible elements\n        var lastAnimationFrameForInvisibleCheck = 0;\n\n        /**\n         *\n         * @constructor\n         */\n        function EventQueue() {\n            var q = [];\n            this.add = function(ev) {\n                q.push(ev);\n            };\n\n            var i, j;\n            this.call = function(sizeInfo) {\n                for (i = 0, j = q.length; i < j; i++) {\n                    q[i].call(this, sizeInfo);\n                }\n            };\n\n            this.remove = function(ev) {\n                var newQueue = [];\n                for(i = 0, j = q.length; i < j; i++) {\n                    if(q[i] !== ev) newQueue.push(q[i]);\n                }\n                q = newQueue;\n            };\n\n            this.length = function() {\n                return q.length;\n            }\n        }\n\n        /**\n         *\n         * @param {HTMLElement} element\n         * @param {Function}    resized\n         */\n        function attachResizeEvent(element, resized) {\n            if (!element) return;\n            if (element.resizedAttached) {\n                element.resizedAttached.add(resized);\n                return;\n            }\n\n            element.resizedAttached = new EventQueue();\n            element.resizedAttached.add(resized);\n\n            element.resizeSensor = document.createElement('div');\n            element.resizeSensor.dir = 'ltr';\n            element.resizeSensor.className = 'resize-sensor';\n\n            var style = {\n                pointerEvents: 'none',\n                position: 'absolute',\n                left: '0px',\n                top: '0px',\n                right: '0px',\n                bottom: '0px',\n                overflow: 'hidden',\n                zIndex: '-1',\n                visibility: 'hidden',\n                maxWidth: '100%'\n            };\n            var styleChild = {\n                position: 'absolute',\n                left: '0px',\n                top: '0px',\n                transition: '0s',\n            };\n\n            setStyle(element.resizeSensor, style);\n\n            var expand = document.createElement('div');\n            expand.className = 'resize-sensor-expand';\n            setStyle(expand, style);\n\n            var expandChild = document.createElement('div');\n            setStyle(expandChild, styleChild);\n            expand.appendChild(expandChild);\n\n            var shrink = document.createElement('div');\n            shrink.className = 'resize-sensor-shrink';\n            setStyle(shrink, style);\n\n            var shrinkChild = document.createElement('div');\n            setStyle(shrinkChild, styleChild);\n            setStyle(shrinkChild, { width: '200%', height: '200%' });\n            shrink.appendChild(shrinkChild);\n\n            element.resizeSensor.appendChild(expand);\n            element.resizeSensor.appendChild(shrink);\n            element.appendChild(element.resizeSensor);\n\n            var computedStyle = window.getComputedStyle(element);\n            var position = computedStyle ? computedStyle.getPropertyValue('position') : null;\n            if ('absolute' !== position && 'relative' !== position && 'fixed' !== position && 'sticky' !== position) {\n                element.style.position = 'relative';\n            }\n\n            var dirty = false;\n\n            //last request animation frame id used in onscroll event\n            var rafId = 0;\n            var size = getElementSize(element);\n            var lastWidth = 0;\n            var lastHeight = 0;\n            var initialHiddenCheck = true;\n            lastAnimationFrameForInvisibleCheck = 0;\n\n            var resetExpandShrink = function () {\n                var width = element.offsetWidth;\n                var height = element.offsetHeight;\n\n                expandChild.style.width = (width + 10) + 'px';\n                expandChild.style.height = (height + 10) + 'px';\n\n                expand.scrollLeft = width + 10;\n                expand.scrollTop = height + 10;\n\n                shrink.scrollLeft = width + 10;\n                shrink.scrollTop = height + 10;\n            };\n\n            var reset = function() {\n                // Check if element is hidden\n                if (initialHiddenCheck) {\n                    var invisible = element.offsetWidth === 0 && element.offsetHeight === 0;\n                    if (invisible) {\n                        // Check in next frame\n                        if (!lastAnimationFrameForInvisibleCheck){\n                            lastAnimationFrameForInvisibleCheck = requestAnimationFrame(function(){\n                                lastAnimationFrameForInvisibleCheck = 0;\n                                reset();\n                            });\n                        }\n\n                        return;\n                    } else {\n                        // Stop checking\n                        initialHiddenCheck = false;\n                    }\n                }\n\n                resetExpandShrink();\n            };\n            element.resizeSensor.resetSensor = reset;\n\n            var onResized = function() {\n                rafId = 0;\n\n                if (!dirty) return;\n\n                lastWidth = size.width;\n                lastHeight = size.height;\n\n                if (element.resizedAttached) {\n                    element.resizedAttached.call(size);\n                }\n            };\n\n            var onScroll = function() {\n                size = getElementSize(element);\n                dirty = size.width !== lastWidth || size.height !== lastHeight;\n\n                if (dirty && !rafId) {\n                    rafId = requestAnimationFrame(onResized);\n                }\n\n                reset();\n            };\n\n            var addEvent = function(el, name, cb) {\n                if (el.attachEvent) {\n                    el.attachEvent('on' + name, cb);\n                } else {\n                    el.addEventListener(name, cb);\n                }\n            };\n\n            addEvent(expand, 'scroll', onScroll);\n            addEvent(shrink, 'scroll', onScroll);\n\n            // Fix for custom Elements and invisible elements\n            lastAnimationFrameForInvisibleCheck = requestAnimationFrame(function(){\n                lastAnimationFrameForInvisibleCheck = 0;\n                reset();\n            });\n        }\n\n        forEachElement(element, function(elem){\n            attachResizeEvent(elem, callback);\n        });\n\n        this.detach = function(ev) {\n            // clean up the unfinished animation frame to prevent a potential endless requestAnimationFrame of reset\n            if (!lastAnimationFrameForInvisibleCheck) {\n                cancelAnimationFrame(lastAnimationFrameForInvisibleCheck);\n                lastAnimationFrameForInvisibleCheck = 0;\n            }\n            ResizeSensor.detach(element, ev);\n        };\n\n        this.reset = function() {\n            element.resizeSensor.resetSensor();\n        };\n    };\n\n    ResizeSensor.reset = function(element) {\n        forEachElement(element, function(elem){\n            elem.resizeSensor.resetSensor();\n        });\n    };\n\n    ResizeSensor.detach = function(element, ev) {\n        forEachElement(element, function(elem){\n            if (!elem) return;\n            if(elem.resizedAttached && typeof ev === \"function\"){\n                elem.resizedAttached.remove(ev);\n                if(elem.resizedAttached.length()) return;\n            }\n            if (elem.resizeSensor) {\n                if (elem.contains(elem.resizeSensor)) {\n                    elem.removeChild(elem.resizeSensor);\n                }\n                delete elem.resizeSensor;\n                delete elem.resizedAttached;\n            }\n        });\n    };\n\n    if (typeof MutationObserver !== \"undefined\") {\n        var observer = new MutationObserver(function (mutations) {\n            for (var i in mutations) {\n                if (mutations.hasOwnProperty(i)) {\n                    var items = mutations[i].addedNodes;\n                    for (var j = 0; j < items.length; j++) {\n                        if (items[j].resizeSensor) {\n                            ResizeSensor.reset(items[j]);\n                        }\n                    }\n                }\n            }\n        });\n\n        document.addEventListener(\"DOMContentLoaded\", function (event) {\n            observer.observe(document.body, {\n                childList: true,\n                subtree: true,\n            });\n        });\n    }\n\n    return ResizeSensor;\n\n}));\n"]},"metadata":{},"sourceType":"script"}