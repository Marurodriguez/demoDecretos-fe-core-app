{"version":3,"sources":["./src/app/pages/cotizacion/cotizacion.module.ts","./src/app/pages/cotizacion/abm/cotizacion-abm.component.ts","./src/app/pages/cotizacion/abm/cotizacion-abm.component.html","./src/app/models/Cotizacion.model.ts","./src/app/pages/cotizacion/cotizacion-routing.module.ts","./src/app/pages/cotizacion/listado/cotizacion-listado.component.ts","./src/app/pages/cotizacion/listado/cotizacion-listado.component.html"],"names":[],"mappings":"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","file":"pages-cotizacion-cotizacion-module-es2015.js","sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from '@angular/core';\r\n\r\n\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgbModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\r\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\r\nimport { NgApexchartsModule } from 'ng-apexcharts';\r\nimport { ChartistModule } from 'ng-chartist';\r\nimport { ChartsModule } from 'ng2-charts';\r\nimport { ComponentsModule } from '../../../../../coreApp/src/app/shared/components.module';\r\nimport { PipeModule } from '../../../../../coreApp/src/app/shared/pipes/pipe.module';\r\nimport { ComponentsProyectModule } from '../../components/components-proyect.module';\r\nimport { SharedAppModule } from \"../../SharedApp.module\";\r\nimport { UsuarioModel } from \"../../models/Usuario.model\";\r\nimport { UserService } from \"../../services/User.service\";\r\nimport { CotizacionRoutingModule } from \"./cotizacion-routing.module\";\r\nimport { CotizacionListadoComponent } from \"./listado/cotizacion-listado.component\";\r\nimport { CotizacionAbmComponent } from \"./abm/cotizacion-abm.component\";\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ComponentsProyectModule,\r\n    ComponentsModule,\r\n    // CoreModule,\r\n    CotizacionRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ChartsModule,\r\n    ChartistModule,\r\n    NgxChartsModule,\r\n    NgApexchartsModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    NgxDatatableModule,\r\n    PipeModule,\r\n    NgbTooltipModule,\r\n    SharedAppModule\r\n  ],\r\n  exports: [],\r\n  declarations: [\r\n    CotizacionListadoComponent,\r\n    CotizacionAbmComponent\r\n  ],\r\n  providers: [\r\n\r\n  ],\r\n})\r\nexport class CotizacionModule { }\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\r\nimport { NgbCalendar, NgbDate, NgbDateStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\r\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\r\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\r\nimport { PaginateParametersModel } from '../../../../../../coreApp/src/app/models/PaginateParameters.model';\r\nimport { UserModel } from '../../../../../../coreApp/src/app/models/user.model';\r\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\r\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\r\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\r\nimport { SmSelectOptions } from '../../../../../../coreApp/src/app/shared/components/sm-select/sm-select.component';\r\nimport { AsientoModel } from '../../../models/Asiento.model';\r\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\r\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\r\nimport { EmpresaModel } from '../../../models/Empresa.model';\r\nimport { NegocioModel } from '../../../models/Negocio.model';\r\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\r\nimport { UserService } from '../../../services/User.service';\r\nimport { PageComponentInterface } from '../../_PageInterface/PageComponentInterface';\r\nimport swal from 'sweetalert2';\r\nimport { regExpEscape } from '@ng-bootstrap/ng-bootstrap/util/util';\r\n\r\n@Component({\r\n  selector: 'cotizacion-abm',\r\n  templateUrl: './cotizacion-abm.component.html',\r\n  styleUrls: ['./cotizacion-abm.component.scss']\r\n})\r\n\r\nexport class CotizacionAbmComponent implements PageComponentInterface{\r\n  /************************************************************************************************************************\r\n   * Inputs && Outputs && Properties\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n  /************************************************************************************************************************\r\n   * Variables\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n    model: NgbDateStruct;\r\n    today = this.calendar.getToday();\r\n\r\n    public asiento: AsientoModel = new AsientoModel();\r\n    public referencia: string = \"\";\r\n    public loaded: boolean = false;\r\n    public isCollapsed:boolean = false;\r\n    public rows:CuentaContableModel[] = [];\r\n    public negocioOptions: SmSelectOptions = new SmSelectOptions();\r\n    public empresas: EmpresaModel[]=[];\r\n    public initValue: NegocioModel;\r\n   /************************************************************************************************************************\r\n    * Constructor && Implements\r\n    *\r\n    ************************************************************************************************************************/\r\n   constructor(public dataService: DataService,\r\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\r\n               public router: Router, public route: ActivatedRoute,\r\n               public authUserService: AuthUserService, public serializer: UrlSerializer,\r\n               private calendar: NgbCalendar, private functionService: FunctionService,\r\n               public userService: UserService){\r\n\r\n    // let user: UserModel;\r\n    // user = this.authUserService.getUser();\r\n    // let empresas: EmpresaModel[] = user.getData(\"empresaList\",[]);\r\n    let negocios = this.userService.getEmpresaSelected().negocioList;\r\n    this.asiento.fechaObj = this.today;\r\n    this.initValue = negocios[0];\r\n    this.negocioOptions.bindLabel = \"nombre\";\r\n    this.negocioOptions.items = negocios;\r\n    \r\n    this.userService.setPageComponentActive(this);\r\n\r\n    console.log(this.userService.getPageComponentActive());\r\n   }\r\n\r\n\r\n\r\n   /************************************************************************************************************************\r\n    *\r\n    * Eventos\r\n    *\r\n    ************************************************************************************************************************/\r\n    ngOnInit() {\r\n    \r\n    }\r\n    changeEmpresa(empresaActual: EmpresaModel, empresaAnterior: EmpresaModel): void {\r\n        //alert(\"Cambio la empresa: \" + empresaActual.nombre);\r\n    }\r\n\r\n\r\n   /************************************************************************************************************************\r\n    * FUNCTIONS\r\n    *\r\n    ************************************************************************************************************************/\r\n\r\n    crearRegistro() {\r\n      \r\n    }\r\n\r\n    getTotalString(tipo:string): string{\r\n      return \"\";\r\n    }\r\n\r\n    getTotal(tipo:string){\r\n    \r\n    }\r\n    deleteRow(row: AsientoRegistroModel) {\r\n    \r\n    }\r\n\r\n    public validar(): boolean {\r\n      return true;\r\n    }\r\n\r\n\r\n    guardar(): boolean {\r\n      if(this.validar() == false){\r\n        return false;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    cancelar() {\r\n\r\n    }\r\n\r\n  /************************************************************************************************************************\r\n   *\r\n   * RESPONSE OK/ERROR\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n\r\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\r\n    //this.refreshComponent();\r\n    // switch(ws.enumUrl) {\r\n    //   case enumWS.CUENTA_CONTABLE_PAGINATE:\r\n    //     this.rows = data.content;\r\n    //     this.loaded = true;\r\n    //     this.cd.markForCheck();\r\n    //   break;\r\n    //   case enumWS.ASIENTO_SAVE:\r\n    //     swal.fire(\"!Guardado exitoso!\", \"Se ha guardado el registro correctamente\",\"success\");\r\n    //     this.asiento.registros = [];\r\n    //     this.asiento.descripcion = \"\";\r\n    //     this.asiento.referencia = \"\";\r\n    //     this.cd.markForCheck();\r\n\r\n    //   break;\r\n    // }\r\n   }\r\n\r\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\r\n    // this.loaded = true;\r\n    // this.rows = [];\r\n    // this.cd.markForCheck();\r\n   }\r\n}\r\n","<section id=\"collapse\">\r\n   <h1>Cotización ABM</h1>\r\n</section>\r\n","import { NgbDate } from \"@ng-bootstrap/ng-bootstrap\";\r\nimport { AbstractModel } from \"./Abstract.model\";\r\nimport { MonedaModel } from \"./Moneda.model\";\r\n\r\n\r\nexport class CotizacionModel extends AbstractModel {\r\n  public monedaOrigen: MonedaModel = new MonedaModel();\r\n  public monedaDestino: MonedaModel = new MonedaModel();\r\n  public fecha: string =  '';\r\n  public cotizacion: number = 0;\r\n\r\n  public editMode: boolean = false;\r\n  public cotOriginal: number = 0;\r\n  public ngbDate: NgbDate;\r\n  \r\n\r\n\r\n  //DTO:\r\n  public monedaOrigenId: number = 0;\r\n  public monedaDestinoId: number = 0;\r\n  public empresaId: number = 0;\r\n\r\n  constructor(){\r\n    super();\r\n  }\r\n\r\n}\r\n\r\n\r\n","import { CotizacionListadoComponent } from './listado/cotizacion-listado.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CotizacionAbmComponent } from './abm/cotizacion-abm.component';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  // { path: '',\r\n  //   redirectTo: '/listado',\r\n  //   pathMatch: 'full'\r\n  // },\r\n  {\r\n    path: 'listado',\r\n    component: CotizacionListadoComponent,\r\n    pathMatch: 'full',\r\n    data: {\r\n      title: 'Listado'\r\n    }\r\n  },\r\n  {\r\n    path: 'abm/:operation',\r\n    component: CotizacionAbmComponent,\r\n    data: {\r\n      title: 'Nueva Cotizacion',\r\n      operation: 'new'\r\n    }\r\n  }\r\n  // {\r\n  //   path: 'abm/:operation/:seccion/:uuid',\r\n  //   component: ClientesAbmComponent,\r\n  //   // pathMatch: 'full',\r\n  //   data: {\r\n  //     title: 'Cliente ABM',\r\n  //     operation: 'view'\r\n  //   }\r\n  // }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CotizacionRoutingModule { }\r\n","import { DatePipe } from '@angular/common';\r\nimport { ChangeDetectorRef, Component } from '@angular/core';\r\nimport { ActivatedRoute, Router, UrlSerializer } from '@angular/router';\r\nimport { NgbCalendar, NgbDate } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AppConfig } from '../../../../../../coreApp/src/app/app.config';\r\nimport { PaginateDataModel } from '../../../../../../coreApp/src/app/models/PaginateData.model';\r\nimport { PaginateListModel } from '../../../../../../coreApp/src/app/models/PaginateList.model';\r\nimport { DataService } from '../../../../../../coreApp/src/app/services/data.services';\r\nimport { FunctionService } from '../../../../../../coreApp/src/app/services/function.services';\r\nimport { AuthUserService } from '../../../../../../coreApp/src/app/shared/auth/auth-user.service';\r\nimport { AsientoModel } from '../../../models/Asiento.model';\r\nimport { AsientoRegistroModel } from '../../../models/AsientoRegistro.model';\r\nimport { CotizacionModel } from '../../../models/Cotizacion.model';\r\nimport { CuentaContableModel } from '../../../models/CuentaContable.model';\r\nimport { enumWS } from '../../../navigation/ws/ws-routes.config';\r\nimport { TitleBarService } from '../../../services/TitleBar.service';\r\nimport { UserService } from '../../../services/User.service';\r\nimport swal from 'sweetalert2';\r\nimport { MonedaModel } from '../../../models/Moneda.model';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'cotizacion-listado',\r\n  templateUrl: './cotizacion-listado.component.html',\r\n  styleUrls: ['./cotizacion-listado.component.scss']\r\n})\r\n\r\nexport class CotizacionListadoComponent {\r\n  /************************************************************************************************************************\r\n   * Inputs && Outputs && Properties\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n  /************************************************************************************************************************\r\n   * Variables\r\n   *\r\n   ************************************************************************************************************************/\r\n    public loaded: boolean = false;\r\n    public isCollapsed:boolean = false;\r\n    public cotizaciones:CotizacionModel[] = [];\r\n    public posAsiento: number = 0;\r\n    public fechaInicio: NgbDate = new NgbDate(2020,9,26);\r\n    public fechaFin: NgbDate = new NgbDate(2022,1,1);\r\n    public page: number = 0;\r\n    public size: number = 10;\r\n\r\n    \r\n    public loading: boolean = false; \r\n    public paginateData: PaginateDataModel = new PaginateDataModel();\r\n\r\n    public sizeAnt: number = this.size;\r\n    public pageAnt: number = this.page;\r\n    public fechaAnt:NgbDate = new NgbDate(2022,9,26);\r\n\r\n    public canEdit: boolean = true; // FLAG QUE SE ACTIVA PARA QUE SOLO SE PUEDA EDITAR O CREAR UNO A LA VEZ\r\n    /************************************************************************************************************************\r\n    * Constructor && Implements\r\n    *\r\n    ************************************************************************************************************************/\r\n   constructor(public dataService: DataService,\r\n               public appConfig: AppConfig, private cd: ChangeDetectorRef,\r\n               public router: Router, public route: ActivatedRoute,\r\n               public authUserService: AuthUserService, \r\n               public serializer: UrlSerializer, public functionService: FunctionService, public userService: UserService,\r\n               public calendar: NgbCalendar, public titleBarService: TitleBarService, public datePipe: DatePipe){\r\n    \r\n                 \r\n   }\r\n\r\n   getField(fieldName: string, row: CotizacionModel){\r\n    try {\r\n      switch(fieldName){\r\n        case \"fecha\":\r\n          const date: Date = this.functionService.getDateFromString(row.fecha, \"-\",1);\r\n          return this.functionService.formatDate(date);\r\n        break;\r\n        case \"cotizacion\":\r\n          return row.cotizacion;\r\n        break;\r\n      }\r\n      return \"\";\r\n    }  catch(ex){\r\n      return \"\";\r\n    }\r\n    \r\n   }\r\n\r\n\r\n   getMonedaTipo(cot: CotizacionModel) {\r\n    if(cot.editMode == true ) {\r\n      return 'select-large';\r\n    }else{\r\n      return 'label-large';\r\n    }\r\n   }\r\n   /**\r\n    * Crea una nueva fila\r\n    */\r\n   new(): boolean {\r\n    this.canEdit = false;\r\n    let cot = new CotizacionModel();\r\n    let today = new Date();\r\n    \r\n    let fecha = this.datePipe.transform(today,\"dd-MM-yyyy\");\r\n    if(fecha!=null){\r\n      cot.fecha = fecha;\r\n    }else{\r\n      cot.fecha = \"1-1-2000\";\r\n    }\r\n\r\n    // SUPER HARDCODE: TODO: ARREGLAR ESTO Y PERMITIR ELEGIR VARIAS MONEDAS\r\n    let firstElement\r\n\r\n    cot.ngbDate = this.functionService.getNgbDateFromString(cot.fecha,\"-\",1);\r\n    cot.editMode = true;\r\n  \r\n    cot.id = -1;\r\n    this.cotizaciones.unshift(cot);\r\n    return true;\r\n   }\r\n\r\n\r\n   clickEditButton(cot:CotizacionModel){\r\n    cot.editMode = true;\r\n    cot.cotOriginal = cot.cotizacion;\r\n    this.canEdit = false;\r\n    this.cd.markForCheck();\r\n    return true;\r\n   }\r\n\r\n   validate(cot: CotizacionModel): boolean{\r\n    if(cot.cotizacion <= 0){\r\n      swal.fire(\"Guardar\", \"La cotización es invalida.\",\"warning\");\r\n      return false;\r\n    }\r\n    if(cot.monedaOrigen == undefined || cot.monedaOrigen == null || cot.monedaOrigen?.id <= 0){\r\n      swal.fire(\"Guardar\", \"Seleccione una moneda de origen correcta\",\"warning\");\r\n      return false;\r\n    }\r\n    if(cot.monedaDestino== undefined || cot.monedaDestino == null || cot.monedaDestino?.id <= 0){\r\n      swal.fire(\"Guardar\", \"Seleccione una moneda de destino correcta\",\"warning\");\r\n      return false;\r\n    }\r\n    if(cot.monedaOrigen.id == cot.monedaDestino.id){\r\n      swal.fire(\"Guardar\", \"La moneda de origen y destino no pueden ser iguales.\",\"warning\");\r\n      return false;\r\n    }\r\n    if(cot.ngbDate.year>=2100 || cot.ngbDate.year<=1950){\r\n      swal.fire(\"Guardar\", \"El año es incorrecto.\",\"warning\");\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      cot.fecha = this.functionService.getStringFromNgbDate(cot.ngbDate,1);\r\n      if(cot.fecha == undefined){\r\n        swal.fire(\"Guardar\", \"La fecha es incorrecta.\",\"warning\");\r\n        return false;\r\n      }\r\n    }catch(ex){\r\n      swal.fire(\"Guardar\", \"La fecha es incorrecta.\",\"warning\");\r\n      return false;\r\n    }\r\n    return true;\r\n   }\r\n\r\n   clickSaveButton(cot:CotizacionModel){\r\n    if(this.validate(cot)==false){\r\n      return false;\r\n    }\r\n    \r\n    cot.editMode = false;\r\n    cot.monedaDestinoId = cot.monedaDestino.id;\r\n    cot.monedaOrigenId = cot.monedaOrigen.id;\r\n    cot.empresaId = this.userService.getIdEmpresaSelected();\r\n   \r\n\r\n\r\n    this.dataService.httpFunction(enumWS.COTIZACION_SAVE,this,cot);\r\n    this.cd.markForCheck();\r\n    \r\n    return true;\r\n   }\r\n   clickCancelButton(cot:CotizacionModel){\r\n    this.canEdit = true; \r\n    cot.editMode = false;\r\n\r\n    cot.cotizacion = cot.cotOriginal;\r\n    this.cd.markForCheck();\r\n    return true;\r\n   }\r\n   /************************************************************************************************************************\r\n    *\r\n    * Eventos\r\n    *\r\n    ************************************************************************************************************************/\r\n    ngOnInit() {\r\n      this.titleBarService.title = \"Administración de Cotizaciones\";\r\n      this.titleBarService.subTitle = \"Desde esta pantalla se ven los registros de las cotizaciones de las diferentes monedas\";\r\n      \r\n    }\r\n\r\n\r\n   /************************************************************************************************************************\r\n    * FUNCTIONS\r\n    *\r\n    ************************************************************************************************************************/\r\n    changeMonedaOrigenEvent(cot: CotizacionModel, moneda:MonedaModel){\r\n      cot.monedaOrigen = moneda;\r\n    }\r\n   \r\n    changeMonedaDestinoEvent(cot: CotizacionModel,moneda: MonedaModel){\r\n      cot.monedaDestino = moneda;\r\n    }\r\n\r\n    refresh(force: boolean){\r\n      this.canEdit = true;\r\n      this.pageAnt = this.page;\r\n      this.fechaAnt.day = this.fechaInicio.day;\r\n      this.fechaAnt.month = this.fechaInicio.month;\r\n      this.fechaAnt.year = this.fechaInicio.year;\r\n\r\n      let paginateListModel: PaginateListModel = new PaginateListModel(this.page,this.size);\r\n      paginateListModel.addParameter(\"empresa\",this.userService.getIdEmpresaSelected().toString());\r\n\r\n      //FechaInit! --> La fecha seleccionada\r\n      let fechaInit: string = this.fechaInicio.year + '-' + this.fechaInicio.month + '-' + this.fechaInicio.day + ' 00:00:01';\r\n      let fechaFin: string = this.fechaFin.year + '-' + this.fechaFin.month + '-' + this.fechaFin.day + ' 23:59:59';\r\n\r\n      paginateListModel.addParameter(\"fechaInicio\",fechaInit);\r\n      paginateListModel.addParameter(\"fechaFin\",fechaFin);\r\n      paginateListModel.addOrderField(\"fecha\",\"\");\r\n\r\n      this.dataService.httpFunction(enumWS.COTIZACION_PAGINATE,this,paginateListModel);\r\n\r\n\r\n      this.loading = true;\r\n    } \r\n   \r\n   \r\n   getClass(reg):string{\r\n      // try{\r\n      //   if(reg.debito > 0){\r\n      //     return \"reg-debe\";\r\n      //   }else{\r\n      //     return \"reg-haber\";\r\n      //   }\r\n      // }catch(ex){\r\n      //   return \"\";\r\n      // }\r\n      return \"\";\r\n\r\n    }\r\n\r\n    SetPage(paginate: PaginateListModel){\r\n      this.page = paginate.page;\r\n      this.size = paginate.size; \r\n      this.refresh(false);\r\n    }\r\n\r\n\r\n  /************************************************************************************************************************\r\n   *\r\n   * RESPONSE OK/ERROR\r\n   *\r\n   ************************************************************************************************************************/\r\n\r\n\r\n   responseOk(httpOperation:any, http: string, data:PaginateDataModel, ws:any ){\r\n      switch(ws.enumUrl) {\r\n        case enumWS.COTIZACION_PAGINATE:\r\n          this.paginateData = data;\r\n          this.cotizaciones = data.content;\r\n          for(let cot of this.cotizaciones){\r\n            cot.editMode = false; \r\n//            let date2:Date = this.functionService.getDateFromString(cot.fecha, \"-\",0);\r\n            let ngbDate = this.functionService.getNgbDateFromString(cot.fecha,\"-\",1);\r\n            if(ngbDate){\r\n              cot.ngbDate = ngbDate;\r\n            }\r\n          }\r\n          this.loaded = true;\r\n          this.cd.markForCheck();\r\n        break;\r\n        case enumWS.COTIZACION_SAVE:\r\n          this.refresh(true);\r\n          this.canEdit = true;\r\n        break;\r\n    }\r\n   }\r\n\r\n   responseError(urlResource: string,httpOperation: string, data: any, ws?: any){\r\n    // switch(ws.enumUrl) {\r\n    //   case enumWS.ASIENTO_PAGINATE_DTO:\r\n    //     alert(\"error en el paginado\");\r\n    //   break;\r\n    //  }\r\n    //swal.fire(\"Error\",data?.error?.developerMessage,);\r\n    swal.fire(\"Error\", data?.error?.developerMessage,'warning');\r\n    this.refresh(true);\r\n    this.canEdit = true;\r\n   }\r\n}\r\n","<section id=\"collapse\">\r\n    <div class=\"row mt-2 mb-2\">\r\n        <div class=\"col-8 col-md-6\">\r\n            <periodo-select [(fInicio)]=\"fechaInicio\" [(fFin)]=\"fechaFin\"></periodo-select>\r\n        </div>\r\n        <div class=\"col-4 col-md-3\">\r\n            <button class=\"btn btnl-lg btn-info mt-1\" (click)=\"refresh(true)\">CARGAR</button>\r\n        </div>\r\n        <div class=\"col-6 col-md-3\" *ngIf=\"canEdit==true\">\r\n            <button class=\"btn btnl-lg btn-primary mt-1\" (click)=\"new()\">Nuevo</button>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<ng-template [ngIf]=\"loaded\">\r\n    <div class=\"container-table\">\r\n        <table width=\"100%\" class=\"table table-transparent table-striped table-dark\">\r\n            <thead class=\"thead-dark\">\r\n                <th width=\"20%\">Fecha</th>\r\n                <th width=\"20%\">Moneda</th>\r\n                <th width=\"20%\">Moneda</th>\r\n                <th width=\"10%\">Cotización</th>\r\n                <th width=\"10%\"></th>\r\n            </thead>\r\n            <tbody>\r\n                <ng-template ngFor let-cotizacion [ngForOf]=\"cotizaciones\">\r\n                    <!-- <tr class=\"row-space\">\r\n                        <td colspan=\"100\" class=\"row-space\">\r\n                            <i class=\"far fa-book-open text-primary\" style=\"text-align: middle; font-size:1.5rem;\"></i>\r\n                        </td>\r\n                    </tr> -->\r\n                    <tr>\r\n                        <!-- fecha -->\r\n                        <td>\r\n                            <ng-template [ngIf]=\"cotizacion.editMode == false\">\r\n                                {{ getField(\"fecha\",cotizacion) }}\r\n                            </ng-template>\r\n                            <ng-template [ngIf]=\"cotizacion.editMode == true\">\r\n                                <periodo-select [tipo]=\"'fecha'\" [(fInicio)]=\"cotizacion.ngbDate\"></periodo-select>\r\n                            </ng-template>\r\n                        </td>\r\n                        <!-- Moneda Origen -->\r\n                        <td>\r\n                            <moneda-select [moneda]=\"cotizacion.monedaOrigen\" (changeEvent)=\"changeMonedaOrigenEvent(cotizacion,$event)\" [tipo]=\"getMonedaTipo(cotizacion)\"></moneda-select>\r\n                        </td>\r\n                        <!-- Moneda Destino -->\r\n                        <td>\r\n                            <moneda-select [moneda]=\"cotizacion.monedaDestino\" (changeEvent)=\"changeMonedaDestinoEvent(cotizacion,$event)\" [tipo]=\"getMonedaTipo(cotizacion)\"></moneda-select>\r\n                        </td>\r\n                        <!-- Cotizacion -->\r\n                        <td class=\"total d-flex d-inline-block\">\r\n                            <input class=\"form-control\"  [(ngModel)]=\"cotizacion.cotizacion\" [disabled]=\"cotizacion.editMode != true\" />\r\n                        </td>\r\n\r\n                        <td>\r\n                            <!-- cotizacion.editMode:{{cotizacion.editMode}}\r\n                            canEdit:{{canEdit == true}} -->\r\n                            <ng-template [ngIf]=\"cotizacion.editMode == false && canEdit == true \">\r\n                                <button type=\"button\" class=\"ml-2 btn btn-info\" (click)=\"clickEditButton(cotizacion)\" ngbTooltip=\"Editar Cotizacion\"><i class=\"fal fa-edit\"></i></button>\r\n                            </ng-template>\r\n                            <ng-template [ngIf]=\"cotizacion.editMode == true\">\r\n                                <button type=\"button\" class=\"ml-2 btn btn-danger\" (click)=\"clickCancelButton(cotizacion)\" ngbTooltip=\"Cancelar Cambios\"><i class=\"fas fa-ban\"></i></button>\r\n                                <button type=\"button\" class=\"ml-1 btn btn-success\" (click)=\"clickSaveButton(cotizacion)\" ngbTooltip=\"Guardar Cambios\"><i class=\"fal fa-check\"></i></button>\r\n                            </ng-template>\r\n                        </td>\r\n                    </tr>\r\n                    \r\n                    <!-- <tr class=\"row-space\"></tr> -->\r\n                </ng-template>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <footer class=\"mt-2\" [paginate]=\"paginateData\" (setPageEvent)=\"SetPage($event)\"></footer>\r\n</ng-template>"],"sourceRoot":"webpack:///"}